
Ext_Int_Class.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000ce6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c72  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000017  00800200  00800200  00000ce6  2**0
                  ALLOC
  3 .stab         000019bc  00000000  00000000  00000ce8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001803  00000000  00000000  000026a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00003ea7  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003eb8  2**2
                  CONTENTS, READONLY
  7 .debug_info   00000bbc  00000000  00000000  00003ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000b1a  00000000  00000000  00004ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  000055ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e6  00000000  00000000  000055e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	73 c0       	rjmp	.+230    	; 0xe8 <__dtors_end>
   2:	00 00       	nop
   4:	a8 c0       	rjmp	.+336    	; 0x156 <__vector_1>
   6:	00 00       	nop
   8:	dc c0       	rjmp	.+440    	; 0x1c2 <__vector_2>
   a:	00 00       	nop
   c:	10 c1       	rjmp	.+544    	; 0x22e <__vector_3>
   e:	00 00       	nop
  10:	44 c1       	rjmp	.+648    	; 0x29a <__vector_4>
  12:	00 00       	nop
  14:	78 c1       	rjmp	.+752    	; 0x306 <__vector_5>
  16:	00 00       	nop
  18:	ac c1       	rjmp	.+856    	; 0x372 <__vector_6>
  1a:	00 00       	nop
  1c:	e0 c1       	rjmp	.+960    	; 0x3de <__vector_7>
  1e:	00 00       	nop
  20:	14 c2       	rjmp	.+1064   	; 0x44a <__vector_8>
  22:	00 00       	nop
  24:	82 c0       	rjmp	.+260    	; 0x12a <__bad_interrupt>
  26:	00 00       	nop
  28:	80 c0       	rjmp	.+256    	; 0x12a <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7e c0       	rjmp	.+252    	; 0x12a <__bad_interrupt>
  2e:	00 00       	nop
  30:	7c c0       	rjmp	.+248    	; 0x12a <__bad_interrupt>
  32:	00 00       	nop
  34:	7a c0       	rjmp	.+244    	; 0x12a <__bad_interrupt>
  36:	00 00       	nop
  38:	78 c0       	rjmp	.+240    	; 0x12a <__bad_interrupt>
  3a:	00 00       	nop
  3c:	76 c0       	rjmp	.+236    	; 0x12a <__bad_interrupt>
  3e:	00 00       	nop
  40:	74 c0       	rjmp	.+232    	; 0x12a <__bad_interrupt>
  42:	00 00       	nop
  44:	72 c0       	rjmp	.+228    	; 0x12a <__bad_interrupt>
  46:	00 00       	nop
  48:	70 c0       	rjmp	.+224    	; 0x12a <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6e c0       	rjmp	.+220    	; 0x12a <__bad_interrupt>
  4e:	00 00       	nop
  50:	6c c0       	rjmp	.+216    	; 0x12a <__bad_interrupt>
  52:	00 00       	nop
  54:	6a c0       	rjmp	.+212    	; 0x12a <__bad_interrupt>
  56:	00 00       	nop
  58:	68 c0       	rjmp	.+208    	; 0x12a <__bad_interrupt>
  5a:	00 00       	nop
  5c:	66 c0       	rjmp	.+204    	; 0x12a <__bad_interrupt>
  5e:	00 00       	nop
  60:	64 c0       	rjmp	.+200    	; 0x12a <__bad_interrupt>
  62:	00 00       	nop
  64:	b2 c3       	rjmp	.+1892   	; 0x7ca <__vector_25>
  66:	00 00       	nop
  68:	e2 c3       	rjmp	.+1988   	; 0x82e <__vector_26>
  6a:	00 00       	nop
  6c:	5e c0       	rjmp	.+188    	; 0x12a <__bad_interrupt>
  6e:	00 00       	nop
  70:	5c c0       	rjmp	.+184    	; 0x12a <__bad_interrupt>
  72:	00 00       	nop
  74:	5a c0       	rjmp	.+180    	; 0x12a <__bad_interrupt>
  76:	00 00       	nop
  78:	58 c0       	rjmp	.+176    	; 0x12a <__bad_interrupt>
  7a:	00 00       	nop
  7c:	56 c0       	rjmp	.+172    	; 0x12a <__bad_interrupt>
  7e:	00 00       	nop
  80:	54 c0       	rjmp	.+168    	; 0x12a <__bad_interrupt>
  82:	00 00       	nop
  84:	52 c0       	rjmp	.+164    	; 0x12a <__bad_interrupt>
  86:	00 00       	nop
  88:	50 c0       	rjmp	.+160    	; 0x12a <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4e c0       	rjmp	.+156    	; 0x12a <__bad_interrupt>
  8e:	00 00       	nop
  90:	4c c0       	rjmp	.+152    	; 0x12a <__bad_interrupt>
  92:	00 00       	nop
  94:	4a c0       	rjmp	.+148    	; 0x12a <__bad_interrupt>
  96:	00 00       	nop
  98:	48 c0       	rjmp	.+144    	; 0x12a <__bad_interrupt>
  9a:	00 00       	nop
  9c:	46 c0       	rjmp	.+140    	; 0x12a <__bad_interrupt>
  9e:	00 00       	nop
  a0:	44 c0       	rjmp	.+136    	; 0x12a <__bad_interrupt>
  a2:	00 00       	nop
  a4:	42 c0       	rjmp	.+132    	; 0x12a <__bad_interrupt>
  a6:	00 00       	nop
  a8:	40 c0       	rjmp	.+128    	; 0x12a <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3e c0       	rjmp	.+124    	; 0x12a <__bad_interrupt>
  ae:	00 00       	nop
  b0:	3c c0       	rjmp	.+120    	; 0x12a <__bad_interrupt>
  b2:	00 00       	nop
  b4:	3a c0       	rjmp	.+116    	; 0x12a <__bad_interrupt>
  b6:	00 00       	nop
  b8:	38 c0       	rjmp	.+112    	; 0x12a <__bad_interrupt>
  ba:	00 00       	nop
  bc:	36 c0       	rjmp	.+108    	; 0x12a <__bad_interrupt>
  be:	00 00       	nop
  c0:	34 c0       	rjmp	.+104    	; 0x12a <__bad_interrupt>
  c2:	00 00       	nop
  c4:	32 c0       	rjmp	.+100    	; 0x12a <__bad_interrupt>
  c6:	00 00       	nop
  c8:	30 c0       	rjmp	.+96     	; 0x12a <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2e c0       	rjmp	.+92     	; 0x12a <__bad_interrupt>
  ce:	00 00       	nop
  d0:	2c c0       	rjmp	.+88     	; 0x12a <__bad_interrupt>
  d2:	00 00       	nop
  d4:	2a c0       	rjmp	.+84     	; 0x12a <__bad_interrupt>
  d6:	00 00       	nop
  d8:	28 c0       	rjmp	.+80     	; 0x12a <__bad_interrupt>
  da:	00 00       	nop
  dc:	26 c0       	rjmp	.+76     	; 0x12a <__bad_interrupt>
  de:	00 00       	nop
  e0:	24 c0       	rjmp	.+72     	; 0x12a <__bad_interrupt>
	...

000000e4 <__ctors_start>:
  e4:	ca 05       	cpc	r28, r10

000000e6 <__ctors_end>:
  e6:	d6 05       	cpc	r29, r6

000000e8 <__dtors_end>:
  e8:	11 24       	eor	r1, r1
  ea:	1f be       	out	0x3f, r1	; 63
  ec:	cf ef       	ldi	r28, 0xFF	; 255
  ee:	d1 e2       	ldi	r29, 0x21	; 33
  f0:	de bf       	out	0x3e, r29	; 62
  f2:	cd bf       	out	0x3d, r28	; 61
  f4:	00 e0       	ldi	r16, 0x00	; 0
  f6:	0c bf       	out	0x3c, r16	; 60

000000f8 <__do_clear_bss>:
  f8:	22 e0       	ldi	r18, 0x02	; 2
  fa:	a0 e0       	ldi	r26, 0x00	; 0
  fc:	b2 e0       	ldi	r27, 0x02	; 2
  fe:	01 c0       	rjmp	.+2      	; 0x102 <.do_clear_bss_start>

00000100 <.do_clear_bss_loop>:
 100:	1d 92       	st	X+, r1

00000102 <.do_clear_bss_start>:
 102:	a7 31       	cpi	r26, 0x17	; 23
 104:	b2 07       	cpc	r27, r18
 106:	e1 f7       	brne	.-8      	; 0x100 <.do_clear_bss_loop>

00000108 <__do_global_ctors>:
 108:	10 e0       	ldi	r17, 0x00	; 0
 10a:	c3 e7       	ldi	r28, 0x73	; 115
 10c:	d0 e0       	ldi	r29, 0x00	; 0
 10e:	00 e0       	ldi	r16, 0x00	; 0
 110:	05 c0       	rjmp	.+10     	; 0x11c <__do_global_ctors+0x14>
 112:	21 97       	sbiw	r28, 0x01	; 1
 114:	01 09       	sbc	r16, r1
 116:	80 2f       	mov	r24, r16
 118:	fe 01       	movw	r30, r28
 11a:	92 d5       	rcall	.+2852   	; 0xc40 <__tablejump2__>
 11c:	c2 37       	cpi	r28, 0x72	; 114
 11e:	d1 07       	cpc	r29, r17
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	08 07       	cpc	r16, r24
 124:	b1 f7       	brne	.-20     	; 0x112 <__do_global_ctors+0xa>
 126:	a5 d4       	rcall	.+2378   	; 0xa72 <main>
 128:	93 c5       	rjmp	.+2854   	; 0xc50 <__do_global_dtors>

0000012a <__bad_interrupt>:
 12a:	6a cf       	rjmp	.-300    	; 0x0 <__vectors>

0000012c <_ZN7EXT_INT7Ext_Int8callbackEv>:

      Ext_Int(Intx_t ID, ISC_t int_config, CALLBACK_t pcallback);
      ~Ext_Int(){};
      void enable();
      void disable();
      void callback(){(*_pcallback)();};
 12c:	cf 93       	push	r28
 12e:	df 93       	push	r29
 130:	1f 92       	push	r1
 132:	1f 92       	push	r1
 134:	cd b7       	in	r28, 0x3d	; 61
 136:	de b7       	in	r29, 0x3e	; 62
 138:	9a 83       	std	Y+2, r25	; 0x02
 13a:	89 83       	std	Y+1, r24	; 0x01
 13c:	89 81       	ldd	r24, Y+1	; 0x01
 13e:	9a 81       	ldd	r25, Y+2	; 0x02
 140:	fc 01       	movw	r30, r24
 142:	81 81       	ldd	r24, Z+1	; 0x01
 144:	92 81       	ldd	r25, Z+2	; 0x02
 146:	fc 01       	movw	r30, r24
 148:	19 95       	eicall
 14a:	00 00       	nop
 14c:	0f 90       	pop	r0
 14e:	0f 90       	pop	r0
 150:	df 91       	pop	r29
 152:	cf 91       	pop	r28
 154:	08 95       	ret

00000156 <__vector_1>:

using namespace EXT_INT;

    Ext_Int * Ext_Int::ExtInt_Singletons[8];

    ISR(INT0_vect){Ext_Int::ExtInt_Singletons[0]->callback();}
 156:	1f 92       	push	r1
 158:	0f 92       	push	r0
 15a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 15e:	0f 92       	push	r0
 160:	11 24       	eor	r1, r1
 162:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 166:	0f 92       	push	r0
 168:	2f 93       	push	r18
 16a:	3f 93       	push	r19
 16c:	4f 93       	push	r20
 16e:	5f 93       	push	r21
 170:	6f 93       	push	r22
 172:	7f 93       	push	r23
 174:	8f 93       	push	r24
 176:	9f 93       	push	r25
 178:	af 93       	push	r26
 17a:	bf 93       	push	r27
 17c:	ef 93       	push	r30
 17e:	ff 93       	push	r31
 180:	cf 93       	push	r28
 182:	df 93       	push	r29
 184:	cd b7       	in	r28, 0x3d	; 61
 186:	de b7       	in	r29, 0x3e	; 62
 188:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <_edata>
 18c:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <_edata+0x1>
 190:	cd df       	rcall	.-102    	; 0x12c <_ZN7EXT_INT7Ext_Int8callbackEv>
 192:	00 00       	nop
 194:	df 91       	pop	r29
 196:	cf 91       	pop	r28
 198:	ff 91       	pop	r31
 19a:	ef 91       	pop	r30
 19c:	bf 91       	pop	r27
 19e:	af 91       	pop	r26
 1a0:	9f 91       	pop	r25
 1a2:	8f 91       	pop	r24
 1a4:	7f 91       	pop	r23
 1a6:	6f 91       	pop	r22
 1a8:	5f 91       	pop	r21
 1aa:	4f 91       	pop	r20
 1ac:	3f 91       	pop	r19
 1ae:	2f 91       	pop	r18
 1b0:	0f 90       	pop	r0
 1b2:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 1b6:	0f 90       	pop	r0
 1b8:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 1bc:	0f 90       	pop	r0
 1be:	1f 90       	pop	r1
 1c0:	18 95       	reti

000001c2 <__vector_2>:

    ISR(INT1_vect){Ext_Int::ExtInt_Singletons[1]->callback();}
 1c2:	1f 92       	push	r1
 1c4:	0f 92       	push	r0
 1c6:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 1ca:	0f 92       	push	r0
 1cc:	11 24       	eor	r1, r1
 1ce:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 1d2:	0f 92       	push	r0
 1d4:	2f 93       	push	r18
 1d6:	3f 93       	push	r19
 1d8:	4f 93       	push	r20
 1da:	5f 93       	push	r21
 1dc:	6f 93       	push	r22
 1de:	7f 93       	push	r23
 1e0:	8f 93       	push	r24
 1e2:	9f 93       	push	r25
 1e4:	af 93       	push	r26
 1e6:	bf 93       	push	r27
 1e8:	ef 93       	push	r30
 1ea:	ff 93       	push	r31
 1ec:	cf 93       	push	r28
 1ee:	df 93       	push	r29
 1f0:	cd b7       	in	r28, 0x3d	; 61
 1f2:	de b7       	in	r29, 0x3e	; 62
 1f4:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <_edata+0x2>
 1f8:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <_edata+0x3>
 1fc:	97 df       	rcall	.-210    	; 0x12c <_ZN7EXT_INT7Ext_Int8callbackEv>
 1fe:	00 00       	nop
 200:	df 91       	pop	r29
 202:	cf 91       	pop	r28
 204:	ff 91       	pop	r31
 206:	ef 91       	pop	r30
 208:	bf 91       	pop	r27
 20a:	af 91       	pop	r26
 20c:	9f 91       	pop	r25
 20e:	8f 91       	pop	r24
 210:	7f 91       	pop	r23
 212:	6f 91       	pop	r22
 214:	5f 91       	pop	r21
 216:	4f 91       	pop	r20
 218:	3f 91       	pop	r19
 21a:	2f 91       	pop	r18
 21c:	0f 90       	pop	r0
 21e:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 222:	0f 90       	pop	r0
 224:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 228:	0f 90       	pop	r0
 22a:	1f 90       	pop	r1
 22c:	18 95       	reti

0000022e <__vector_3>:

    ISR(INT2_vect){Ext_Int::ExtInt_Singletons[2]->callback();}
 22e:	1f 92       	push	r1
 230:	0f 92       	push	r0
 232:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 236:	0f 92       	push	r0
 238:	11 24       	eor	r1, r1
 23a:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 23e:	0f 92       	push	r0
 240:	2f 93       	push	r18
 242:	3f 93       	push	r19
 244:	4f 93       	push	r20
 246:	5f 93       	push	r21
 248:	6f 93       	push	r22
 24a:	7f 93       	push	r23
 24c:	8f 93       	push	r24
 24e:	9f 93       	push	r25
 250:	af 93       	push	r26
 252:	bf 93       	push	r27
 254:	ef 93       	push	r30
 256:	ff 93       	push	r31
 258:	cf 93       	push	r28
 25a:	df 93       	push	r29
 25c:	cd b7       	in	r28, 0x3d	; 61
 25e:	de b7       	in	r29, 0x3e	; 62
 260:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <_edata+0x4>
 264:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <_edata+0x5>
 268:	61 df       	rcall	.-318    	; 0x12c <_ZN7EXT_INT7Ext_Int8callbackEv>
 26a:	00 00       	nop
 26c:	df 91       	pop	r29
 26e:	cf 91       	pop	r28
 270:	ff 91       	pop	r31
 272:	ef 91       	pop	r30
 274:	bf 91       	pop	r27
 276:	af 91       	pop	r26
 278:	9f 91       	pop	r25
 27a:	8f 91       	pop	r24
 27c:	7f 91       	pop	r23
 27e:	6f 91       	pop	r22
 280:	5f 91       	pop	r21
 282:	4f 91       	pop	r20
 284:	3f 91       	pop	r19
 286:	2f 91       	pop	r18
 288:	0f 90       	pop	r0
 28a:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 28e:	0f 90       	pop	r0
 290:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 294:	0f 90       	pop	r0
 296:	1f 90       	pop	r1
 298:	18 95       	reti

0000029a <__vector_4>:

    ISR(INT3_vect){Ext_Int::ExtInt_Singletons[3]->callback();}
 29a:	1f 92       	push	r1
 29c:	0f 92       	push	r0
 29e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 2a2:	0f 92       	push	r0
 2a4:	11 24       	eor	r1, r1
 2a6:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 2aa:	0f 92       	push	r0
 2ac:	2f 93       	push	r18
 2ae:	3f 93       	push	r19
 2b0:	4f 93       	push	r20
 2b2:	5f 93       	push	r21
 2b4:	6f 93       	push	r22
 2b6:	7f 93       	push	r23
 2b8:	8f 93       	push	r24
 2ba:	9f 93       	push	r25
 2bc:	af 93       	push	r26
 2be:	bf 93       	push	r27
 2c0:	ef 93       	push	r30
 2c2:	ff 93       	push	r31
 2c4:	cf 93       	push	r28
 2c6:	df 93       	push	r29
 2c8:	cd b7       	in	r28, 0x3d	; 61
 2ca:	de b7       	in	r29, 0x3e	; 62
 2cc:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <_edata+0x6>
 2d0:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <_edata+0x7>
 2d4:	2b df       	rcall	.-426    	; 0x12c <_ZN7EXT_INT7Ext_Int8callbackEv>
 2d6:	00 00       	nop
 2d8:	df 91       	pop	r29
 2da:	cf 91       	pop	r28
 2dc:	ff 91       	pop	r31
 2de:	ef 91       	pop	r30
 2e0:	bf 91       	pop	r27
 2e2:	af 91       	pop	r26
 2e4:	9f 91       	pop	r25
 2e6:	8f 91       	pop	r24
 2e8:	7f 91       	pop	r23
 2ea:	6f 91       	pop	r22
 2ec:	5f 91       	pop	r21
 2ee:	4f 91       	pop	r20
 2f0:	3f 91       	pop	r19
 2f2:	2f 91       	pop	r18
 2f4:	0f 90       	pop	r0
 2f6:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 2fa:	0f 90       	pop	r0
 2fc:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 300:	0f 90       	pop	r0
 302:	1f 90       	pop	r1
 304:	18 95       	reti

00000306 <__vector_5>:

    ISR(INT4_vect){Ext_Int::ExtInt_Singletons[4]->callback();}
 306:	1f 92       	push	r1
 308:	0f 92       	push	r0
 30a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 30e:	0f 92       	push	r0
 310:	11 24       	eor	r1, r1
 312:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 316:	0f 92       	push	r0
 318:	2f 93       	push	r18
 31a:	3f 93       	push	r19
 31c:	4f 93       	push	r20
 31e:	5f 93       	push	r21
 320:	6f 93       	push	r22
 322:	7f 93       	push	r23
 324:	8f 93       	push	r24
 326:	9f 93       	push	r25
 328:	af 93       	push	r26
 32a:	bf 93       	push	r27
 32c:	ef 93       	push	r30
 32e:	ff 93       	push	r31
 330:	cf 93       	push	r28
 332:	df 93       	push	r29
 334:	cd b7       	in	r28, 0x3d	; 61
 336:	de b7       	in	r29, 0x3e	; 62
 338:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <_edata+0x8>
 33c:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <_edata+0x9>
 340:	f5 de       	rcall	.-534    	; 0x12c <_ZN7EXT_INT7Ext_Int8callbackEv>
 342:	00 00       	nop
 344:	df 91       	pop	r29
 346:	cf 91       	pop	r28
 348:	ff 91       	pop	r31
 34a:	ef 91       	pop	r30
 34c:	bf 91       	pop	r27
 34e:	af 91       	pop	r26
 350:	9f 91       	pop	r25
 352:	8f 91       	pop	r24
 354:	7f 91       	pop	r23
 356:	6f 91       	pop	r22
 358:	5f 91       	pop	r21
 35a:	4f 91       	pop	r20
 35c:	3f 91       	pop	r19
 35e:	2f 91       	pop	r18
 360:	0f 90       	pop	r0
 362:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 366:	0f 90       	pop	r0
 368:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 36c:	0f 90       	pop	r0
 36e:	1f 90       	pop	r1
 370:	18 95       	reti

00000372 <__vector_6>:

    ISR(INT5_vect){Ext_Int::ExtInt_Singletons[5]->callback();}
 372:	1f 92       	push	r1
 374:	0f 92       	push	r0
 376:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 37a:	0f 92       	push	r0
 37c:	11 24       	eor	r1, r1
 37e:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 382:	0f 92       	push	r0
 384:	2f 93       	push	r18
 386:	3f 93       	push	r19
 388:	4f 93       	push	r20
 38a:	5f 93       	push	r21
 38c:	6f 93       	push	r22
 38e:	7f 93       	push	r23
 390:	8f 93       	push	r24
 392:	9f 93       	push	r25
 394:	af 93       	push	r26
 396:	bf 93       	push	r27
 398:	ef 93       	push	r30
 39a:	ff 93       	push	r31
 39c:	cf 93       	push	r28
 39e:	df 93       	push	r29
 3a0:	cd b7       	in	r28, 0x3d	; 61
 3a2:	de b7       	in	r29, 0x3e	; 62
 3a4:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <_edata+0xa>
 3a8:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <_edata+0xb>
 3ac:	bf de       	rcall	.-642    	; 0x12c <_ZN7EXT_INT7Ext_Int8callbackEv>
 3ae:	00 00       	nop
 3b0:	df 91       	pop	r29
 3b2:	cf 91       	pop	r28
 3b4:	ff 91       	pop	r31
 3b6:	ef 91       	pop	r30
 3b8:	bf 91       	pop	r27
 3ba:	af 91       	pop	r26
 3bc:	9f 91       	pop	r25
 3be:	8f 91       	pop	r24
 3c0:	7f 91       	pop	r23
 3c2:	6f 91       	pop	r22
 3c4:	5f 91       	pop	r21
 3c6:	4f 91       	pop	r20
 3c8:	3f 91       	pop	r19
 3ca:	2f 91       	pop	r18
 3cc:	0f 90       	pop	r0
 3ce:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 3d2:	0f 90       	pop	r0
 3d4:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 3d8:	0f 90       	pop	r0
 3da:	1f 90       	pop	r1
 3dc:	18 95       	reti

000003de <__vector_7>:

    ISR(INT6_vect){Ext_Int::ExtInt_Singletons[6]->callback();}
 3de:	1f 92       	push	r1
 3e0:	0f 92       	push	r0
 3e2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 3e6:	0f 92       	push	r0
 3e8:	11 24       	eor	r1, r1
 3ea:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 3ee:	0f 92       	push	r0
 3f0:	2f 93       	push	r18
 3f2:	3f 93       	push	r19
 3f4:	4f 93       	push	r20
 3f6:	5f 93       	push	r21
 3f8:	6f 93       	push	r22
 3fa:	7f 93       	push	r23
 3fc:	8f 93       	push	r24
 3fe:	9f 93       	push	r25
 400:	af 93       	push	r26
 402:	bf 93       	push	r27
 404:	ef 93       	push	r30
 406:	ff 93       	push	r31
 408:	cf 93       	push	r28
 40a:	df 93       	push	r29
 40c:	cd b7       	in	r28, 0x3d	; 61
 40e:	de b7       	in	r29, 0x3e	; 62
 410:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <_edata+0xc>
 414:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <_edata+0xd>
 418:	89 de       	rcall	.-750    	; 0x12c <_ZN7EXT_INT7Ext_Int8callbackEv>
 41a:	00 00       	nop
 41c:	df 91       	pop	r29
 41e:	cf 91       	pop	r28
 420:	ff 91       	pop	r31
 422:	ef 91       	pop	r30
 424:	bf 91       	pop	r27
 426:	af 91       	pop	r26
 428:	9f 91       	pop	r25
 42a:	8f 91       	pop	r24
 42c:	7f 91       	pop	r23
 42e:	6f 91       	pop	r22
 430:	5f 91       	pop	r21
 432:	4f 91       	pop	r20
 434:	3f 91       	pop	r19
 436:	2f 91       	pop	r18
 438:	0f 90       	pop	r0
 43a:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 43e:	0f 90       	pop	r0
 440:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 444:	0f 90       	pop	r0
 446:	1f 90       	pop	r1
 448:	18 95       	reti

0000044a <__vector_8>:

    ISR(INT7_vect){Ext_Int::ExtInt_Singletons[7]->callback();}
 44a:	1f 92       	push	r1
 44c:	0f 92       	push	r0
 44e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 452:	0f 92       	push	r0
 454:	11 24       	eor	r1, r1
 456:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 45a:	0f 92       	push	r0
 45c:	2f 93       	push	r18
 45e:	3f 93       	push	r19
 460:	4f 93       	push	r20
 462:	5f 93       	push	r21
 464:	6f 93       	push	r22
 466:	7f 93       	push	r23
 468:	8f 93       	push	r24
 46a:	9f 93       	push	r25
 46c:	af 93       	push	r26
 46e:	bf 93       	push	r27
 470:	ef 93       	push	r30
 472:	ff 93       	push	r31
 474:	cf 93       	push	r28
 476:	df 93       	push	r29
 478:	cd b7       	in	r28, 0x3d	; 61
 47a:	de b7       	in	r29, 0x3e	; 62
 47c:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <_edata+0xe>
 480:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <_edata+0xf>
 484:	53 de       	rcall	.-858    	; 0x12c <_ZN7EXT_INT7Ext_Int8callbackEv>
 486:	00 00       	nop
 488:	df 91       	pop	r29
 48a:	cf 91       	pop	r28
 48c:	ff 91       	pop	r31
 48e:	ef 91       	pop	r30
 490:	bf 91       	pop	r27
 492:	af 91       	pop	r26
 494:	9f 91       	pop	r25
 496:	8f 91       	pop	r24
 498:	7f 91       	pop	r23
 49a:	6f 91       	pop	r22
 49c:	5f 91       	pop	r21
 49e:	4f 91       	pop	r20
 4a0:	3f 91       	pop	r19
 4a2:	2f 91       	pop	r18
 4a4:	0f 90       	pop	r0
 4a6:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 4aa:	0f 90       	pop	r0
 4ac:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 4b0:	0f 90       	pop	r0
 4b2:	1f 90       	pop	r1
 4b4:	18 95       	reti

000004b6 <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE>:


    Ext_Int::Ext_Int(Intx_t ID, ISC_t int_config, CALLBACK_t pcallback){
 4b6:	cf 93       	push	r28
 4b8:	df 93       	push	r29
 4ba:	cd b7       	in	r28, 0x3d	; 61
 4bc:	de b7       	in	r29, 0x3e	; 62
 4be:	27 97       	sbiw	r28, 0x07	; 7
 4c0:	0f b6       	in	r0, 0x3f	; 63
 4c2:	f8 94       	cli
 4c4:	de bf       	out	0x3e, r29	; 62
 4c6:	0f be       	out	0x3f, r0	; 63
 4c8:	cd bf       	out	0x3d, r28	; 61
 4ca:	9b 83       	std	Y+3, r25	; 0x03
 4cc:	8a 83       	std	Y+2, r24	; 0x02
 4ce:	6c 83       	std	Y+4, r22	; 0x04
 4d0:	4d 83       	std	Y+5, r20	; 0x05
 4d2:	3f 83       	std	Y+7, r19	; 0x07
 4d4:	2e 83       	std	Y+6, r18	; 0x06
 4d6:	8a 81       	ldd	r24, Y+2	; 0x02
 4d8:	9b 81       	ldd	r25, Y+3	; 0x03
 4da:	e7 d0       	rcall	.+462    	; 0x6aa <_ZN9SingletonIN7EXT_INT7Ext_IntEEC1Ev>
            uint8_t msk = ( (ID % 4 )*2);
 4dc:	8c 81       	ldd	r24, Y+4	; 0x04
 4de:	83 70       	andi	r24, 0x03	; 3
 4e0:	88 0f       	add	r24, r24
 4e2:	89 83       	std	Y+1, r24	; 0x01
            disable();
 4e4:	8a 81       	ldd	r24, Y+2	; 0x02
 4e6:	9b 81       	ldd	r25, Y+3	; 0x03
 4e8:	ba d0       	rcall	.+372    	; 0x65e <_ZN7EXT_INT7Ext_Int7disableEv>
            if(ID & 16){
 4ea:	8c 81       	ldd	r24, Y+4	; 0x04
 4ec:	88 2f       	mov	r24, r24
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	80 71       	andi	r24, 0x10	; 16
 4f2:	99 27       	eor	r25, r25
 4f4:	89 2b       	or	r24, r25
 4f6:	31 f0       	breq	.+12     	; 0x504 <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE+0x4e>
                _AB = true;
 4f8:	8a 81       	ldd	r24, Y+2	; 0x02
 4fa:	9b 81       	ldd	r25, Y+3	; 0x03
 4fc:	21 e0       	ldi	r18, 0x01	; 1
 4fe:	fc 01       	movw	r30, r24
 500:	23 83       	std	Z+3, r18	; 0x03
 502:	04 c0       	rjmp	.+8      	; 0x50c <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE+0x56>
                //EICRB = (EICRB & ~(3 << msk)) | (int_config << msk);
            }else{
                _AB = false;
 504:	8a 81       	ldd	r24, Y+2	; 0x02
 506:	9b 81       	ldd	r25, Y+3	; 0x03
 508:	fc 01       	movw	r30, r24
 50a:	13 82       	std	Z+3, r1	; 0x03
                //EICRA = (EICRA & ~(3 << msk)) | (int_config << msk);
            }
            EICR(_AB) &= ~(EICR_mode((ID & ~(4)), 3));
 50c:	8a 81       	ldd	r24, Y+2	; 0x02
 50e:	9b 81       	ldd	r25, Y+3	; 0x03
 510:	fc 01       	movw	r30, r24
 512:	83 81       	ldd	r24, Z+3	; 0x03
 514:	88 2f       	mov	r24, r24
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	87 59       	subi	r24, 0x97	; 151
 51a:	9f 4f       	sbci	r25, 0xFF	; 255
 51c:	9c 01       	movw	r18, r24
 51e:	8a 81       	ldd	r24, Y+2	; 0x02
 520:	9b 81       	ldd	r25, Y+3	; 0x03
 522:	fc 01       	movw	r30, r24
 524:	83 81       	ldd	r24, Z+3	; 0x03
 526:	88 2f       	mov	r24, r24
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	87 59       	subi	r24, 0x97	; 151
 52c:	9f 4f       	sbci	r25, 0xFF	; 255
 52e:	fc 01       	movw	r30, r24
 530:	80 81       	ld	r24, Z
 532:	68 2f       	mov	r22, r24
 534:	8c 81       	ldd	r24, Y+4	; 0x04
 536:	88 2f       	mov	r24, r24
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	8b 7f       	andi	r24, 0xFB	; 251
 53c:	ac 01       	movw	r20, r24
 53e:	44 0f       	add	r20, r20
 540:	55 1f       	adc	r21, r21
 542:	83 e0       	ldi	r24, 0x03	; 3
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	02 c0       	rjmp	.+4      	; 0x54c <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE+0x96>
 548:	88 0f       	add	r24, r24
 54a:	99 1f       	adc	r25, r25
 54c:	4a 95       	dec	r20
 54e:	e2 f7       	brpl	.-8      	; 0x548 <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE+0x92>
 550:	80 95       	com	r24
 552:	86 23       	and	r24, r22
 554:	f9 01       	movw	r30, r18
 556:	80 83       	st	Z, r24
            EICR(_AB) |= EICR_mode((ID & ~(4)), int_config);
 558:	8a 81       	ldd	r24, Y+2	; 0x02
 55a:	9b 81       	ldd	r25, Y+3	; 0x03
 55c:	fc 01       	movw	r30, r24
 55e:	83 81       	ldd	r24, Z+3	; 0x03
 560:	88 2f       	mov	r24, r24
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	87 59       	subi	r24, 0x97	; 151
 566:	9f 4f       	sbci	r25, 0xFF	; 255
 568:	ac 01       	movw	r20, r24
 56a:	8a 81       	ldd	r24, Y+2	; 0x02
 56c:	9b 81       	ldd	r25, Y+3	; 0x03
 56e:	fc 01       	movw	r30, r24
 570:	83 81       	ldd	r24, Z+3	; 0x03
 572:	88 2f       	mov	r24, r24
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	87 59       	subi	r24, 0x97	; 151
 578:	9f 4f       	sbci	r25, 0xFF	; 255
 57a:	fc 01       	movw	r30, r24
 57c:	80 81       	ld	r24, Z
 57e:	68 2f       	mov	r22, r24
 580:	8d 81       	ldd	r24, Y+5	; 0x05
 582:	88 2f       	mov	r24, r24
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	2c 81       	ldd	r18, Y+4	; 0x04
 588:	22 2f       	mov	r18, r18
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	2b 7f       	andi	r18, 0xFB	; 251
 58e:	22 0f       	add	r18, r18
 590:	33 1f       	adc	r19, r19
 592:	02 c0       	rjmp	.+4      	; 0x598 <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE+0xe2>
 594:	88 0f       	add	r24, r24
 596:	99 1f       	adc	r25, r25
 598:	2a 95       	dec	r18
 59a:	e2 f7       	brpl	.-8      	; 0x594 <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE+0xde>
 59c:	86 2b       	or	r24, r22
 59e:	fa 01       	movw	r30, r20
 5a0:	80 83       	st	Z, r24
            EIFR |= MSK(ID);
 5a2:	8c e3       	ldi	r24, 0x3C	; 60
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	2c e3       	ldi	r18, 0x3C	; 60
 5a8:	30 e0       	ldi	r19, 0x00	; 0
 5aa:	f9 01       	movw	r30, r18
 5ac:	20 81       	ld	r18, Z
 5ae:	62 2f       	mov	r22, r18
 5b0:	2c 81       	ldd	r18, Y+4	; 0x04
 5b2:	42 2f       	mov	r20, r18
 5b4:	50 e0       	ldi	r21, 0x00	; 0
 5b6:	21 e0       	ldi	r18, 0x01	; 1
 5b8:	30 e0       	ldi	r19, 0x00	; 0
 5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE+0x10a>
 5bc:	22 0f       	add	r18, r18
 5be:	33 1f       	adc	r19, r19
 5c0:	4a 95       	dec	r20
 5c2:	e2 f7       	brpl	.-8      	; 0x5bc <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE+0x106>
 5c4:	26 2b       	or	r18, r22
 5c6:	fc 01       	movw	r30, r24
 5c8:	20 83       	st	Z, r18

            _pcallback = pcallback;
 5ca:	8a 81       	ldd	r24, Y+2	; 0x02
 5cc:	9b 81       	ldd	r25, Y+3	; 0x03
 5ce:	2e 81       	ldd	r18, Y+6	; 0x06
 5d0:	3f 81       	ldd	r19, Y+7	; 0x07
 5d2:	fc 01       	movw	r30, r24
 5d4:	32 83       	std	Z+2, r19	; 0x02
 5d6:	21 83       	std	Z+1, r18	; 0x01
            _id = ID;
 5d8:	8a 81       	ldd	r24, Y+2	; 0x02
 5da:	9b 81       	ldd	r25, Y+3	; 0x03
 5dc:	2c 81       	ldd	r18, Y+4	; 0x04
 5de:	fc 01       	movw	r30, r24
 5e0:	20 83       	st	Z, r18
            ExtInt_Singletons[_id] = this;
 5e2:	8a 81       	ldd	r24, Y+2	; 0x02
 5e4:	9b 81       	ldd	r25, Y+3	; 0x03
 5e6:	fc 01       	movw	r30, r24
 5e8:	80 81       	ld	r24, Z
 5ea:	88 2f       	mov	r24, r24
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	88 0f       	add	r24, r24
 5f0:	99 1f       	adc	r25, r25
 5f2:	80 50       	subi	r24, 0x00	; 0
 5f4:	9e 4f       	sbci	r25, 0xFE	; 254
 5f6:	2a 81       	ldd	r18, Y+2	; 0x02
 5f8:	3b 81       	ldd	r19, Y+3	; 0x03
 5fa:	fc 01       	movw	r30, r24
 5fc:	31 83       	std	Z+1, r19	; 0x01
 5fe:	20 83       	st	Z, r18
    }
 600:	00 00       	nop
 602:	27 96       	adiw	r28, 0x07	; 7
 604:	0f b6       	in	r0, 0x3f	; 63
 606:	f8 94       	cli
 608:	de bf       	out	0x3e, r29	; 62
 60a:	0f be       	out	0x3f, r0	; 63
 60c:	cd bf       	out	0x3d, r28	; 61
 60e:	df 91       	pop	r29
 610:	cf 91       	pop	r28
 612:	08 95       	ret

00000614 <_ZN7EXT_INT7Ext_Int6enableEv>:

    void Ext_Int::enable(){EIMSK  |= MSK(_id);}
 614:	cf 93       	push	r28
 616:	df 93       	push	r29
 618:	1f 92       	push	r1
 61a:	1f 92       	push	r1
 61c:	cd b7       	in	r28, 0x3d	; 61
 61e:	de b7       	in	r29, 0x3e	; 62
 620:	9a 83       	std	Y+2, r25	; 0x02
 622:	89 83       	std	Y+1, r24	; 0x01
 624:	8d e3       	ldi	r24, 0x3D	; 61
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	2d e3       	ldi	r18, 0x3D	; 61
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	f9 01       	movw	r30, r18
 62e:	20 81       	ld	r18, Z
 630:	62 2f       	mov	r22, r18
 632:	29 81       	ldd	r18, Y+1	; 0x01
 634:	3a 81       	ldd	r19, Y+2	; 0x02
 636:	f9 01       	movw	r30, r18
 638:	20 81       	ld	r18, Z
 63a:	42 2f       	mov	r20, r18
 63c:	50 e0       	ldi	r21, 0x00	; 0
 63e:	21 e0       	ldi	r18, 0x01	; 1
 640:	30 e0       	ldi	r19, 0x00	; 0
 642:	02 c0       	rjmp	.+4      	; 0x648 <_ZN7EXT_INT7Ext_Int6enableEv+0x34>
 644:	22 0f       	add	r18, r18
 646:	33 1f       	adc	r19, r19
 648:	4a 95       	dec	r20
 64a:	e2 f7       	brpl	.-8      	; 0x644 <_ZN7EXT_INT7Ext_Int6enableEv+0x30>
 64c:	26 2b       	or	r18, r22
 64e:	fc 01       	movw	r30, r24
 650:	20 83       	st	Z, r18
 652:	00 00       	nop
 654:	0f 90       	pop	r0
 656:	0f 90       	pop	r0
 658:	df 91       	pop	r29
 65a:	cf 91       	pop	r28
 65c:	08 95       	ret

0000065e <_ZN7EXT_INT7Ext_Int7disableEv>:
    void Ext_Int::disable(){EIMSK  &= ~(MSK(_id));}
 65e:	cf 93       	push	r28
 660:	df 93       	push	r29
 662:	1f 92       	push	r1
 664:	1f 92       	push	r1
 666:	cd b7       	in	r28, 0x3d	; 61
 668:	de b7       	in	r29, 0x3e	; 62
 66a:	9a 83       	std	Y+2, r25	; 0x02
 66c:	89 83       	std	Y+1, r24	; 0x01
 66e:	8d e3       	ldi	r24, 0x3D	; 61
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	2d e3       	ldi	r18, 0x3D	; 61
 674:	30 e0       	ldi	r19, 0x00	; 0
 676:	f9 01       	movw	r30, r18
 678:	20 81       	ld	r18, Z
 67a:	62 2f       	mov	r22, r18
 67c:	29 81       	ldd	r18, Y+1	; 0x01
 67e:	3a 81       	ldd	r19, Y+2	; 0x02
 680:	f9 01       	movw	r30, r18
 682:	20 81       	ld	r18, Z
 684:	42 2f       	mov	r20, r18
 686:	50 e0       	ldi	r21, 0x00	; 0
 688:	21 e0       	ldi	r18, 0x01	; 1
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	02 c0       	rjmp	.+4      	; 0x692 <_ZN7EXT_INT7Ext_Int7disableEv+0x34>
 68e:	22 0f       	add	r18, r18
 690:	33 1f       	adc	r19, r19
 692:	4a 95       	dec	r20
 694:	e2 f7       	brpl	.-8      	; 0x68e <_ZN7EXT_INT7Ext_Int7disableEv+0x30>
 696:	20 95       	com	r18
 698:	26 23       	and	r18, r22
 69a:	fc 01       	movw	r30, r24
 69c:	20 83       	st	Z, r18
 69e:	00 00       	nop
 6a0:	0f 90       	pop	r0
 6a2:	0f 90       	pop	r0
 6a4:	df 91       	pop	r29
 6a6:	cf 91       	pop	r28
 6a8:	08 95       	ret

000006aa <_ZN9SingletonIN7EXT_INT7Ext_IntEEC1Ev>:
#define SINGLETON_H_

template<typename T>
class Singleton {
public:
    Singleton() { _singleton = static_cast<T*>(this); }
 6aa:	cf 93       	push	r28
 6ac:	df 93       	push	r29
 6ae:	1f 92       	push	r1
 6b0:	1f 92       	push	r1
 6b2:	cd b7       	in	r28, 0x3d	; 61
 6b4:	de b7       	in	r29, 0x3e	; 62
 6b6:	9a 83       	std	Y+2, r25	; 0x02
 6b8:	89 83       	std	Y+1, r24	; 0x01
 6ba:	89 81       	ldd	r24, Y+1	; 0x01
 6bc:	9a 81       	ldd	r25, Y+2	; 0x02
 6be:	90 93 11 02 	sts	0x0211, r25	; 0x800211 <_ZN9SingletonIN7EXT_INT7Ext_IntEE10_singletonE+0x1>
 6c2:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <_ZN9SingletonIN7EXT_INT7Ext_IntEE10_singletonE>
 6c6:	00 00       	nop
 6c8:	0f 90       	pop	r0
 6ca:	0f 90       	pop	r0
 6cc:	df 91       	pop	r29
 6ce:	cf 91       	pop	r28
 6d0:	08 95       	ret

000006d2 <_ZN4UARTC1EiNS_13DoubleSpeed_tENS_10DataBits_tENS_8Parity_tENS_9StopBit_tE>:

#include "UART.h"
#include <avr/io.h>
#include <avr/interrupt.h>

UART::UART(int baud, DoubleSpeed_t speed,DataBits_t data, Parity_t parity, StopBit_t stop) {
 6d2:	ef 92       	push	r14
 6d4:	0f 93       	push	r16
 6d6:	cf 93       	push	r28
 6d8:	df 93       	push	r29
 6da:	cd b7       	in	r28, 0x3d	; 61
 6dc:	de b7       	in	r29, 0x3e	; 62
 6de:	2a 97       	sbiw	r28, 0x0a	; 10
 6e0:	0f b6       	in	r0, 0x3f	; 63
 6e2:	f8 94       	cli
 6e4:	de bf       	out	0x3e, r29	; 62
 6e6:	0f be       	out	0x3f, r0	; 63
 6e8:	cd bf       	out	0x3d, r28	; 61
 6ea:	9c 83       	std	Y+4, r25	; 0x04
 6ec:	8b 83       	std	Y+3, r24	; 0x03
 6ee:	7e 83       	std	Y+6, r23	; 0x06
 6f0:	6d 83       	std	Y+5, r22	; 0x05
 6f2:	4f 83       	std	Y+7, r20	; 0x07
 6f4:	28 87       	std	Y+8, r18	; 0x08
 6f6:	09 87       	std	Y+9, r16	; 0x09
 6f8:	ea 86       	std	Y+10, r14	; 0x0a
 6fa:	8b 81       	ldd	r24, Y+3	; 0x03
 6fc:	9c 81       	ldd	r25, Y+4	; 0x04
 6fe:	28 d1       	rcall	.+592    	; 0x950 <_ZN9SingletonI4UARTEC1Ev>
  // Equation for Calculating UBRR Value:
  uint16_t UBRRn = (F_CPU/16/baud-1);
 700:	8d 81       	ldd	r24, Y+5	; 0x05
 702:	9e 81       	ldd	r25, Y+6	; 0x06
 704:	9c 01       	movw	r18, r24
 706:	99 0f       	add	r25, r25
 708:	44 0b       	sbc	r20, r20
 70a:	55 0b       	sbc	r21, r21
 70c:	80 e4       	ldi	r24, 0x40	; 64
 70e:	92 e4       	ldi	r25, 0x42	; 66
 710:	af e0       	ldi	r26, 0x0F	; 15
 712:	b0 e0       	ldi	r27, 0x00	; 0
 714:	bc 01       	movw	r22, r24
 716:	cd 01       	movw	r24, r26
 718:	55 d2       	rcall	.+1194   	; 0xbc4 <__divmodsi4>
 71a:	da 01       	movw	r26, r20
 71c:	c9 01       	movw	r24, r18
 71e:	01 97       	sbiw	r24, 0x01	; 1
 720:	9a 83       	std	Y+2, r25	; 0x02

  self()->new_data = false;
 722:	89 83       	std	Y+1, r24	; 0x01
 724:	3b d1       	rcall	.+630    	; 0x99c <_ZN9SingletonI4UARTE4selfEv>
 726:	fc 01       	movw	r30, r24
 728:	10 82       	st	Z, r1

  UBRR0 = UBRRn;
 72a:	84 ec       	ldi	r24, 0xC4	; 196
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	29 81       	ldd	r18, Y+1	; 0x01
 730:	3a 81       	ldd	r19, Y+2	; 0x02
 732:	fc 01       	movw	r30, r24
 734:	31 83       	std	Z+1, r19	; 0x01
 736:	20 83       	st	Z, r18
  UCSR0A |= speed;
 738:	80 ec       	ldi	r24, 0xC0	; 192
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	20 ec       	ldi	r18, 0xC0	; 192
 73e:	30 e0       	ldi	r19, 0x00	; 0
 740:	f9 01       	movw	r30, r18
 742:	30 81       	ld	r19, Z
 744:	2f 81       	ldd	r18, Y+7	; 0x07
 746:	23 2b       	or	r18, r19
 748:	fc 01       	movw	r30, r24
 74a:	20 83       	st	Z, r18
  UCSR0B |=  (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0);
 74c:	81 ec       	ldi	r24, 0xC1	; 193
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	21 ec       	ldi	r18, 0xC1	; 193
 752:	30 e0       	ldi	r19, 0x00	; 0
 754:	f9 01       	movw	r30, r18
 756:	20 81       	ld	r18, Z
 758:	28 6b       	ori	r18, 0xB8	; 184
 75a:	fc 01       	movw	r30, r24
 75c:	20 83       	st	Z, r18
  UCSR0C = data | parity | stop;
 75e:	82 ec       	ldi	r24, 0xC2	; 194
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	38 85       	ldd	r19, Y+8	; 0x08
 764:	29 85       	ldd	r18, Y+9	; 0x09
 766:	32 2b       	or	r19, r18
 768:	2a 85       	ldd	r18, Y+10	; 0x0a
 76a:	23 2b       	or	r18, r19
 76c:	fc 01       	movw	r30, r24
 76e:	20 83       	st	Z, r18
}
 770:	00 00       	nop
 772:	2a 96       	adiw	r28, 0x0a	; 10
 774:	0f b6       	in	r0, 0x3f	; 63
 776:	f8 94       	cli
 778:	de bf       	out	0x3e, r29	; 62
 77a:	0f be       	out	0x3f, r0	; 63
 77c:	cd bf       	out	0x3d, r28	; 61
 77e:	df 91       	pop	r29
 780:	cf 91       	pop	r28
 782:	0f 91       	pop	r16
 784:	ef 90       	pop	r14
 786:	08 95       	ret

00000788 <_ZN4UARTD1Ev>:

UART::~UART() {}
 788:	cf 93       	push	r28
 78a:	df 93       	push	r29
 78c:	1f 92       	push	r1
 78e:	1f 92       	push	r1
 790:	cd b7       	in	r28, 0x3d	; 61
 792:	de b7       	in	r29, 0x3e	; 62
 794:	9a 83       	std	Y+2, r25	; 0x02
 796:	89 83       	std	Y+1, r24	; 0x01
 798:	89 81       	ldd	r24, Y+1	; 0x01
 79a:	9a 81       	ldd	r25, Y+2	; 0x02
 79c:	ed d0       	rcall	.+474    	; 0x978 <_ZN9SingletonI4UARTED1Ev>
 79e:	00 00       	nop
 7a0:	0f 90       	pop	r0
 7a2:	0f 90       	pop	r0
 7a4:	df 91       	pop	r29
 7a6:	cf 91       	pop	r28
 7a8:	08 95       	ret

000007aa <_ZN4UART8has_dataEv>:

bool UART::has_data(){
 7aa:	cf 93       	push	r28
 7ac:	df 93       	push	r29
 7ae:	1f 92       	push	r1
 7b0:	1f 92       	push	r1
 7b2:	cd b7       	in	r28, 0x3d	; 61
 7b4:	de b7       	in	r29, 0x3e	; 62
 7b6:	9a 83       	std	Y+2, r25	; 0x02
  return self()->new_data;
 7b8:	89 83       	std	Y+1, r24	; 0x01
 7ba:	f0 d0       	rcall	.+480    	; 0x99c <_ZN9SingletonI4UARTE4selfEv>
 7bc:	fc 01       	movw	r30, r24
 7be:	80 81       	ld	r24, Z
}
 7c0:	0f 90       	pop	r0
 7c2:	0f 90       	pop	r0
 7c4:	df 91       	pop	r29
 7c6:	cf 91       	pop	r28
 7c8:	08 95       	ret

000007ca <__vector_25>:

ISR(USART0_RX_vect){
 7ca:	1f 92       	push	r1
 7cc:	0f 92       	push	r0
 7ce:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 7d2:	0f 92       	push	r0
 7d4:	11 24       	eor	r1, r1
 7d6:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 7da:	0f 92       	push	r0
 7dc:	2f 93       	push	r18
 7de:	3f 93       	push	r19
 7e0:	4f 93       	push	r20
 7e2:	5f 93       	push	r21
 7e4:	6f 93       	push	r22
 7e6:	7f 93       	push	r23
 7e8:	8f 93       	push	r24
 7ea:	9f 93       	push	r25
 7ec:	af 93       	push	r26
 7ee:	bf 93       	push	r27
 7f0:	ef 93       	push	r30
 7f2:	ff 93       	push	r31
 7f4:	cf 93       	push	r28
 7f6:	df 93       	push	r29
 7f8:	cd b7       	in	r28, 0x3d	; 61
  UART::rx_ISR();
 7fa:	de b7       	in	r29, 0x3e	; 62
 7fc:	66 d0       	rcall	.+204    	; 0x8ca <_ZN4UART6rx_ISREv>
}
 7fe:	00 00       	nop
 800:	df 91       	pop	r29
 802:	cf 91       	pop	r28
 804:	ff 91       	pop	r31
 806:	ef 91       	pop	r30
 808:	bf 91       	pop	r27
 80a:	af 91       	pop	r26
 80c:	9f 91       	pop	r25
 80e:	8f 91       	pop	r24
 810:	7f 91       	pop	r23
 812:	6f 91       	pop	r22
 814:	5f 91       	pop	r21
 816:	4f 91       	pop	r20
 818:	3f 91       	pop	r19
 81a:	2f 91       	pop	r18
 81c:	0f 90       	pop	r0
 81e:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 822:	0f 90       	pop	r0
 824:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 828:	0f 90       	pop	r0
 82a:	1f 90       	pop	r1
 82c:	18 95       	reti

0000082e <__vector_26>:

ISR(USART0_UDRE_vect){
 82e:	1f 92       	push	r1
 830:	0f 92       	push	r0
 832:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 836:	0f 92       	push	r0
 838:	11 24       	eor	r1, r1
 83a:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 83e:	0f 92       	push	r0
 840:	2f 93       	push	r18
 842:	3f 93       	push	r19
 844:	4f 93       	push	r20
 846:	5f 93       	push	r21
 848:	6f 93       	push	r22
 84a:	7f 93       	push	r23
 84c:	8f 93       	push	r24
 84e:	9f 93       	push	r25
 850:	af 93       	push	r26
 852:	bf 93       	push	r27
 854:	ef 93       	push	r30
 856:	ff 93       	push	r31
 858:	cf 93       	push	r28
 85a:	df 93       	push	r29
 85c:	cd b7       	in	r28, 0x3d	; 61
  UART::tx_ISR();
 85e:	de b7       	in	r29, 0x3e	; 62
 860:	18 d0       	rcall	.+48     	; 0x892 <_ZN4UART6tx_ISREv>
}
 862:	00 00       	nop
 864:	df 91       	pop	r29
 866:	cf 91       	pop	r28
 868:	ff 91       	pop	r31
 86a:	ef 91       	pop	r30
 86c:	bf 91       	pop	r27
 86e:	af 91       	pop	r26
 870:	9f 91       	pop	r25
 872:	8f 91       	pop	r24
 874:	7f 91       	pop	r23
 876:	6f 91       	pop	r22
 878:	5f 91       	pop	r21
 87a:	4f 91       	pop	r20
 87c:	3f 91       	pop	r19
 87e:	2f 91       	pop	r18
 880:	0f 90       	pop	r0
 882:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 886:	0f 90       	pop	r0
 888:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 88c:	0f 90       	pop	r0
 88e:	1f 90       	pop	r1
 890:	18 95       	reti

00000892 <_ZN4UART6tx_ISREv>:

void UART::tx_ISR(){
 892:	0f 93       	push	r16
 894:	1f 93       	push	r17
 896:	cf 93       	push	r28
 898:	df 93       	push	r29
 89a:	cd b7       	in	r28, 0x3d	; 61
 89c:	de b7       	in	r29, 0x3e	; 62
  UDR0 = self()->tx_buff;
 89e:	06 ec       	ldi	r16, 0xC6	; 198
 8a0:	10 e0       	ldi	r17, 0x00	; 0
 8a2:	7c d0       	rcall	.+248    	; 0x99c <_ZN9SingletonI4UARTE4selfEv>
 8a4:	fc 01       	movw	r30, r24
 8a6:	82 81       	ldd	r24, Z+2	; 0x02
 8a8:	f8 01       	movw	r30, r16
 8aa:	80 83       	st	Z, r24
  UCSR0B &=  ~(1<<UDRIE0);
 8ac:	81 ec       	ldi	r24, 0xC1	; 193
 8ae:	90 e0       	ldi	r25, 0x00	; 0
 8b0:	21 ec       	ldi	r18, 0xC1	; 193
 8b2:	30 e0       	ldi	r19, 0x00	; 0
 8b4:	f9 01       	movw	r30, r18
 8b6:	20 81       	ld	r18, Z
 8b8:	2f 7d       	andi	r18, 0xDF	; 223
 8ba:	fc 01       	movw	r30, r24
 8bc:	20 83       	st	Z, r18
}
 8be:	00 00       	nop
 8c0:	df 91       	pop	r29
 8c2:	cf 91       	pop	r28
 8c4:	1f 91       	pop	r17
 8c6:	0f 91       	pop	r16
 8c8:	08 95       	ret

000008ca <_ZN4UART6rx_ISREv>:

void UART::rx_ISR(){
 8ca:	cf 93       	push	r28
 8cc:	df 93       	push	r29
 8ce:	cd b7       	in	r28, 0x3d	; 61
  self()->rx_buff = UDR0;
 8d0:	de b7       	in	r29, 0x3e	; 62
 8d2:	64 d0       	rcall	.+200    	; 0x99c <_ZN9SingletonI4UARTE4selfEv>
 8d4:	9c 01       	movw	r18, r24
 8d6:	86 ec       	ldi	r24, 0xC6	; 198
 8d8:	90 e0       	ldi	r25, 0x00	; 0
 8da:	fc 01       	movw	r30, r24
 8dc:	80 81       	ld	r24, Z
 8de:	f9 01       	movw	r30, r18
  self()->new_data = true;
 8e0:	81 83       	std	Z+1, r24	; 0x01
 8e2:	5c d0       	rcall	.+184    	; 0x99c <_ZN9SingletonI4UARTE4selfEv>
 8e4:	21 e0       	ldi	r18, 0x01	; 1
 8e6:	fc 01       	movw	r30, r24
 8e8:	20 83       	st	Z, r18
}
 8ea:	00 00       	nop
 8ec:	df 91       	pop	r29
 8ee:	cf 91       	pop	r28
 8f0:	08 95       	ret

000008f2 <_ZN4UART3putEh>:

void UART::put(unsigned char data) {
 8f2:	cf 93       	push	r28
 8f4:	df 93       	push	r29
 8f6:	00 d0       	rcall	.+0      	; 0x8f8 <_ZN4UART3putEh+0x6>
 8f8:	cd b7       	in	r28, 0x3d	; 61
 8fa:	de b7       	in	r29, 0x3e	; 62
 8fc:	9a 83       	std	Y+2, r25	; 0x02
 8fe:	89 83       	std	Y+1, r24	; 0x01
  self()->tx_buff = data;
 900:	6b 83       	std	Y+3, r22	; 0x03
 902:	4c d0       	rcall	.+152    	; 0x99c <_ZN9SingletonI4UARTE4selfEv>
 904:	2b 81       	ldd	r18, Y+3	; 0x03
 906:	fc 01       	movw	r30, r24
 908:	22 83       	std	Z+2, r18	; 0x02
  UCSR0B |=  (1<<UDRIE0);
 90a:	81 ec       	ldi	r24, 0xC1	; 193
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	21 ec       	ldi	r18, 0xC1	; 193
 910:	30 e0       	ldi	r19, 0x00	; 0
 912:	f9 01       	movw	r30, r18
 914:	20 81       	ld	r18, Z
 916:	20 62       	ori	r18, 0x20	; 32
 918:	fc 01       	movw	r30, r24
 91a:	20 83       	st	Z, r18
}
 91c:	00 00       	nop
 91e:	0f 90       	pop	r0
 920:	0f 90       	pop	r0
 922:	0f 90       	pop	r0
 924:	df 91       	pop	r29
 926:	cf 91       	pop	r28
 928:	08 95       	ret

0000092a <_ZN4UART3getEv>:
  int pos = 0;
  for(pos = 0; *(str+pos) != 0; pos++) put((unsigned char)*(str+pos));

}

unsigned char UART::get() {
 92a:	cf 93       	push	r28
 92c:	df 93       	push	r29
 92e:	1f 92       	push	r1
 930:	1f 92       	push	r1
 932:	cd b7       	in	r28, 0x3d	; 61
 934:	de b7       	in	r29, 0x3e	; 62
 936:	9a 83       	std	Y+2, r25	; 0x02
  self()->new_data = false;
 938:	89 83       	std	Y+1, r24	; 0x01
 93a:	30 d0       	rcall	.+96     	; 0x99c <_ZN9SingletonI4UARTE4selfEv>
 93c:	fc 01       	movw	r30, r24
  return self()->rx_buff;
 93e:	10 82       	st	Z, r1
 940:	2d d0       	rcall	.+90     	; 0x99c <_ZN9SingletonI4UARTE4selfEv>
 942:	fc 01       	movw	r30, r24
 944:	81 81       	ldd	r24, Z+1	; 0x01
}
 946:	0f 90       	pop	r0
 948:	0f 90       	pop	r0
 94a:	df 91       	pop	r29
 94c:	cf 91       	pop	r28
 94e:	08 95       	ret

00000950 <_ZN9SingletonI4UARTEC1Ev>:
 950:	cf 93       	push	r28
 952:	df 93       	push	r29
 954:	1f 92       	push	r1
 956:	1f 92       	push	r1
 958:	cd b7       	in	r28, 0x3d	; 61
 95a:	de b7       	in	r29, 0x3e	; 62
 95c:	9a 83       	std	Y+2, r25	; 0x02
 95e:	89 83       	std	Y+1, r24	; 0x01
 960:	89 81       	ldd	r24, Y+1	; 0x01
 962:	9a 81       	ldd	r25, Y+2	; 0x02
 964:	90 93 13 02 	sts	0x0213, r25	; 0x800213 <_ZN9SingletonI4UARTE10_singletonE+0x1>
 968:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <_ZN9SingletonI4UARTE10_singletonE>
 96c:	00 00       	nop
 96e:	0f 90       	pop	r0
 970:	0f 90       	pop	r0
 972:	df 91       	pop	r29
 974:	cf 91       	pop	r28
 976:	08 95       	ret

00000978 <_ZN9SingletonI4UARTED1Ev>:
    ~Singleton() { _singleton = 0; }
 978:	cf 93       	push	r28
 97a:	df 93       	push	r29
 97c:	1f 92       	push	r1
 97e:	1f 92       	push	r1
 980:	cd b7       	in	r28, 0x3d	; 61
 982:	de b7       	in	r29, 0x3e	; 62
 984:	9a 83       	std	Y+2, r25	; 0x02
 986:	89 83       	std	Y+1, r24	; 0x01
 988:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <_ZN9SingletonI4UARTE10_singletonE+0x1>
 98c:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <_ZN9SingletonI4UARTE10_singletonE>
 990:	00 00       	nop
 992:	0f 90       	pop	r0
 994:	0f 90       	pop	r0
 996:	df 91       	pop	r29
 998:	cf 91       	pop	r28
 99a:	08 95       	ret

0000099c <_ZN9SingletonI4UARTE4selfEv>:

    static T * self() { return _singleton; }
 99c:	cf 93       	push	r28
 99e:	df 93       	push	r29
 9a0:	cd b7       	in	r28, 0x3d	; 61
 9a2:	de b7       	in	r29, 0x3e	; 62
 9a4:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <_ZN9SingletonI4UARTE10_singletonE>
 9a8:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <_ZN9SingletonI4UARTE10_singletonE+0x1>
 9ac:	df 91       	pop	r29
 9ae:	cf 91       	pop	r28
 9b0:	08 95       	ret

000009b2 <_Z12int0_handlerv>:
#define F_CPU 16000000
using namespace EXT_INT;

UART uart(9600, UART::disable, UART::eight_bits, UART::none, UART::one);

void int0_handler(void){
 9b2:	cf 93       	push	r28
 9b4:	df 93       	push	r29
 9b6:	cd b7       	in	r28, 0x3d	; 61
 9b8:	de b7       	in	r29, 0x3e	; 62
	uart.put('0');
 9ba:	60 e3       	ldi	r22, 0x30	; 48
 9bc:	84 e1       	ldi	r24, 0x14	; 20
 9be:	92 e0       	ldi	r25, 0x02	; 2
 9c0:	98 df       	rcall	.-208    	; 0x8f2 <_ZN4UART3putEh>
	return;
 9c2:	00 00       	nop
}
 9c4:	df 91       	pop	r29
 9c6:	cf 91       	pop	r28
 9c8:	08 95       	ret

000009ca <_Z12int1_handlerv>:

void int1_handler(void){
 9ca:	cf 93       	push	r28
 9cc:	df 93       	push	r29
 9ce:	cd b7       	in	r28, 0x3d	; 61
 9d0:	de b7       	in	r29, 0x3e	; 62
	uart.put('1');
 9d2:	61 e3       	ldi	r22, 0x31	; 49
 9d4:	84 e1       	ldi	r24, 0x14	; 20
 9d6:	92 e0       	ldi	r25, 0x02	; 2
 9d8:	8c df       	rcall	.-232    	; 0x8f2 <_ZN4UART3putEh>
	return;
 9da:	00 00       	nop
}
 9dc:	df 91       	pop	r29
 9de:	cf 91       	pop	r28
 9e0:	08 95       	ret

000009e2 <_Z12int2_handlerv>:

void int2_handler(void){
 9e2:	cf 93       	push	r28
 9e4:	df 93       	push	r29
 9e6:	cd b7       	in	r28, 0x3d	; 61
 9e8:	de b7       	in	r29, 0x3e	; 62
	uart.put('2');
 9ea:	62 e3       	ldi	r22, 0x32	; 50
 9ec:	84 e1       	ldi	r24, 0x14	; 20
 9ee:	92 e0       	ldi	r25, 0x02	; 2
 9f0:	80 df       	rcall	.-256    	; 0x8f2 <_ZN4UART3putEh>
	return;
 9f2:	00 00       	nop
}
 9f4:	df 91       	pop	r29
 9f6:	cf 91       	pop	r28
 9f8:	08 95       	ret

000009fa <_Z12int3_handlerv>:

void int3_handler(void){
 9fa:	cf 93       	push	r28
 9fc:	df 93       	push	r29
 9fe:	cd b7       	in	r28, 0x3d	; 61
 a00:	de b7       	in	r29, 0x3e	; 62
	uart.put('3');
 a02:	63 e3       	ldi	r22, 0x33	; 51
 a04:	84 e1       	ldi	r24, 0x14	; 20
 a06:	92 e0       	ldi	r25, 0x02	; 2
 a08:	74 df       	rcall	.-280    	; 0x8f2 <_ZN4UART3putEh>
	return;
 a0a:	00 00       	nop
}
 a0c:	df 91       	pop	r29
 a0e:	cf 91       	pop	r28
 a10:	08 95       	ret

00000a12 <_Z12int4_handlerv>:

void int4_handler(void){
 a12:	cf 93       	push	r28
 a14:	df 93       	push	r29
 a16:	cd b7       	in	r28, 0x3d	; 61
 a18:	de b7       	in	r29, 0x3e	; 62
	uart.put('4');
 a1a:	64 e3       	ldi	r22, 0x34	; 52
 a1c:	84 e1       	ldi	r24, 0x14	; 20
 a1e:	92 e0       	ldi	r25, 0x02	; 2
 a20:	68 df       	rcall	.-304    	; 0x8f2 <_ZN4UART3putEh>
	return;
 a22:	00 00       	nop
}
 a24:	df 91       	pop	r29
 a26:	cf 91       	pop	r28
 a28:	08 95       	ret

00000a2a <_Z12int5_handlerv>:

void int5_handler(void){
 a2a:	cf 93       	push	r28
 a2c:	df 93       	push	r29
 a2e:	cd b7       	in	r28, 0x3d	; 61
 a30:	de b7       	in	r29, 0x3e	; 62
	uart.put('5');
 a32:	65 e3       	ldi	r22, 0x35	; 53
 a34:	84 e1       	ldi	r24, 0x14	; 20
 a36:	92 e0       	ldi	r25, 0x02	; 2
 a38:	5c df       	rcall	.-328    	; 0x8f2 <_ZN4UART3putEh>
	return;
 a3a:	00 00       	nop
}
 a3c:	df 91       	pop	r29
 a3e:	cf 91       	pop	r28
 a40:	08 95       	ret

00000a42 <_Z12int6_handlerv>:

void int6_handler(void){
 a42:	cf 93       	push	r28
 a44:	df 93       	push	r29
 a46:	cd b7       	in	r28, 0x3d	; 61
 a48:	de b7       	in	r29, 0x3e	; 62
	uart.put('6');
 a4a:	66 e3       	ldi	r22, 0x36	; 54
 a4c:	84 e1       	ldi	r24, 0x14	; 20
 a4e:	92 e0       	ldi	r25, 0x02	; 2
 a50:	50 df       	rcall	.-352    	; 0x8f2 <_ZN4UART3putEh>
	return;
 a52:	00 00       	nop
}
 a54:	df 91       	pop	r29
 a56:	cf 91       	pop	r28
 a58:	08 95       	ret

00000a5a <_Z12int7_handlerv>:

void int7_handler(void){
 a5a:	cf 93       	push	r28
 a5c:	df 93       	push	r29
 a5e:	cd b7       	in	r28, 0x3d	; 61
 a60:	de b7       	in	r29, 0x3e	; 62
	uart.put('7');
 a62:	67 e3       	ldi	r22, 0x37	; 55
 a64:	84 e1       	ldi	r24, 0x14	; 20
 a66:	92 e0       	ldi	r25, 0x02	; 2
 a68:	44 df       	rcall	.-376    	; 0x8f2 <_ZN4UART3putEh>
	return;
 a6a:	00 00       	nop
}
 a6c:	df 91       	pop	r29
 a6e:	cf 91       	pop	r28
 a70:	08 95       	ret

00000a72 <main>:

int main( void ){
 a72:	cf 93       	push	r28
 a74:	df 93       	push	r29
 a76:	cd b7       	in	r28, 0x3d	; 61
 a78:	de b7       	in	r29, 0x3e	; 62
 a7a:	a0 97       	sbiw	r28, 0x20	; 32
 a7c:	0f b6       	in	r0, 0x3f	; 63
 a7e:	f8 94       	cli
 a80:	de bf       	out	0x3e, r29	; 62
 a82:	0f be       	out	0x3f, r0	; 63
 a84:	cd bf       	out	0x3d, r28	; 61
    cli();
 a86:	f8 94       	cli

	Ext_Int int0_obj(Ext_Int::Int0, Ext_Int::FALLING, &int0_handler);
 a88:	29 ed       	ldi	r18, 0xD9	; 217
 a8a:	34 e0       	ldi	r19, 0x04	; 4
 a8c:	42 e0       	ldi	r20, 0x02	; 2
 a8e:	60 e0       	ldi	r22, 0x00	; 0
 a90:	ce 01       	movw	r24, r28
 a92:	01 96       	adiw	r24, 0x01	; 1
 a94:	10 dd       	rcall	.-1504   	; 0x4b6 <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE>
	Ext_Int int1_obj(Ext_Int::Int1, Ext_Int::FALLING, &int1_handler);
 a96:	ce 01       	movw	r24, r28
 a98:	05 96       	adiw	r24, 0x05	; 5
 a9a:	25 ee       	ldi	r18, 0xE5	; 229
 a9c:	34 e0       	ldi	r19, 0x04	; 4
 a9e:	42 e0       	ldi	r20, 0x02	; 2
 aa0:	61 e0       	ldi	r22, 0x01	; 1
 aa2:	09 dd       	rcall	.-1518   	; 0x4b6 <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE>
	Ext_Int int2_obj(Ext_Int::Int2, Ext_Int::FALLING, &int2_handler);
 aa4:	ce 01       	movw	r24, r28
 aa6:	09 96       	adiw	r24, 0x09	; 9
 aa8:	21 ef       	ldi	r18, 0xF1	; 241
 aaa:	34 e0       	ldi	r19, 0x04	; 4
 aac:	42 e0       	ldi	r20, 0x02	; 2
 aae:	62 e0       	ldi	r22, 0x02	; 2
 ab0:	02 dd       	rcall	.-1532   	; 0x4b6 <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE>
	Ext_Int int3_obj(Ext_Int::Int3, Ext_Int::FALLING, &int3_handler);
 ab2:	ce 01       	movw	r24, r28
 ab4:	0d 96       	adiw	r24, 0x0d	; 13
 ab6:	2d ef       	ldi	r18, 0xFD	; 253
 ab8:	34 e0       	ldi	r19, 0x04	; 4
 aba:	42 e0       	ldi	r20, 0x02	; 2
 abc:	63 e0       	ldi	r22, 0x03	; 3
 abe:	fb dc       	rcall	.-1546   	; 0x4b6 <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE>
	Ext_Int int4_obj(Ext_Int::Int4, Ext_Int::FALLING, &int4_handler);
 ac0:	ce 01       	movw	r24, r28
 ac2:	41 96       	adiw	r24, 0x11	; 17
 ac4:	29 e0       	ldi	r18, 0x09	; 9
 ac6:	35 e0       	ldi	r19, 0x05	; 5
 ac8:	42 e0       	ldi	r20, 0x02	; 2
 aca:	64 e0       	ldi	r22, 0x04	; 4
 acc:	f4 dc       	rcall	.-1560   	; 0x4b6 <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE>
	Ext_Int int5_obj(Ext_Int::Int5, Ext_Int::FALLING, &int5_handler);
 ace:	ce 01       	movw	r24, r28
 ad0:	45 96       	adiw	r24, 0x15	; 21
 ad2:	25 e1       	ldi	r18, 0x15	; 21
 ad4:	35 e0       	ldi	r19, 0x05	; 5
 ad6:	42 e0       	ldi	r20, 0x02	; 2
 ad8:	65 e0       	ldi	r22, 0x05	; 5
	Ext_Int int6_obj(Ext_Int::Int6, Ext_Int::FALLING, &int6_handler);
 ada:	ed dc       	rcall	.-1574   	; 0x4b6 <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE>
 adc:	ce 01       	movw	r24, r28
 ade:	49 96       	adiw	r24, 0x19	; 25
 ae0:	21 e2       	ldi	r18, 0x21	; 33
 ae2:	35 e0       	ldi	r19, 0x05	; 5
 ae4:	42 e0       	ldi	r20, 0x02	; 2
 ae6:	66 e0       	ldi	r22, 0x06	; 6
	Ext_Int int7_obj(Ext_Int::Int7, Ext_Int::FALLING, &int7_handler);
 ae8:	e6 dc       	rcall	.-1588   	; 0x4b6 <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE>
 aea:	ce 01       	movw	r24, r28
 aec:	4d 96       	adiw	r24, 0x1d	; 29
 aee:	2d e2       	ldi	r18, 0x2D	; 45
 af0:	35 e0       	ldi	r19, 0x05	; 5
 af2:	42 e0       	ldi	r20, 0x02	; 2


	int0_obj.enable();
 af4:	67 e0       	ldi	r22, 0x07	; 7
 af6:	df dc       	rcall	.-1602   	; 0x4b6 <_ZN7EXT_INT7Ext_IntC1ENS0_6Intx_tENS0_5ISC_tEPFvvE>
 af8:	ce 01       	movw	r24, r28
	int1_obj.enable();
 afa:	01 96       	adiw	r24, 0x01	; 1
 afc:	8b dd       	rcall	.-1258   	; 0x614 <_ZN7EXT_INT7Ext_Int6enableEv>
 afe:	ce 01       	movw	r24, r28
	int5_obj.enable();
	int6_obj.enable();
	int7_obj.enable();
	*/

	sei();
 b00:	05 96       	adiw	r24, 0x05	; 5
	while(1){
	                           /* forever */
		if (uart.has_data()){
 b02:	88 dd       	rcall	.-1264   	; 0x614 <_ZN7EXT_INT7Ext_Int6enableEv>
 b04:	78 94       	sei
 b06:	84 e1       	ldi	r24, 0x14	; 20
 b08:	92 e0       	ldi	r25, 0x02	; 2
 b0a:	4f de       	rcall	.-866    	; 0x7aa <_ZN4UART8has_dataEv>
			uart.put(uart.get());                 /* echo the received character */
 b0c:	88 23       	and	r24, r24
 b0e:	d9 f3       	breq	.-10     	; 0xb06 <main+0x94>
 b10:	84 e1       	ldi	r24, 0x14	; 20
 b12:	92 e0       	ldi	r25, 0x02	; 2
 b14:	0a df       	rcall	.-492    	; 0x92a <_ZN4UART3getEv>
 b16:	68 2f       	mov	r22, r24
 b18:	84 e1       	ldi	r24, 0x14	; 20
 b1a:	92 e0       	ldi	r25, 0x02	; 2
			uart.put((EICRA));
 b1c:	ea de       	rcall	.-556    	; 0x8f2 <_ZN4UART3putEh>
 b1e:	89 e6       	ldi	r24, 0x69	; 105
 b20:	90 e0       	ldi	r25, 0x00	; 0
 b22:	fc 01       	movw	r30, r24
 b24:	80 81       	ld	r24, Z
 b26:	68 2f       	mov	r22, r24
 b28:	84 e1       	ldi	r24, 0x14	; 20
 b2a:	92 e0       	ldi	r25, 0x02	; 2
 b2c:	e2 de       	rcall	.-572    	; 0x8f2 <_ZN4UART3putEh>
	int6_obj.enable();
	int7_obj.enable();
	*/

	sei();
	while(1){
 b2e:	eb cf       	rjmp	.-42     	; 0xb06 <main+0x94>

00000b30 <_Z41__static_initialization_and_destruction_0ii>:
			uart.put((EICRA));
		}
	}

	return 0;
}
 b30:	ef 92       	push	r14
 b32:	0f 93       	push	r16
 b34:	cf 93       	push	r28
 b36:	df 93       	push	r29
 b38:	00 d0       	rcall	.+0      	; 0xb3a <_Z41__static_initialization_and_destruction_0ii+0xa>
 b3a:	1f 92       	push	r1
 b3c:	cd b7       	in	r28, 0x3d	; 61
 b3e:	de b7       	in	r29, 0x3e	; 62
 b40:	9a 83       	std	Y+2, r25	; 0x02
 b42:	89 83       	std	Y+1, r24	; 0x01
 b44:	7c 83       	std	Y+4, r23	; 0x04
 b46:	6b 83       	std	Y+3, r22	; 0x03
 b48:	89 81       	ldd	r24, Y+1	; 0x01
 b4a:	9a 81       	ldd	r25, Y+2	; 0x02
 b4c:	01 97       	sbiw	r24, 0x01	; 1
 b4e:	69 f4       	brne	.+26     	; 0xb6a <_Z41__static_initialization_and_destruction_0ii+0x3a>
 b50:	8b 81       	ldd	r24, Y+3	; 0x03
 b52:	9c 81       	ldd	r25, Y+4	; 0x04
 b54:	01 96       	adiw	r24, 0x01	; 1
 b56:	49 f4       	brne	.+18     	; 0xb6a <_Z41__static_initialization_and_destruction_0ii+0x3a>
#include "UART.h"
#include <util/delay.h>
#define F_CPU 16000000
using namespace EXT_INT;

UART uart(9600, UART::disable, UART::eight_bits, UART::none, UART::one);
 b58:	e1 2c       	mov	r14, r1
 b5a:	00 e0       	ldi	r16, 0x00	; 0
 b5c:	26 e0       	ldi	r18, 0x06	; 6
 b5e:	40 e0       	ldi	r20, 0x00	; 0
 b60:	60 e8       	ldi	r22, 0x80	; 128
 b62:	75 e2       	ldi	r23, 0x25	; 37
 b64:	84 e1       	ldi	r24, 0x14	; 20
 b66:	92 e0       	ldi	r25, 0x02	; 2
 b68:	b4 dd       	rcall	.-1176   	; 0x6d2 <_ZN4UARTC1EiNS_13DoubleSpeed_tENS_10DataBits_tENS_8Parity_tENS_9StopBit_tE>
 b6a:	89 81       	ldd	r24, Y+1	; 0x01
 b6c:	9a 81       	ldd	r25, Y+2	; 0x02
 b6e:	89 2b       	or	r24, r25
 b70:	39 f4       	brne	.+14     	; 0xb80 <_Z41__static_initialization_and_destruction_0ii+0x50>
 b72:	8b 81       	ldd	r24, Y+3	; 0x03
 b74:	9c 81       	ldd	r25, Y+4	; 0x04
 b76:	01 96       	adiw	r24, 0x01	; 1
 b78:	19 f4       	brne	.+6      	; 0xb80 <_Z41__static_initialization_and_destruction_0ii+0x50>
 b7a:	84 e1       	ldi	r24, 0x14	; 20
 b7c:	92 e0       	ldi	r25, 0x02	; 2
 b7e:	04 de       	rcall	.-1016   	; 0x788 <_ZN4UARTD1Ev>
			uart.put((EICRA));
		}
	}

	return 0;
}
 b80:	00 00       	nop
 b82:	0f 90       	pop	r0
 b84:	0f 90       	pop	r0
 b86:	0f 90       	pop	r0
 b88:	0f 90       	pop	r0
 b8a:	df 91       	pop	r29
 b8c:	cf 91       	pop	r28
 b8e:	0f 91       	pop	r16
 b90:	ef 90       	pop	r14
 b92:	08 95       	ret

00000b94 <_GLOBAL__sub_I_uart>:
 b94:	cf 93       	push	r28
 b96:	df 93       	push	r29
 b98:	cd b7       	in	r28, 0x3d	; 61
 b9a:	de b7       	in	r29, 0x3e	; 62
 b9c:	6f ef       	ldi	r22, 0xFF	; 255
 b9e:	7f ef       	ldi	r23, 0xFF	; 255
 ba0:	81 e0       	ldi	r24, 0x01	; 1
 ba2:	90 e0       	ldi	r25, 0x00	; 0
 ba4:	c5 df       	rcall	.-118    	; 0xb30 <_Z41__static_initialization_and_destruction_0ii>
 ba6:	df 91       	pop	r29
 ba8:	cf 91       	pop	r28
 baa:	08 95       	ret

00000bac <_GLOBAL__sub_D_uart>:
 bac:	cf 93       	push	r28
 bae:	df 93       	push	r29
 bb0:	cd b7       	in	r28, 0x3d	; 61
 bb2:	de b7       	in	r29, 0x3e	; 62
 bb4:	6f ef       	ldi	r22, 0xFF	; 255
 bb6:	7f ef       	ldi	r23, 0xFF	; 255
 bb8:	80 e0       	ldi	r24, 0x00	; 0
 bba:	90 e0       	ldi	r25, 0x00	; 0
 bbc:	b9 df       	rcall	.-142    	; 0xb30 <_Z41__static_initialization_and_destruction_0ii>
 bbe:	df 91       	pop	r29
 bc0:	cf 91       	pop	r28
 bc2:	08 95       	ret

00000bc4 <__divmodsi4>:
 bc4:	05 2e       	mov	r0, r21
 bc6:	97 fb       	bst	r25, 7
 bc8:	16 f4       	brtc	.+4      	; 0xbce <__divmodsi4+0xa>
 bca:	00 94       	com	r0
 bcc:	0f d0       	rcall	.+30     	; 0xbec <__negsi2>
 bce:	57 fd       	sbrc	r21, 7
 bd0:	05 d0       	rcall	.+10     	; 0xbdc <__divmodsi4_neg2>
 bd2:	14 d0       	rcall	.+40     	; 0xbfc <__udivmodsi4>
 bd4:	07 fc       	sbrc	r0, 7
 bd6:	02 d0       	rcall	.+4      	; 0xbdc <__divmodsi4_neg2>
 bd8:	46 f4       	brtc	.+16     	; 0xbea <__divmodsi4_exit>
 bda:	08 c0       	rjmp	.+16     	; 0xbec <__negsi2>

00000bdc <__divmodsi4_neg2>:
 bdc:	50 95       	com	r21
 bde:	40 95       	com	r20
 be0:	30 95       	com	r19
 be2:	21 95       	neg	r18
 be4:	3f 4f       	sbci	r19, 0xFF	; 255
 be6:	4f 4f       	sbci	r20, 0xFF	; 255
 be8:	5f 4f       	sbci	r21, 0xFF	; 255

00000bea <__divmodsi4_exit>:
 bea:	08 95       	ret

00000bec <__negsi2>:
 bec:	90 95       	com	r25
 bee:	80 95       	com	r24
 bf0:	70 95       	com	r23
 bf2:	61 95       	neg	r22
 bf4:	7f 4f       	sbci	r23, 0xFF	; 255
 bf6:	8f 4f       	sbci	r24, 0xFF	; 255
 bf8:	9f 4f       	sbci	r25, 0xFF	; 255
 bfa:	08 95       	ret

00000bfc <__udivmodsi4>:
 bfc:	a1 e2       	ldi	r26, 0x21	; 33
 bfe:	1a 2e       	mov	r1, r26
 c00:	aa 1b       	sub	r26, r26
 c02:	bb 1b       	sub	r27, r27
 c04:	fd 01       	movw	r30, r26
 c06:	0d c0       	rjmp	.+26     	; 0xc22 <__udivmodsi4_ep>

00000c08 <__udivmodsi4_loop>:
 c08:	aa 1f       	adc	r26, r26
 c0a:	bb 1f       	adc	r27, r27
 c0c:	ee 1f       	adc	r30, r30
 c0e:	ff 1f       	adc	r31, r31
 c10:	a2 17       	cp	r26, r18
 c12:	b3 07       	cpc	r27, r19
 c14:	e4 07       	cpc	r30, r20
 c16:	f5 07       	cpc	r31, r21
 c18:	20 f0       	brcs	.+8      	; 0xc22 <__udivmodsi4_ep>
 c1a:	a2 1b       	sub	r26, r18
 c1c:	b3 0b       	sbc	r27, r19
 c1e:	e4 0b       	sbc	r30, r20
 c20:	f5 0b       	sbc	r31, r21

00000c22 <__udivmodsi4_ep>:
 c22:	66 1f       	adc	r22, r22
 c24:	77 1f       	adc	r23, r23
 c26:	88 1f       	adc	r24, r24
 c28:	99 1f       	adc	r25, r25
 c2a:	1a 94       	dec	r1
 c2c:	69 f7       	brne	.-38     	; 0xc08 <__udivmodsi4_loop>
 c2e:	60 95       	com	r22
 c30:	70 95       	com	r23
 c32:	80 95       	com	r24
 c34:	90 95       	com	r25
 c36:	9b 01       	movw	r18, r22
 c38:	ac 01       	movw	r20, r24
 c3a:	bd 01       	movw	r22, r26
 c3c:	cf 01       	movw	r24, r30
 c3e:	08 95       	ret

00000c40 <__tablejump2__>:
 c40:	ee 0f       	add	r30, r30
 c42:	ff 1f       	adc	r31, r31
 c44:	88 1f       	adc	r24, r24
 c46:	8b bf       	out	0x3b, r24	; 59
 c48:	07 90       	elpm	r0, Z+
 c4a:	f6 91       	elpm	r31, Z
 c4c:	e0 2d       	mov	r30, r0
 c4e:	19 94       	eijmp

00000c50 <__do_global_dtors>:
 c50:	10 e0       	ldi	r17, 0x00	; 0
 c52:	c3 e7       	ldi	r28, 0x73	; 115
 c54:	d0 e0       	ldi	r29, 0x00	; 0
 c56:	00 e0       	ldi	r16, 0x00	; 0
 c58:	05 c0       	rjmp	.+10     	; 0xc64 <__do_global_dtors+0x14>
 c5a:	80 2f       	mov	r24, r16
 c5c:	fe 01       	movw	r30, r28
 c5e:	f0 df       	rcall	.-32     	; 0xc40 <__tablejump2__>
 c60:	21 96       	adiw	r28, 0x01	; 1
 c62:	01 1d       	adc	r16, r1
 c64:	c4 37       	cpi	r28, 0x74	; 116
 c66:	d1 07       	cpc	r29, r17
 c68:	80 e0       	ldi	r24, 0x00	; 0
 c6a:	08 07       	cpc	r16, r24
 c6c:	b1 f7       	brne	.-20     	; 0xc5a <__do_global_dtors+0xa>
 c6e:	f8 94       	cli

00000c70 <__stop_program>:
 c70:	ff cf       	rjmp	.-2      	; 0xc70 <__stop_program>

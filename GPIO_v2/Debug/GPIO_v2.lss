
GPIO_v2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800200  00000968  000009fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000968  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000f  00800224  00800224  00000a20  2**0
                  ALLOC
  3 .stab         00001590  00000000  00000000  00000a20  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000011a7  00000000  00000000  00001fb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00003157  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003168  2**2
                  CONTENTS, READONLY
  7 .debug_info   00000bbc  00000000  00000000  000031a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000b1a  00000000  00000000  00003d64  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  0000487e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e6  00000000  00000000  00004898  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	73 c0       	rjmp	.+230    	; 0xe8 <__dtors_end>
   2:	00 00       	nop
   4:	9f c0       	rjmp	.+318    	; 0x144 <__bad_interrupt>
   6:	00 00       	nop
   8:	9d c0       	rjmp	.+314    	; 0x144 <__bad_interrupt>
   a:	00 00       	nop
   c:	9b c0       	rjmp	.+310    	; 0x144 <__bad_interrupt>
   e:	00 00       	nop
  10:	99 c0       	rjmp	.+306    	; 0x144 <__bad_interrupt>
  12:	00 00       	nop
  14:	97 c0       	rjmp	.+302    	; 0x144 <__bad_interrupt>
  16:	00 00       	nop
  18:	95 c0       	rjmp	.+298    	; 0x144 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	93 c0       	rjmp	.+294    	; 0x144 <__bad_interrupt>
  1e:	00 00       	nop
  20:	91 c0       	rjmp	.+290    	; 0x144 <__bad_interrupt>
  22:	00 00       	nop
  24:	8f c0       	rjmp	.+286    	; 0x144 <__bad_interrupt>
  26:	00 00       	nop
  28:	8d c0       	rjmp	.+282    	; 0x144 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	8b c0       	rjmp	.+278    	; 0x144 <__bad_interrupt>
  2e:	00 00       	nop
  30:	89 c0       	rjmp	.+274    	; 0x144 <__bad_interrupt>
  32:	00 00       	nop
  34:	87 c0       	rjmp	.+270    	; 0x144 <__bad_interrupt>
  36:	00 00       	nop
  38:	85 c0       	rjmp	.+266    	; 0x144 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	83 c0       	rjmp	.+262    	; 0x144 <__bad_interrupt>
  3e:	00 00       	nop
  40:	81 c0       	rjmp	.+258    	; 0x144 <__bad_interrupt>
  42:	00 00       	nop
  44:	7f c0       	rjmp	.+254    	; 0x144 <__bad_interrupt>
  46:	00 00       	nop
  48:	7d c0       	rjmp	.+250    	; 0x144 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	7b c0       	rjmp	.+246    	; 0x144 <__bad_interrupt>
  4e:	00 00       	nop
  50:	79 c0       	rjmp	.+242    	; 0x144 <__bad_interrupt>
  52:	00 00       	nop
  54:	77 c0       	rjmp	.+238    	; 0x144 <__bad_interrupt>
  56:	00 00       	nop
  58:	75 c0       	rjmp	.+234    	; 0x144 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	73 c0       	rjmp	.+230    	; 0x144 <__bad_interrupt>
  5e:	00 00       	nop
  60:	71 c0       	rjmp	.+226    	; 0x144 <__bad_interrupt>
  62:	00 00       	nop
  64:	6f c0       	rjmp	.+222    	; 0x144 <__bad_interrupt>
  66:	00 00       	nop
  68:	6d c0       	rjmp	.+218    	; 0x144 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	6b c0       	rjmp	.+214    	; 0x144 <__bad_interrupt>
  6e:	00 00       	nop
  70:	69 c0       	rjmp	.+210    	; 0x144 <__bad_interrupt>
  72:	00 00       	nop
  74:	67 c0       	rjmp	.+206    	; 0x144 <__bad_interrupt>
  76:	00 00       	nop
  78:	65 c0       	rjmp	.+202    	; 0x144 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	63 c0       	rjmp	.+198    	; 0x144 <__bad_interrupt>
  7e:	00 00       	nop
  80:	61 c0       	rjmp	.+194    	; 0x144 <__bad_interrupt>
  82:	00 00       	nop
  84:	5f c0       	rjmp	.+190    	; 0x144 <__bad_interrupt>
  86:	00 00       	nop
  88:	5d c0       	rjmp	.+186    	; 0x144 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	5b c0       	rjmp	.+182    	; 0x144 <__bad_interrupt>
  8e:	00 00       	nop
  90:	59 c0       	rjmp	.+178    	; 0x144 <__bad_interrupt>
  92:	00 00       	nop
  94:	57 c0       	rjmp	.+174    	; 0x144 <__bad_interrupt>
  96:	00 00       	nop
  98:	55 c0       	rjmp	.+170    	; 0x144 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	53 c0       	rjmp	.+166    	; 0x144 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	51 c0       	rjmp	.+162    	; 0x144 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	4f c0       	rjmp	.+158    	; 0x144 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	4d c0       	rjmp	.+154    	; 0x144 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	4b c0       	rjmp	.+150    	; 0x144 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	49 c0       	rjmp	.+146    	; 0x144 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	47 c0       	rjmp	.+142    	; 0x144 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	45 c0       	rjmp	.+138    	; 0x144 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	43 c0       	rjmp	.+134    	; 0x144 <__bad_interrupt>
  be:	00 00       	nop
  c0:	41 c0       	rjmp	.+130    	; 0x144 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	3f c0       	rjmp	.+126    	; 0x144 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	3d c0       	rjmp	.+122    	; 0x144 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	3b c0       	rjmp	.+118    	; 0x144 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	39 c0       	rjmp	.+114    	; 0x144 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	37 c0       	rjmp	.+110    	; 0x144 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	35 c0       	rjmp	.+106    	; 0x144 <__bad_interrupt>
  da:	00 00       	nop
  dc:	33 c0       	rjmp	.+102    	; 0x144 <__bad_interrupt>
  de:	00 00       	nop
  e0:	31 c0       	rjmp	.+98     	; 0x144 <__bad_interrupt>
	...

000000e4 <__ctors_start>:
  e4:	77 03       	mulsu	r23, r23

000000e6 <__ctors_end>:
  e6:	83 03       	fmuls	r16, r19

000000e8 <__dtors_end>:
  e8:	11 24       	eor	r1, r1
  ea:	1f be       	out	0x3f, r1	; 63
  ec:	cf ef       	ldi	r28, 0xFF	; 255
  ee:	d1 e2       	ldi	r29, 0x21	; 33
  f0:	de bf       	out	0x3e, r29	; 62
  f2:	cd bf       	out	0x3d, r28	; 61
  f4:	00 e0       	ldi	r16, 0x00	; 0
  f6:	0c bf       	out	0x3c, r16	; 60

000000f8 <__do_copy_data>:
  f8:	12 e0       	ldi	r17, 0x02	; 2
  fa:	a0 e0       	ldi	r26, 0x00	; 0
  fc:	b2 e0       	ldi	r27, 0x02	; 2
  fe:	e8 e6       	ldi	r30, 0x68	; 104
 100:	f9 e0       	ldi	r31, 0x09	; 9
 102:	00 e0       	ldi	r16, 0x00	; 0
 104:	0b bf       	out	0x3b, r16	; 59
 106:	02 c0       	rjmp	.+4      	; 0x10c <__do_copy_data+0x14>
 108:	07 90       	elpm	r0, Z+
 10a:	0d 92       	st	X+, r0
 10c:	a4 32       	cpi	r26, 0x24	; 36
 10e:	b1 07       	cpc	r27, r17
 110:	d9 f7       	brne	.-10     	; 0x108 <__do_copy_data+0x10>

00000112 <__do_clear_bss>:
 112:	22 e0       	ldi	r18, 0x02	; 2
 114:	a4 e2       	ldi	r26, 0x24	; 36
 116:	b2 e0       	ldi	r27, 0x02	; 2
 118:	01 c0       	rjmp	.+2      	; 0x11c <.do_clear_bss_start>

0000011a <.do_clear_bss_loop>:
 11a:	1d 92       	st	X+, r1

0000011c <.do_clear_bss_start>:
 11c:	a3 33       	cpi	r26, 0x33	; 51
 11e:	b2 07       	cpc	r27, r18
 120:	e1 f7       	brne	.-8      	; 0x11a <.do_clear_bss_loop>

00000122 <__do_global_ctors>:
 122:	10 e0       	ldi	r17, 0x00	; 0
 124:	c3 e7       	ldi	r28, 0x73	; 115
 126:	d0 e0       	ldi	r29, 0x00	; 0
 128:	00 e0       	ldi	r16, 0x00	; 0
 12a:	05 c0       	rjmp	.+10     	; 0x136 <__do_global_ctors+0x14>
 12c:	21 97       	sbiw	r28, 0x01	; 1
 12e:	01 09       	sbc	r16, r1
 130:	80 2f       	mov	r24, r16
 132:	fe 01       	movw	r30, r28
 134:	f4 d2       	rcall	.+1512   	; 0x71e <__tablejump2__>
 136:	c2 37       	cpi	r28, 0x72	; 114
 138:	d1 07       	cpc	r29, r17
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	08 07       	cpc	r16, r24
 13e:	b1 f7       	brne	.-20     	; 0x12c <__do_global_ctors+0xa>
 140:	09 d1       	rcall	.+530    	; 0x354 <main>
 142:	01 c4       	rjmp	.+2050   	; 0x946 <__do_global_dtors>

00000144 <__bad_interrupt>:
 144:	5d cf       	rjmp	.-326    	; 0x0 <__vectors>

00000146 <_ZN4GPIOC1EhNS_15PortDirection_tE>:
 *      Author: aluno
 */

#include "GPIO.h"

GPIO::GPIO(uint8_t id, PortDirection_t dir)
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
 14a:	00 d0       	rcall	.+0      	; 0x14c <_ZN4GPIOC1EhNS_15PortDirection_tE+0x6>
 14c:	1f 92       	push	r1
 14e:	cd b7       	in	r28, 0x3d	; 61
 150:	de b7       	in	r29, 0x3e	; 62
 152:	9a 83       	std	Y+2, r25	; 0x02
 154:	89 83       	std	Y+1, r24	; 0x01
 156:	6b 83       	std	Y+3, r22	; 0x03
 158:	4c 83       	std	Y+4, r20	; 0x04
{
	_bit = GPIO_PORT::id_to_bit[id];
 15a:	8b 81       	ldd	r24, Y+3	; 0x03
 15c:	88 2f       	mov	r24, r24
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	8a 5e       	subi	r24, 0xEA	; 234
 162:	9d 4f       	sbci	r25, 0xFD	; 253
 164:	fc 01       	movw	r30, r24
 166:	20 81       	ld	r18, Z
 168:	89 81       	ldd	r24, Y+1	; 0x01
 16a:	9a 81       	ldd	r25, Y+2	; 0x02
 16c:	fc 01       	movw	r30, r24
 16e:	20 83       	st	Z, r18
	_port = GPIO_PORT::AllPorts[GPIO_PORT::id_to_port[id]];
 170:	8b 81       	ldd	r24, Y+3	; 0x03
 172:	88 2f       	mov	r24, r24
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	88 5f       	subi	r24, 0xF8	; 248
 178:	9d 4f       	sbci	r25, 0xFD	; 253
 17a:	fc 01       	movw	r30, r24
 17c:	80 81       	ld	r24, Z
 17e:	88 2f       	mov	r24, r24
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	88 0f       	add	r24, r24
 184:	99 1f       	adc	r25, r25
 186:	80 50       	subi	r24, 0x00	; 0
 188:	9e 4f       	sbci	r25, 0xFE	; 254
 18a:	fc 01       	movw	r30, r24
 18c:	20 81       	ld	r18, Z
 18e:	31 81       	ldd	r19, Z+1	; 0x01
 190:	89 81       	ldd	r24, Y+1	; 0x01
 192:	9a 81       	ldd	r25, Y+2	; 0x02
 194:	fc 01       	movw	r30, r24
 196:	32 83       	std	Z+2, r19	; 0x02
 198:	21 83       	std	Z+1, r18	; 0x01
	_port->dir(_bit, dir);
 19a:	21 e0       	ldi	r18, 0x01	; 1
 19c:	8c 81       	ldd	r24, Y+4	; 0x04
 19e:	88 23       	and	r24, r24
 1a0:	09 f4       	brne	.+2      	; 0x1a4 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x5e>
 1a2:	20 e0       	ldi	r18, 0x00	; 0
 1a4:	89 81       	ldd	r24, Y+1	; 0x01
 1a6:	9a 81       	ldd	r25, Y+2	; 0x02
 1a8:	fc 01       	movw	r30, r24
 1aa:	30 81       	ld	r19, Z
 1ac:	89 81       	ldd	r24, Y+1	; 0x01
 1ae:	9a 81       	ldd	r25, Y+2	; 0x02
 1b0:	fc 01       	movw	r30, r24
 1b2:	81 81       	ldd	r24, Z+1	; 0x01
 1b4:	92 81       	ldd	r25, Z+2	; 0x02
 1b6:	42 2f       	mov	r20, r18
 1b8:	63 2f       	mov	r22, r19
 1ba:	5c d0       	rcall	.+184    	; 0x274 <_ZN9GPIO_PORT9GPIO_Port3dirEhb>
}
 1bc:	00 00       	nop
 1be:	0f 90       	pop	r0
 1c0:	0f 90       	pop	r0
 1c2:	0f 90       	pop	r0
 1c4:	0f 90       	pop	r0
 1c6:	df 91       	pop	r29
 1c8:	cf 91       	pop	r28
 1ca:	08 95       	ret

000001cc <_ZN4GPIOD1Ev>:

GPIO::~GPIO() {}
 1cc:	cf 93       	push	r28
 1ce:	df 93       	push	r29
 1d0:	1f 92       	push	r1
 1d2:	1f 92       	push	r1
 1d4:	cd b7       	in	r28, 0x3d	; 61
 1d6:	de b7       	in	r29, 0x3e	; 62
 1d8:	9a 83       	std	Y+2, r25	; 0x02
 1da:	89 83       	std	Y+1, r24	; 0x01
 1dc:	00 00       	nop
 1de:	0f 90       	pop	r0
 1e0:	0f 90       	pop	r0
 1e2:	df 91       	pop	r29
 1e4:	cf 91       	pop	r28
 1e6:	08 95       	ret

000001e8 <_ZN4GPIO3setEb>:

bool GPIO::get() {
	return _port->get(_bit);
}

void GPIO::set(bool val) {
 1e8:	cf 93       	push	r28
 1ea:	df 93       	push	r29
 1ec:	00 d0       	rcall	.+0      	; 0x1ee <_ZN4GPIO3setEb+0x6>
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62
 1f2:	9a 83       	std	Y+2, r25	; 0x02
 1f4:	89 83       	std	Y+1, r24	; 0x01
 1f6:	6b 83       	std	Y+3, r22	; 0x03
	_port->set(_bit, val);
 1f8:	89 81       	ldd	r24, Y+1	; 0x01
 1fa:	9a 81       	ldd	r25, Y+2	; 0x02
 1fc:	fc 01       	movw	r30, r24
 1fe:	20 81       	ld	r18, Z
 200:	89 81       	ldd	r24, Y+1	; 0x01
 202:	9a 81       	ldd	r25, Y+2	; 0x02
 204:	fc 01       	movw	r30, r24
 206:	81 81       	ldd	r24, Z+1	; 0x01
 208:	92 81       	ldd	r25, Z+2	; 0x02
 20a:	4b 81       	ldd	r20, Y+3	; 0x03
 20c:	62 2f       	mov	r22, r18
 20e:	60 d0       	rcall	.+192    	; 0x2d0 <_ZN9GPIO_PORT9GPIO_Port3setEhb>
}
 210:	00 00       	nop
 212:	0f 90       	pop	r0
 214:	0f 90       	pop	r0
 216:	0f 90       	pop	r0
 218:	df 91       	pop	r29
 21a:	cf 91       	pop	r28
 21c:	08 95       	ret

0000021e <_ZN4GPIO5clearEv>:

void GPIO::clear() {
 21e:	cf 93       	push	r28
 220:	df 93       	push	r29
 222:	1f 92       	push	r1
 224:	1f 92       	push	r1
 226:	cd b7       	in	r28, 0x3d	; 61
 228:	de b7       	in	r29, 0x3e	; 62
 22a:	9a 83       	std	Y+2, r25	; 0x02
 22c:	89 83       	std	Y+1, r24	; 0x01
	this->set(0);
 22e:	89 81       	ldd	r24, Y+1	; 0x01
 230:	9a 81       	ldd	r25, Y+2	; 0x02
 232:	60 e0       	ldi	r22, 0x00	; 0
 234:	d9 df       	rcall	.-78     	; 0x1e8 <_ZN4GPIO3setEb>
}
 236:	00 00       	nop
 238:	0f 90       	pop	r0
 23a:	0f 90       	pop	r0
 23c:	df 91       	pop	r29
 23e:	cf 91       	pop	r28
 240:	08 95       	ret

00000242 <_ZN4GPIO6toggleEv>:

void GPIO::toggle() {
 242:	cf 93       	push	r28
 244:	df 93       	push	r29
 246:	1f 92       	push	r1
 248:	1f 92       	push	r1
 24a:	cd b7       	in	r28, 0x3d	; 61
 24c:	de b7       	in	r29, 0x3e	; 62
 24e:	9a 83       	std	Y+2, r25	; 0x02
 250:	89 83       	std	Y+1, r24	; 0x01
	_port->toggle(_bit);
 252:	89 81       	ldd	r24, Y+1	; 0x01
 254:	9a 81       	ldd	r25, Y+2	; 0x02
 256:	fc 01       	movw	r30, r24
 258:	20 81       	ld	r18, Z
 25a:	89 81       	ldd	r24, Y+1	; 0x01
 25c:	9a 81       	ldd	r25, Y+2	; 0x02
 25e:	fc 01       	movw	r30, r24
 260:	81 81       	ldd	r24, Z+1	; 0x01
 262:	92 81       	ldd	r25, Z+2	; 0x02
 264:	62 2f       	mov	r22, r18
 266:	62 d0       	rcall	.+196    	; 0x32c <_ZN9GPIO_PORT9GPIO_Port6toggleEh>
}
 268:	00 00       	nop
 26a:	0f 90       	pop	r0
 26c:	0f 90       	pop	r0
 26e:	df 91       	pop	r29
 270:	cf 91       	pop	r28
 272:	08 95       	ret

00000274 <_ZN9GPIO_PORT9GPIO_Port3dirEhb>:
	_BV( 6 )	,
	_BV( 7 )
};


void GPIO_Port::dir(uint8_t p, bool io) {
 274:	cf 93       	push	r28
 276:	df 93       	push	r29
 278:	00 d0       	rcall	.+0      	; 0x27a <_ZN9GPIO_PORT9GPIO_Port3dirEhb+0x6>
 27a:	1f 92       	push	r1
 27c:	cd b7       	in	r28, 0x3d	; 61
 27e:	de b7       	in	r29, 0x3e	; 62
 280:	9a 83       	std	Y+2, r25	; 0x02
 282:	89 83       	std	Y+1, r24	; 0x01
 284:	6b 83       	std	Y+3, r22	; 0x03
 286:	4c 83       	std	Y+4, r20	; 0x04
    if (io)
 288:	8c 81       	ldd	r24, Y+4	; 0x04
 28a:	88 23       	and	r24, r24
 28c:	61 f0       	breq	.+24     	; 0x2a6 <_ZN9GPIO_PORT9GPIO_Port3dirEhb+0x32>
        ddr |= p;
 28e:	89 81       	ldd	r24, Y+1	; 0x01
 290:	9a 81       	ldd	r25, Y+2	; 0x02
 292:	fc 01       	movw	r30, r24
 294:	91 81       	ldd	r25, Z+1	; 0x01
 296:	8b 81       	ldd	r24, Y+3	; 0x03
 298:	29 2f       	mov	r18, r25
 29a:	28 2b       	or	r18, r24
 29c:	89 81       	ldd	r24, Y+1	; 0x01
 29e:	9a 81       	ldd	r25, Y+2	; 0x02
 2a0:	fc 01       	movw	r30, r24
 2a2:	21 83       	std	Z+1, r18	; 0x01
    else
        ddr &= ~p;
}
 2a4:	0d c0       	rjmp	.+26     	; 0x2c0 <_ZN9GPIO_PORT9GPIO_Port3dirEhb+0x4c>

void GPIO_Port::dir(uint8_t p, bool io) {
    if (io)
        ddr |= p;
    else
        ddr &= ~p;
 2a6:	89 81       	ldd	r24, Y+1	; 0x01
 2a8:	9a 81       	ldd	r25, Y+2	; 0x02
 2aa:	fc 01       	movw	r30, r24
 2ac:	81 81       	ldd	r24, Z+1	; 0x01
 2ae:	98 2f       	mov	r25, r24
 2b0:	8b 81       	ldd	r24, Y+3	; 0x03
 2b2:	80 95       	com	r24
 2b4:	89 23       	and	r24, r25
 2b6:	28 2f       	mov	r18, r24
 2b8:	89 81       	ldd	r24, Y+1	; 0x01
 2ba:	9a 81       	ldd	r25, Y+2	; 0x02
 2bc:	fc 01       	movw	r30, r24
 2be:	21 83       	std	Z+1, r18	; 0x01
}
 2c0:	00 00       	nop
 2c2:	0f 90       	pop	r0
 2c4:	0f 90       	pop	r0
 2c6:	0f 90       	pop	r0
 2c8:	0f 90       	pop	r0
 2ca:	df 91       	pop	r29
 2cc:	cf 91       	pop	r28
 2ce:	08 95       	ret

000002d0 <_ZN9GPIO_PORT9GPIO_Port3setEhb>:
void GPIO_Port::set(uint8_t p, bool val) {
 2d0:	cf 93       	push	r28
 2d2:	df 93       	push	r29
 2d4:	00 d0       	rcall	.+0      	; 0x2d6 <_ZN9GPIO_PORT9GPIO_Port3setEhb+0x6>
 2d6:	1f 92       	push	r1
 2d8:	cd b7       	in	r28, 0x3d	; 61
 2da:	de b7       	in	r29, 0x3e	; 62
 2dc:	9a 83       	std	Y+2, r25	; 0x02
 2de:	89 83       	std	Y+1, r24	; 0x01
 2e0:	6b 83       	std	Y+3, r22	; 0x03
 2e2:	4c 83       	std	Y+4, r20	; 0x04
    if (val)
 2e4:	8c 81       	ldd	r24, Y+4	; 0x04
 2e6:	88 23       	and	r24, r24
 2e8:	61 f0       	breq	.+24     	; 0x302 <_ZN9GPIO_PORT9GPIO_Port3setEhb+0x32>
        port |= p;
 2ea:	89 81       	ldd	r24, Y+1	; 0x01
 2ec:	9a 81       	ldd	r25, Y+2	; 0x02
 2ee:	fc 01       	movw	r30, r24
 2f0:	92 81       	ldd	r25, Z+2	; 0x02
 2f2:	8b 81       	ldd	r24, Y+3	; 0x03
 2f4:	29 2f       	mov	r18, r25
 2f6:	28 2b       	or	r18, r24
 2f8:	89 81       	ldd	r24, Y+1	; 0x01
 2fa:	9a 81       	ldd	r25, Y+2	; 0x02
 2fc:	fc 01       	movw	r30, r24
 2fe:	22 83       	std	Z+2, r18	; 0x02
    else
        port &= ~p;
}
 300:	0d c0       	rjmp	.+26     	; 0x31c <_ZN9GPIO_PORT9GPIO_Port3setEhb+0x4c>
}
void GPIO_Port::set(uint8_t p, bool val) {
    if (val)
        port |= p;
    else
        port &= ~p;
 302:	89 81       	ldd	r24, Y+1	; 0x01
 304:	9a 81       	ldd	r25, Y+2	; 0x02
 306:	fc 01       	movw	r30, r24
 308:	82 81       	ldd	r24, Z+2	; 0x02
 30a:	98 2f       	mov	r25, r24
 30c:	8b 81       	ldd	r24, Y+3	; 0x03
 30e:	80 95       	com	r24
 310:	89 23       	and	r24, r25
 312:	28 2f       	mov	r18, r24
 314:	89 81       	ldd	r24, Y+1	; 0x01
 316:	9a 81       	ldd	r25, Y+2	; 0x02
 318:	fc 01       	movw	r30, r24
 31a:	22 83       	std	Z+2, r18	; 0x02
}
 31c:	00 00       	nop
 31e:	0f 90       	pop	r0
 320:	0f 90       	pop	r0
 322:	0f 90       	pop	r0
 324:	0f 90       	pop	r0
 326:	df 91       	pop	r29
 328:	cf 91       	pop	r28
 32a:	08 95       	ret

0000032c <_ZN9GPIO_PORT9GPIO_Port6toggleEh>:
}
bool GPIO_Port::get(uint8_t p) {
    return pin & p;
}

void GPIO_Port::toggle(uint8_t p) {
 32c:	cf 93       	push	r28
 32e:	df 93       	push	r29
 330:	00 d0       	rcall	.+0      	; 0x332 <_ZN9GPIO_PORT9GPIO_Port6toggleEh+0x6>
 332:	cd b7       	in	r28, 0x3d	; 61
 334:	de b7       	in	r29, 0x3e	; 62
 336:	9a 83       	std	Y+2, r25	; 0x02
 338:	89 83       	std	Y+1, r24	; 0x01
 33a:	6b 83       	std	Y+3, r22	; 0x03
	pin = p;
 33c:	89 81       	ldd	r24, Y+1	; 0x01
 33e:	9a 81       	ldd	r25, Y+2	; 0x02
 340:	2b 81       	ldd	r18, Y+3	; 0x03
 342:	fc 01       	movw	r30, r24
 344:	20 83       	st	Z, r18
}
 346:	00 00       	nop
 348:	0f 90       	pop	r0
 34a:	0f 90       	pop	r0
 34c:	0f 90       	pop	r0
 34e:	df 91       	pop	r29
 350:	cf 91       	pop	r28
 352:	08 95       	ret

00000354 <main>:

//Adicionar LED
GPIO led4(4, GPIO::OUTPUT);		//PG5
GPIO led6(6, GPIO::OUTPUT);		//PH0

int main(void){
 354:	cf 93       	push	r28
 356:	df 93       	push	r29
 358:	cd b7       	in	r28, 0x3d	; 61
 35a:	de b7       	in	r29, 0x3e	; 62
 35c:	aa 97       	sbiw	r28, 0x2a	; 42
 35e:	0f b6       	in	r0, 0x3f	; 63
 360:	f8 94       	cli
 362:	de bf       	out	0x3e, r29	; 62
 364:	0f be       	out	0x3f, r0	; 63
 366:	cd bf       	out	0x3d, r28	; 61

	UCSR0B = 0;
 368:	81 ec       	ldi	r24, 0xC1	; 193
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	fc 01       	movw	r30, r24
 36e:	10 82       	st	Z, r1

	led0.set(1);
 370:	61 e0       	ldi	r22, 0x01	; 1
 372:	84 e2       	ldi	r24, 0x24	; 36
 374:	92 e0       	ldi	r25, 0x02	; 2
 376:	38 df       	rcall	.-400    	; 0x1e8 <_ZN4GPIO3setEb>
	led1.set(1);
 378:	61 e0       	ldi	r22, 0x01	; 1
 37a:	87 e2       	ldi	r24, 0x27	; 39
 37c:	92 e0       	ldi	r25, 0x02	; 2
	led6.clear();
 37e:	34 df       	rcall	.-408    	; 0x1e8 <_ZN4GPIO3setEb>
 380:	80 e3       	ldi	r24, 0x30	; 48
 382:	92 e0       	ldi	r25, 0x02	; 2
	led4.clear();
 384:	4c df       	rcall	.-360    	; 0x21e <_ZN4GPIO5clearEv>
 386:	8d e2       	ldi	r24, 0x2D	; 45
 388:	92 e0       	ldi	r25, 0x02	; 2
	led13.clear();
 38a:	49 df       	rcall	.-366    	; 0x21e <_ZN4GPIO5clearEv>
 38c:	8a e2       	ldi	r24, 0x2A	; 42
 38e:	92 e0       	ldi	r25, 0x02	; 2
 390:	46 df       	rcall	.-372    	; 0x21e <_ZN4GPIO5clearEv>
 392:	80 e0       	ldi	r24, 0x00	; 0
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	aa e7       	ldi	r26, 0x7A	; 122
 398:	b4 e4       	ldi	r27, 0x44	; 68
 39a:	8d 83       	std	Y+5, r24	; 0x05
 39c:	9e 83       	std	Y+6, r25	; 0x06
 39e:	af 83       	std	Y+7, r26	; 0x07
 3a0:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 3a2:	20 e0       	ldi	r18, 0x00	; 0
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	4a e7       	ldi	r20, 0x7A	; 122
 3a8:	55 e4       	ldi	r21, 0x45	; 69
 3aa:	6d 81       	ldd	r22, Y+5	; 0x05
 3ac:	7e 81       	ldd	r23, Y+6	; 0x06
 3ae:	8f 81       	ldd	r24, Y+7	; 0x07
 3b0:	98 85       	ldd	r25, Y+8	; 0x08
 3b2:	3e d2       	rcall	.+1148   	; 0x830 <__mulsf3>
 3b4:	dc 01       	movw	r26, r24
 3b6:	cb 01       	movw	r24, r22
 3b8:	8f 8b       	std	Y+23, r24	; 0x17
 3ba:	98 8f       	std	Y+24, r25	; 0x18
 3bc:	a9 8f       	std	Y+25, r26	; 0x19
 3be:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
 3c0:	20 e0       	ldi	r18, 0x00	; 0
 3c2:	30 e0       	ldi	r19, 0x00	; 0
 3c4:	40 e8       	ldi	r20, 0x80	; 128
 3c6:	5f e3       	ldi	r21, 0x3F	; 63
 3c8:	6f 89       	ldd	r22, Y+23	; 0x17
 3ca:	78 8d       	ldd	r23, Y+24	; 0x18
 3cc:	89 8d       	ldd	r24, Y+25	; 0x19
 3ce:	9a 8d       	ldd	r25, Y+26	; 0x1a
 3d0:	ae d1       	rcall	.+860    	; 0x72e <__cmpsf2>
 3d2:	88 23       	and	r24, r24
 3d4:	2c f4       	brge	.+10     	; 0x3e0 <main+0x8c>
		__ticks = 1;
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	9c 8f       	std	Y+28, r25	; 0x1c
 3dc:	8b 8f       	std	Y+27, r24	; 0x1b
 3de:	3a c0       	rjmp	.+116    	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
	else if (__tmp > 65535)
 3e0:	20 e0       	ldi	r18, 0x00	; 0
 3e2:	3f ef       	ldi	r19, 0xFF	; 255
 3e4:	4f e7       	ldi	r20, 0x7F	; 127
 3e6:	57 e4       	ldi	r21, 0x47	; 71
 3e8:	6f 89       	ldd	r22, Y+23	; 0x17
 3ea:	78 8d       	ldd	r23, Y+24	; 0x18
 3ec:	89 8d       	ldd	r24, Y+25	; 0x19
 3ee:	9a 8d       	ldd	r25, Y+26	; 0x1a
 3f0:	1b d2       	rcall	.+1078   	; 0x828 <__gesf2>
 3f2:	18 16       	cp	r1, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 3f4:	34 f5       	brge	.+76     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 3f6:	20 e0       	ldi	r18, 0x00	; 0
 3f8:	30 e0       	ldi	r19, 0x00	; 0
 3fa:	40 e2       	ldi	r20, 0x20	; 32
 3fc:	51 e4       	ldi	r21, 0x41	; 65
 3fe:	6d 81       	ldd	r22, Y+5	; 0x05
 400:	7e 81       	ldd	r23, Y+6	; 0x06
 402:	8f 81       	ldd	r24, Y+7	; 0x07
 404:	98 85       	ldd	r25, Y+8	; 0x08
 406:	14 d2       	rcall	.+1064   	; 0x830 <__mulsf3>
 408:	dc 01       	movw	r26, r24
 40a:	cb 01       	movw	r24, r22
 40c:	bc 01       	movw	r22, r24
 40e:	cd 01       	movw	r24, r26
 410:	92 d1       	rcall	.+804    	; 0x736 <__fixunssfsi>
 412:	dc 01       	movw	r26, r24
 414:	cb 01       	movw	r24, r22
 416:	9c 8f       	std	Y+28, r25	; 0x1c
 418:	8b 8f       	std	Y+27, r24	; 0x1b
		while(__ticks)
 41a:	8b 8d       	ldd	r24, Y+27	; 0x1b
 41c:	9c 8d       	ldd	r25, Y+28	; 0x1c
 41e:	89 2b       	or	r24, r25
 420:	19 f1       	breq	.+70     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 422:	80 e9       	ldi	r24, 0x90	; 144
 424:	91 e0       	ldi	r25, 0x01	; 1
 426:	9e 8f       	std	Y+30, r25	; 0x1e
 428:	8d 8f       	std	Y+29, r24	; 0x1d
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 42a:	8d 8d       	ldd	r24, Y+29	; 0x1d
 42c:	9e 8d       	ldd	r25, Y+30	; 0x1e
 42e:	01 97       	sbiw	r24, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 432:	9e 8f       	std	Y+30, r25	; 0x1e
 434:	8d 8f       	std	Y+29, r24	; 0x1d
 436:	8b 8d       	ldd	r24, Y+27	; 0x1b
 438:	9c 8d       	ldd	r25, Y+28	; 0x1c
 43a:	01 97       	sbiw	r24, 0x01	; 1
 43c:	9c 8f       	std	Y+28, r25	; 0x1c
 43e:	8b 8f       	std	Y+27, r24	; 0x1b
 440:	ec cf       	rjmp	.-40     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 442:	6f 89       	ldd	r22, Y+23	; 0x17
 444:	78 8d       	ldd	r23, Y+24	; 0x18
 446:	89 8d       	ldd	r24, Y+25	; 0x19
 448:	9a 8d       	ldd	r25, Y+26	; 0x1a
 44a:	75 d1       	rcall	.+746    	; 0x736 <__fixunssfsi>
 44c:	dc 01       	movw	r26, r24
 44e:	cb 01       	movw	r24, r22
 450:	9c 8f       	std	Y+28, r25	; 0x1c
 452:	8b 8f       	std	Y+27, r24	; 0x1b
 454:	8b 8d       	ldd	r24, Y+27	; 0x1b
 456:	9c 8d       	ldd	r25, Y+28	; 0x1c
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 458:	98 a3       	std	Y+32, r25	; 0x20
 45a:	8f 8f       	std	Y+31, r24	; 0x1f
 45c:	8f 8d       	ldd	r24, Y+31	; 0x1f
 45e:	98 a1       	ldd	r25, Y+32	; 0x20
 460:	01 97       	sbiw	r24, 0x01	; 1
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 462:	f1 f7       	brne	.-4      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 464:	98 a3       	std	Y+32, r25	; 0x20
 466:	8f 8f       	std	Y+31, r24	; 0x1f
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 468:	84 e2       	ldi	r24, 0x24	; 36
 46a:	92 e0       	ldi	r25, 0x02	; 2
 46c:	d8 de       	rcall	.-592    	; 0x21e <_ZN4GPIO5clearEv>
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 46e:	87 e2       	ldi	r24, 0x27	; 39
 470:	92 e0       	ldi	r25, 0x02	; 2
 472:	d5 de       	rcall	.-598    	; 0x21e <_ZN4GPIO5clearEv>
 474:	61 e0       	ldi	r22, 0x01	; 1
 476:	80 e3       	ldi	r24, 0x30	; 48
  POSSIBILITY OF SUCH DAMAGE. */
 478:	92 e0       	ldi	r25, 0x02	; 2
 47a:	b6 de       	rcall	.-660    	; 0x1e8 <_ZN4GPIO3setEb>
 47c:	61 e0       	ldi	r22, 0x01	; 1
 47e:	8d e2       	ldi	r24, 0x2D	; 45
 480:	92 e0       	ldi	r25, 0x02	; 2

 482:	b2 de       	rcall	.-668    	; 0x1e8 <_ZN4GPIO3setEb>
 484:	61 e0       	ldi	r22, 0x01	; 1
 486:	8a e2       	ldi	r24, 0x2A	; 42
 488:	92 e0       	ldi	r25, 0x02	; 2
 48a:	ae de       	rcall	.-676    	; 0x1e8 <_ZN4GPIO3setEb>
 48c:	80 e0       	ldi	r24, 0x00	; 0
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	aa e7       	ldi	r26, 0x7A	; 122
 492:	b4 e4       	ldi	r27, 0x44	; 68
 494:	89 87       	std	Y+9, r24	; 0x09
 496:	9a 87       	std	Y+10, r25	; 0x0a
 498:	ab 87       	std	Y+11, r26	; 0x0b
 49a:	bc 87       	std	Y+12, r27	; 0x0c
 49c:	20 e0       	ldi	r18, 0x00	; 0
 49e:	30 e0       	ldi	r19, 0x00	; 0
 4a0:	4a e7       	ldi	r20, 0x7A	; 122
 4a2:	55 e4       	ldi	r21, 0x45	; 69
 4a4:	69 85       	ldd	r22, Y+9	; 0x09
 4a6:	7a 85       	ldd	r23, Y+10	; 0x0a
 4a8:	8b 85       	ldd	r24, Y+11	; 0x0b
 4aa:	9c 85       	ldd	r25, Y+12	; 0x0c
 4ac:	c1 d1       	rcall	.+898    	; 0x830 <__mulsf3>
 4ae:	dc 01       	movw	r26, r24
 4b0:	cb 01       	movw	r24, r22
 4b2:	8d 87       	std	Y+13, r24	; 0x0d
 4b4:	9e 87       	std	Y+14, r25	; 0x0e
 4b6:	af 87       	std	Y+15, r26	; 0x0f
 4b8:	b8 8b       	std	Y+16, r27	; 0x10
 4ba:	20 e0       	ldi	r18, 0x00	; 0
 4bc:	30 e0       	ldi	r19, 0x00	; 0
 4be:	40 e8       	ldi	r20, 0x80	; 128
 4c0:	5f e3       	ldi	r21, 0x3F	; 63
 4c2:	6d 85       	ldd	r22, Y+13	; 0x0d
 4c4:	7e 85       	ldd	r23, Y+14	; 0x0e
 4c6:	8f 85       	ldd	r24, Y+15	; 0x0f
 4c8:	98 89       	ldd	r25, Y+16	; 0x10
 4ca:	31 d1       	rcall	.+610    	; 0x72e <__cmpsf2>
 4cc:	88 23       	and	r24, r24
 4ce:	2c f4       	brge	.+10     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	9a 8b       	std	Y+18, r25	; 0x12
 4d6:	89 8b       	std	Y+17, r24	; 0x11
 4d8:	3a c0       	rjmp	.+116    	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 4da:	20 e0       	ldi	r18, 0x00	; 0
 4dc:	3f ef       	ldi	r19, 0xFF	; 255
 4de:	4f e7       	ldi	r20, 0x7F	; 127
 4e0:	57 e4       	ldi	r21, 0x47	; 71
 4e2:	6d 85       	ldd	r22, Y+13	; 0x0d
 4e4:	7e 85       	ldd	r23, Y+14	; 0x0e
 4e6:	8f 85       	ldd	r24, Y+15	; 0x0f
 4e8:	98 89       	ldd	r25, Y+16	; 0x10
 4ea:	9e d1       	rcall	.+828    	; 0x828 <__gesf2>
 4ec:	18 16       	cp	r1, r24
 4ee:	34 f5       	brge	.+76     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 4f0:	20 e0       	ldi	r18, 0x00	; 0
 4f2:	30 e0       	ldi	r19, 0x00	; 0
 4f4:	40 e2       	ldi	r20, 0x20	; 32
 4f6:	51 e4       	ldi	r21, 0x41	; 65
 4f8:	69 85       	ldd	r22, Y+9	; 0x09
 4fa:	7a 85       	ldd	r23, Y+10	; 0x0a
 4fc:	8b 85       	ldd	r24, Y+11	; 0x0b
 4fe:	9c 85       	ldd	r25, Y+12	; 0x0c
 500:	97 d1       	rcall	.+814    	; 0x830 <__mulsf3>
 502:	dc 01       	movw	r26, r24
 504:	cb 01       	movw	r24, r22
 506:	bc 01       	movw	r22, r24
 508:	cd 01       	movw	r24, r26
 50a:	15 d1       	rcall	.+554    	; 0x736 <__fixunssfsi>
 50c:	dc 01       	movw	r26, r24
 50e:	cb 01       	movw	r24, r22
 510:	9a 8b       	std	Y+18, r25	; 0x12
 512:	89 8b       	std	Y+17, r24	; 0x11
 514:	89 89       	ldd	r24, Y+17	; 0x11
 516:	9a 89       	ldd	r25, Y+18	; 0x12
 518:	89 2b       	or	r24, r25
 51a:	19 f1       	breq	.+70     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 51c:	80 e9       	ldi	r24, 0x90	; 144
 51e:	91 e0       	ldi	r25, 0x01	; 1
 520:	9c 8b       	std	Y+20, r25	; 0x14
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 522:	8b 8b       	std	Y+19, r24	; 0x13
 524:	8b 89       	ldd	r24, Y+19	; 0x13
 526:	9c 89       	ldd	r25, Y+20	; 0x14
 528:	01 97       	sbiw	r24, 0x01	; 1
 52a:	f1 f7       	brne	.-4      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 52c:	9c 8b       	std	Y+20, r25	; 0x14
 52e:	8b 8b       	std	Y+19, r24	; 0x13
 530:	89 89       	ldd	r24, Y+17	; 0x11
 532:	9a 89       	ldd	r25, Y+18	; 0x12
 534:	01 97       	sbiw	r24, 0x01	; 1
 536:	9a 8b       	std	Y+18, r25	; 0x12
 538:	89 8b       	std	Y+17, r24	; 0x11
 53a:	ec cf       	rjmp	.-40     	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 53c:	6d 85       	ldd	r22, Y+13	; 0x0d
 53e:	7e 85       	ldd	r23, Y+14	; 0x0e
 540:	8f 85       	ldd	r24, Y+15	; 0x0f
 542:	98 89       	ldd	r25, Y+16	; 0x10
 544:	f8 d0       	rcall	.+496    	; 0x736 <__fixunssfsi>
 546:	dc 01       	movw	r26, r24
 548:	cb 01       	movw	r24, r22
 54a:	9a 8b       	std	Y+18, r25	; 0x12
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 54c:	89 8b       	std	Y+17, r24	; 0x11
 54e:	89 89       	ldd	r24, Y+17	; 0x11
 550:	9a 89       	ldd	r25, Y+18	; 0x12
 552:	9e 8b       	std	Y+22, r25	; 0x16
 554:	8d 8b       	std	Y+21, r24	; 0x15
 556:	8d 89       	ldd	r24, Y+21	; 0x15
  POSSIBILITY OF SUCH DAMAGE. */

/* $Id$ */

#ifndef _UTIL_DELAY_BASIC_H_
#define _UTIL_DELAY_BASIC_H_ 1
 558:	9e 89       	ldd	r25, Y+22	; 0x16
 55a:	01 97       	sbiw	r24, 0x01	; 1
 55c:	f1 f7       	brne	.-4      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 55e:	9e 8b       	std	Y+22, r25	; 0x16

 560:	8d 8b       	std	Y+21, r24	; 0x15
 562:	84 e2       	ldi	r24, 0x24	; 36
 564:	92 e0       	ldi	r25, 0x02	; 2
 566:	6d de       	rcall	.-806    	; 0x242 <_ZN4GPIO6toggleEv>
#include <inttypes.h>
 568:	87 e2       	ldi	r24, 0x27	; 39
 56a:	92 e0       	ldi	r25, 0x02	; 2
 56c:	6a de       	rcall	.-812    	; 0x242 <_ZN4GPIO6toggleEv>

 56e:	80 e3       	ldi	r24, 0x30	; 48
 570:	92 e0       	ldi	r25, 0x02	; 2
 572:	67 de       	rcall	.-818    	; 0x242 <_ZN4GPIO6toggleEv>
 574:	8d e2       	ldi	r24, 0x2D	; 45
#if !defined(__DOXYGEN__)
 576:	92 e0       	ldi	r25, 0x02	; 2
 578:	64 de       	rcall	.-824    	; 0x242 <_ZN4GPIO6toggleEv>
 57a:	8a e2       	ldi	r24, 0x2A	; 42
 57c:	92 e0       	ldi	r25, 0x02	; 2
 57e:	61 de       	rcall	.-830    	; 0x242 <_ZN4GPIO6toggleEv>
 580:	80 e0       	ldi	r24, 0x00	; 0
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	aa e7       	ldi	r26, 0x7A	; 122
 586:	b4 e4       	ldi	r27, 0x44	; 68
 588:	89 83       	std	Y+1, r24	; 0x01
 58a:	9a 83       	std	Y+2, r25	; 0x02
 58c:	ab 83       	std	Y+3, r26	; 0x03
 58e:	bc 83       	std	Y+4, r27	; 0x04
 590:	20 e0       	ldi	r18, 0x00	; 0
 592:	30 e0       	ldi	r19, 0x00	; 0
 594:	4a e7       	ldi	r20, 0x7A	; 122
 596:	55 e4       	ldi	r21, 0x45	; 69
 598:	69 81       	ldd	r22, Y+1	; 0x01
 59a:	7a 81       	ldd	r23, Y+2	; 0x02
 59c:	8b 81       	ldd	r24, Y+3	; 0x03
 59e:	9c 81       	ldd	r25, Y+4	; 0x04
 5a0:	47 d1       	rcall	.+654    	; 0x830 <__mulsf3>
 5a2:	dc 01       	movw	r26, r24
 5a4:	cb 01       	movw	r24, r22
 5a6:	89 a3       	std	Y+33, r24	; 0x21
 5a8:	9a a3       	std	Y+34, r25	; 0x22
 5aa:	ab a3       	std	Y+35, r26	; 0x23
 5ac:	bc a3       	std	Y+36, r27	; 0x24
 5ae:	20 e0       	ldi	r18, 0x00	; 0
 5b0:	30 e0       	ldi	r19, 0x00	; 0
 5b2:	40 e8       	ldi	r20, 0x80	; 128
 5b4:	5f e3       	ldi	r21, 0x3F	; 63
 5b6:	69 a1       	ldd	r22, Y+33	; 0x21
 5b8:	7a a1       	ldd	r23, Y+34	; 0x22
 5ba:	8b a1       	ldd	r24, Y+35	; 0x23
 5bc:	9c a1       	ldd	r25, Y+36	; 0x24
 5be:	b7 d0       	rcall	.+366    	; 0x72e <__cmpsf2>
 5c0:	88 23       	and	r24, r24
 5c2:	2c f4       	brge	.+10     	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5c4:	81 e0       	ldi	r24, 0x01	; 1
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	9e a3       	std	Y+38, r25	; 0x26
 5ca:	8d a3       	std	Y+37, r24	; 0x25
 5cc:	3b c0       	rjmp	.+118    	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 5ce:	20 e0       	ldi	r18, 0x00	; 0
 5d0:	3f ef       	ldi	r19, 0xFF	; 255
 5d2:	4f e7       	ldi	r20, 0x7F	; 127
 5d4:	57 e4       	ldi	r21, 0x47	; 71
 5d6:	69 a1       	ldd	r22, Y+33	; 0x21
 5d8:	7a a1       	ldd	r23, Y+34	; 0x22
 5da:	8b a1       	ldd	r24, Y+35	; 0x23
 5dc:	9c a1       	ldd	r25, Y+36	; 0x24
 5de:	24 d1       	rcall	.+584    	; 0x828 <__gesf2>
 5e0:	18 16       	cp	r1, r24
 5e2:	3c f5       	brge	.+78     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 5e4:	20 e0       	ldi	r18, 0x00	; 0
 5e6:	30 e0       	ldi	r19, 0x00	; 0
 5e8:	40 e2       	ldi	r20, 0x20	; 32
 5ea:	51 e4       	ldi	r21, 0x41	; 65
 5ec:	69 81       	ldd	r22, Y+1	; 0x01
 5ee:	7a 81       	ldd	r23, Y+2	; 0x02
 5f0:	8b 81       	ldd	r24, Y+3	; 0x03
 5f2:	9c 81       	ldd	r25, Y+4	; 0x04
 5f4:	1d d1       	rcall	.+570    	; 0x830 <__mulsf3>
 5f6:	dc 01       	movw	r26, r24
 5f8:	cb 01       	movw	r24, r22
 5fa:	bc 01       	movw	r22, r24
 5fc:	cd 01       	movw	r24, r26
 5fe:	9b d0       	rcall	.+310    	; 0x736 <__fixunssfsi>
 600:	dc 01       	movw	r26, r24
 602:	cb 01       	movw	r24, r22
 604:	9e a3       	std	Y+38, r25	; 0x26
 606:	8d a3       	std	Y+37, r24	; 0x25
 608:	8d a1       	ldd	r24, Y+37	; 0x25
 60a:	9e a1       	ldd	r25, Y+38	; 0x26
 60c:	89 2b       	or	r24, r25
 60e:	09 f4       	brne	.+2      	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 610:	a8 cf       	rjmp	.-176    	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 612:	80 e9       	ldi	r24, 0x90	; 144
 614:	91 e0       	ldi	r25, 0x01	; 1
 616:	98 a7       	std	Y+40, r25	; 0x28
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 618:	8f a3       	std	Y+39, r24	; 0x27
 61a:	8f a1       	ldd	r24, Y+39	; 0x27
 61c:	98 a5       	ldd	r25, Y+40	; 0x28
 61e:	01 97       	sbiw	r24, 0x01	; 1
 620:	f1 f7       	brne	.-4      	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 622:	98 a7       	std	Y+40, r25	; 0x28
 624:	8f a3       	std	Y+39, r24	; 0x27
 626:	8d a1       	ldd	r24, Y+37	; 0x25
 628:	9e a1       	ldd	r25, Y+38	; 0x26
 62a:	01 97       	sbiw	r24, 0x01	; 1
 62c:	9e a3       	std	Y+38, r25	; 0x26
 62e:	8d a3       	std	Y+37, r24	; 0x25
 630:	eb cf       	rjmp	.-42     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 632:	69 a1       	ldd	r22, Y+33	; 0x21
 634:	7a a1       	ldd	r23, Y+34	; 0x22
 636:	8b a1       	ldd	r24, Y+35	; 0x23
 638:	9c a1       	ldd	r25, Y+36	; 0x24
 63a:	7d d0       	rcall	.+250    	; 0x736 <__fixunssfsi>
 63c:	dc 01       	movw	r26, r24
 63e:	cb 01       	movw	r24, r22
 640:	9e a3       	std	Y+38, r25	; 0x26
 642:	8d a3       	std	Y+37, r24	; 0x25
 644:	8d a1       	ldd	r24, Y+37	; 0x25
 646:	9e a1       	ldd	r25, Y+38	; 0x26
 648:	9a a7       	std	Y+42, r25	; 0x2a
 64a:	89 a7       	std	Y+41, r24	; 0x29
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 64c:	89 a5       	ldd	r24, Y+41	; 0x29
 64e:	9a a5       	ldd	r25, Y+42	; 0x2a
 650:	01 97       	sbiw	r24, 0x01	; 1
 652:	f1 f7       	brne	.-4      	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 654:	9a a7       	std	Y+42, r25	; 0x2a
 656:	89 a7       	std	Y+41, r24	; 0x29
	led6.set(1);
	led4.set(1);
	led13.set(1);
	_delay_ms(1000);

	while (1){
 658:	84 cf       	rjmp	.-248    	; 0x562 <__LOCK_REGION_LENGTH__+0x162>

0000065a <_Z41__static_initialization_and_destruction_0ii>:
		led4.toggle();
		led13.toggle();
		_delay_ms(1000);
	}

}
 65a:	cf 93       	push	r28
 65c:	df 93       	push	r29
 65e:	00 d0       	rcall	.+0      	; 0x660 <_Z41__static_initialization_and_destruction_0ii+0x6>
 660:	1f 92       	push	r1
 662:	cd b7       	in	r28, 0x3d	; 61
 664:	de b7       	in	r29, 0x3e	; 62
 666:	9a 83       	std	Y+2, r25	; 0x02
 668:	89 83       	std	Y+1, r24	; 0x01
 66a:	7c 83       	std	Y+4, r23	; 0x04
 66c:	6b 83       	std	Y+3, r22	; 0x03
 66e:	89 81       	ldd	r24, Y+1	; 0x01
 670:	9a 81       	ldd	r25, Y+2	; 0x02
 672:	01 97       	sbiw	r24, 0x01	; 1
 674:	e9 f4       	brne	.+58     	; 0x6b0 <_Z41__static_initialization_and_destruction_0ii+0x56>
 676:	8b 81       	ldd	r24, Y+3	; 0x03
 678:	9c 81       	ldd	r25, Y+4	; 0x04
 67a:	01 96       	adiw	r24, 0x01	; 1
 67c:	c9 f4       	brne	.+50     	; 0x6b0 <_Z41__static_initialization_and_destruction_0ii+0x56>
#include <util/delay.h>
#include "GPIO.h"


//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
 67e:	41 e0       	ldi	r20, 0x01	; 1
 680:	60 e0       	ldi	r22, 0x00	; 0
 682:	84 e2       	ldi	r24, 0x24	; 36
 684:	92 e0       	ldi	r25, 0x02	; 2
 686:	5f dd       	rcall	.-1346   	; 0x146 <_ZN4GPIOC1EhNS_15PortDirection_tE>
GPIO led1(1, GPIO::OUTPUT);		//PE1
 688:	41 e0       	ldi	r20, 0x01	; 1
 68a:	61 e0       	ldi	r22, 0x01	; 1
 68c:	87 e2       	ldi	r24, 0x27	; 39
 68e:	92 e0       	ldi	r25, 0x02	; 2
 690:	5a dd       	rcall	.-1356   	; 0x146 <_ZN4GPIOC1EhNS_15PortDirection_tE>

//LEDS PLACA (acende com '1')
GPIO led13(13, GPIO::OUTPUT);	//PB7
 692:	41 e0       	ldi	r20, 0x01	; 1
 694:	6d e0       	ldi	r22, 0x0D	; 13
 696:	8a e2       	ldi	r24, 0x2A	; 42
 698:	92 e0       	ldi	r25, 0x02	; 2
 69a:	55 dd       	rcall	.-1366   	; 0x146 <_ZN4GPIOC1EhNS_15PortDirection_tE>

//Adicionar LED
GPIO led4(4, GPIO::OUTPUT);		//PG5
 69c:	41 e0       	ldi	r20, 0x01	; 1
 69e:	64 e0       	ldi	r22, 0x04	; 4
 6a0:	8d e2       	ldi	r24, 0x2D	; 45
 6a2:	92 e0       	ldi	r25, 0x02	; 2
GPIO led6(6, GPIO::OUTPUT);		//PH0
 6a4:	50 dd       	rcall	.-1376   	; 0x146 <_ZN4GPIOC1EhNS_15PortDirection_tE>
 6a6:	41 e0       	ldi	r20, 0x01	; 1
 6a8:	66 e0       	ldi	r22, 0x06	; 6
 6aa:	80 e3       	ldi	r24, 0x30	; 48
 6ac:	92 e0       	ldi	r25, 0x02	; 2
 6ae:	4b dd       	rcall	.-1386   	; 0x146 <_ZN4GPIOC1EhNS_15PortDirection_tE>
 6b0:	89 81       	ldd	r24, Y+1	; 0x01
 6b2:	9a 81       	ldd	r25, Y+2	; 0x02
 6b4:	89 2b       	or	r24, r25
 6b6:	99 f4       	brne	.+38     	; 0x6de <_Z41__static_initialization_and_destruction_0ii+0x84>
 6b8:	8b 81       	ldd	r24, Y+3	; 0x03
 6ba:	9c 81       	ldd	r25, Y+4	; 0x04
 6bc:	01 96       	adiw	r24, 0x01	; 1
 6be:	79 f4       	brne	.+30     	; 0x6de <_Z41__static_initialization_and_destruction_0ii+0x84>
 6c0:	80 e3       	ldi	r24, 0x30	; 48

//LEDS PLACA (acende com '1')
GPIO led13(13, GPIO::OUTPUT);	//PB7

//Adicionar LED
GPIO led4(4, GPIO::OUTPUT);		//PG5
 6c2:	92 e0       	ldi	r25, 0x02	; 2
 6c4:	83 dd       	rcall	.-1274   	; 0x1cc <_ZN4GPIOD1Ev>
 6c6:	8d e2       	ldi	r24, 0x2D	; 45
//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
GPIO led1(1, GPIO::OUTPUT);		//PE1

//LEDS PLACA (acende com '1')
GPIO led13(13, GPIO::OUTPUT);	//PB7
 6c8:	92 e0       	ldi	r25, 0x02	; 2
 6ca:	80 dd       	rcall	.-1280   	; 0x1cc <_ZN4GPIOD1Ev>
 6cc:	8a e2       	ldi	r24, 0x2A	; 42
#include "GPIO.h"


//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
GPIO led1(1, GPIO::OUTPUT);		//PE1
 6ce:	92 e0       	ldi	r25, 0x02	; 2
 6d0:	7d dd       	rcall	.-1286   	; 0x1cc <_ZN4GPIOD1Ev>
 6d2:	87 e2       	ldi	r24, 0x27	; 39
 6d4:	92 e0       	ldi	r25, 0x02	; 2
#include <util/delay.h>
#include "GPIO.h"


//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
 6d6:	7a dd       	rcall	.-1292   	; 0x1cc <_ZN4GPIOD1Ev>
 6d8:	84 e2       	ldi	r24, 0x24	; 36
 6da:	92 e0       	ldi	r25, 0x02	; 2
 6dc:	77 dd       	rcall	.-1298   	; 0x1cc <_ZN4GPIOD1Ev>
		led4.toggle();
		led13.toggle();
		_delay_ms(1000);
	}

}
 6de:	00 00       	nop
 6e0:	0f 90       	pop	r0
 6e2:	0f 90       	pop	r0
 6e4:	0f 90       	pop	r0
 6e6:	0f 90       	pop	r0
 6e8:	df 91       	pop	r29
 6ea:	cf 91       	pop	r28
 6ec:	08 95       	ret

000006ee <_GLOBAL__sub_I_led0>:
 6ee:	cf 93       	push	r28
 6f0:	df 93       	push	r29
 6f2:	cd b7       	in	r28, 0x3d	; 61
 6f4:	de b7       	in	r29, 0x3e	; 62
 6f6:	6f ef       	ldi	r22, 0xFF	; 255
 6f8:	7f ef       	ldi	r23, 0xFF	; 255
 6fa:	81 e0       	ldi	r24, 0x01	; 1
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	ad df       	rcall	.-166    	; 0x65a <_Z41__static_initialization_and_destruction_0ii>
 700:	df 91       	pop	r29
 702:	cf 91       	pop	r28
 704:	08 95       	ret

00000706 <_GLOBAL__sub_D_led0>:
 706:	cf 93       	push	r28
 708:	df 93       	push	r29
 70a:	cd b7       	in	r28, 0x3d	; 61
 70c:	de b7       	in	r29, 0x3e	; 62
 70e:	6f ef       	ldi	r22, 0xFF	; 255
 710:	7f ef       	ldi	r23, 0xFF	; 255
 712:	80 e0       	ldi	r24, 0x00	; 0
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	a1 df       	rcall	.-190    	; 0x65a <_Z41__static_initialization_and_destruction_0ii>
 718:	df 91       	pop	r29
 71a:	cf 91       	pop	r28
 71c:	08 95       	ret

0000071e <__tablejump2__>:
 71e:	ee 0f       	add	r30, r30
 720:	ff 1f       	adc	r31, r31
 722:	88 1f       	adc	r24, r24
 724:	8b bf       	out	0x3b, r24	; 59
 726:	07 90       	elpm	r0, Z+
 728:	f6 91       	elpm	r31, Z
 72a:	e0 2d       	mov	r30, r0
 72c:	19 94       	eijmp

0000072e <__cmpsf2>:
 72e:	2f d0       	rcall	.+94     	; 0x78e <__fp_cmp>
 730:	08 f4       	brcc	.+2      	; 0x734 <__cmpsf2+0x6>
 732:	81 e0       	ldi	r24, 0x01	; 1
 734:	08 95       	ret

00000736 <__fixunssfsi>:
 736:	57 d0       	rcall	.+174    	; 0x7e6 <__fp_splitA>
 738:	88 f0       	brcs	.+34     	; 0x75c <__fixunssfsi+0x26>
 73a:	9f 57       	subi	r25, 0x7F	; 127
 73c:	90 f0       	brcs	.+36     	; 0x762 <__fixunssfsi+0x2c>
 73e:	b9 2f       	mov	r27, r25
 740:	99 27       	eor	r25, r25
 742:	b7 51       	subi	r27, 0x17	; 23
 744:	a0 f0       	brcs	.+40     	; 0x76e <__fixunssfsi+0x38>
 746:	d1 f0       	breq	.+52     	; 0x77c <__fixunssfsi+0x46>
 748:	66 0f       	add	r22, r22
 74a:	77 1f       	adc	r23, r23
 74c:	88 1f       	adc	r24, r24
 74e:	99 1f       	adc	r25, r25
 750:	1a f0       	brmi	.+6      	; 0x758 <__fixunssfsi+0x22>
 752:	ba 95       	dec	r27
 754:	c9 f7       	brne	.-14     	; 0x748 <__fixunssfsi+0x12>
 756:	12 c0       	rjmp	.+36     	; 0x77c <__fixunssfsi+0x46>
 758:	b1 30       	cpi	r27, 0x01	; 1
 75a:	81 f0       	breq	.+32     	; 0x77c <__fixunssfsi+0x46>
 75c:	5e d0       	rcall	.+188    	; 0x81a <__fp_zero>
 75e:	b1 e0       	ldi	r27, 0x01	; 1
 760:	08 95       	ret
 762:	5b c0       	rjmp	.+182    	; 0x81a <__fp_zero>
 764:	67 2f       	mov	r22, r23
 766:	78 2f       	mov	r23, r24
 768:	88 27       	eor	r24, r24
 76a:	b8 5f       	subi	r27, 0xF8	; 248
 76c:	39 f0       	breq	.+14     	; 0x77c <__fixunssfsi+0x46>
 76e:	b9 3f       	cpi	r27, 0xF9	; 249
 770:	cc f3       	brlt	.-14     	; 0x764 <__fixunssfsi+0x2e>
 772:	86 95       	lsr	r24
 774:	77 95       	ror	r23
 776:	67 95       	ror	r22
 778:	b3 95       	inc	r27
 77a:	d9 f7       	brne	.-10     	; 0x772 <__fixunssfsi+0x3c>
 77c:	3e f4       	brtc	.+14     	; 0x78c <__fixunssfsi+0x56>
 77e:	90 95       	com	r25
 780:	80 95       	com	r24
 782:	70 95       	com	r23
 784:	61 95       	neg	r22
 786:	7f 4f       	sbci	r23, 0xFF	; 255
 788:	8f 4f       	sbci	r24, 0xFF	; 255
 78a:	9f 4f       	sbci	r25, 0xFF	; 255
 78c:	08 95       	ret

0000078e <__fp_cmp>:
 78e:	99 0f       	add	r25, r25
 790:	00 08       	sbc	r0, r0
 792:	55 0f       	add	r21, r21
 794:	aa 0b       	sbc	r26, r26
 796:	e0 e8       	ldi	r30, 0x80	; 128
 798:	fe ef       	ldi	r31, 0xFE	; 254
 79a:	16 16       	cp	r1, r22
 79c:	17 06       	cpc	r1, r23
 79e:	e8 07       	cpc	r30, r24
 7a0:	f9 07       	cpc	r31, r25
 7a2:	c0 f0       	brcs	.+48     	; 0x7d4 <__fp_cmp+0x46>
 7a4:	12 16       	cp	r1, r18
 7a6:	13 06       	cpc	r1, r19
 7a8:	e4 07       	cpc	r30, r20
 7aa:	f5 07       	cpc	r31, r21
 7ac:	98 f0       	brcs	.+38     	; 0x7d4 <__fp_cmp+0x46>
 7ae:	62 1b       	sub	r22, r18
 7b0:	73 0b       	sbc	r23, r19
 7b2:	84 0b       	sbc	r24, r20
 7b4:	95 0b       	sbc	r25, r21
 7b6:	39 f4       	brne	.+14     	; 0x7c6 <__fp_cmp+0x38>
 7b8:	0a 26       	eor	r0, r26
 7ba:	61 f0       	breq	.+24     	; 0x7d4 <__fp_cmp+0x46>
 7bc:	23 2b       	or	r18, r19
 7be:	24 2b       	or	r18, r20
 7c0:	25 2b       	or	r18, r21
 7c2:	21 f4       	brne	.+8      	; 0x7cc <__fp_cmp+0x3e>
 7c4:	08 95       	ret
 7c6:	0a 26       	eor	r0, r26
 7c8:	09 f4       	brne	.+2      	; 0x7cc <__fp_cmp+0x3e>
 7ca:	a1 40       	sbci	r26, 0x01	; 1
 7cc:	a6 95       	lsr	r26
 7ce:	8f ef       	ldi	r24, 0xFF	; 255
 7d0:	81 1d       	adc	r24, r1
 7d2:	81 1d       	adc	r24, r1
 7d4:	08 95       	ret

000007d6 <__fp_split3>:
 7d6:	57 fd       	sbrc	r21, 7
 7d8:	90 58       	subi	r25, 0x80	; 128
 7da:	44 0f       	add	r20, r20
 7dc:	55 1f       	adc	r21, r21
 7de:	59 f0       	breq	.+22     	; 0x7f6 <__fp_splitA+0x10>
 7e0:	5f 3f       	cpi	r21, 0xFF	; 255
 7e2:	71 f0       	breq	.+28     	; 0x800 <__fp_splitA+0x1a>
 7e4:	47 95       	ror	r20

000007e6 <__fp_splitA>:
 7e6:	88 0f       	add	r24, r24
 7e8:	97 fb       	bst	r25, 7
 7ea:	99 1f       	adc	r25, r25
 7ec:	61 f0       	breq	.+24     	; 0x806 <__fp_splitA+0x20>
 7ee:	9f 3f       	cpi	r25, 0xFF	; 255
 7f0:	79 f0       	breq	.+30     	; 0x810 <__fp_splitA+0x2a>
 7f2:	87 95       	ror	r24
 7f4:	08 95       	ret
 7f6:	12 16       	cp	r1, r18
 7f8:	13 06       	cpc	r1, r19
 7fa:	14 06       	cpc	r1, r20
 7fc:	55 1f       	adc	r21, r21
 7fe:	f2 cf       	rjmp	.-28     	; 0x7e4 <__fp_split3+0xe>
 800:	46 95       	lsr	r20
 802:	f1 df       	rcall	.-30     	; 0x7e6 <__fp_splitA>
 804:	08 c0       	rjmp	.+16     	; 0x816 <__fp_splitA+0x30>
 806:	16 16       	cp	r1, r22
 808:	17 06       	cpc	r1, r23
 80a:	18 06       	cpc	r1, r24
 80c:	99 1f       	adc	r25, r25
 80e:	f1 cf       	rjmp	.-30     	; 0x7f2 <__fp_splitA+0xc>
 810:	86 95       	lsr	r24
 812:	71 05       	cpc	r23, r1
 814:	61 05       	cpc	r22, r1
 816:	08 94       	sec
 818:	08 95       	ret

0000081a <__fp_zero>:
 81a:	e8 94       	clt

0000081c <__fp_szero>:
 81c:	bb 27       	eor	r27, r27
 81e:	66 27       	eor	r22, r22
 820:	77 27       	eor	r23, r23
 822:	cb 01       	movw	r24, r22
 824:	97 f9       	bld	r25, 7
 826:	08 95       	ret

00000828 <__gesf2>:
 828:	b2 df       	rcall	.-156    	; 0x78e <__fp_cmp>
 82a:	08 f4       	brcc	.+2      	; 0x82e <__gesf2+0x6>
 82c:	8f ef       	ldi	r24, 0xFF	; 255
 82e:	08 95       	ret

00000830 <__mulsf3>:
 830:	0b d0       	rcall	.+22     	; 0x848 <__mulsf3x>
 832:	78 c0       	rjmp	.+240    	; 0x924 <__fp_round>
 834:	69 d0       	rcall	.+210    	; 0x908 <__fp_pscA>
 836:	28 f0       	brcs	.+10     	; 0x842 <__mulsf3+0x12>
 838:	6e d0       	rcall	.+220    	; 0x916 <__fp_pscB>
 83a:	18 f0       	brcs	.+6      	; 0x842 <__mulsf3+0x12>
 83c:	95 23       	and	r25, r21
 83e:	09 f0       	breq	.+2      	; 0x842 <__mulsf3+0x12>
 840:	5a c0       	rjmp	.+180    	; 0x8f6 <__fp_inf>
 842:	5f c0       	rjmp	.+190    	; 0x902 <__fp_nan>
 844:	11 24       	eor	r1, r1
 846:	ea cf       	rjmp	.-44     	; 0x81c <__fp_szero>

00000848 <__mulsf3x>:
 848:	c6 df       	rcall	.-116    	; 0x7d6 <__fp_split3>
 84a:	a0 f3       	brcs	.-24     	; 0x834 <__mulsf3+0x4>

0000084c <__mulsf3_pse>:
 84c:	95 9f       	mul	r25, r21
 84e:	d1 f3       	breq	.-12     	; 0x844 <__mulsf3+0x14>
 850:	95 0f       	add	r25, r21
 852:	50 e0       	ldi	r21, 0x00	; 0
 854:	55 1f       	adc	r21, r21
 856:	62 9f       	mul	r22, r18
 858:	f0 01       	movw	r30, r0
 85a:	72 9f       	mul	r23, r18
 85c:	bb 27       	eor	r27, r27
 85e:	f0 0d       	add	r31, r0
 860:	b1 1d       	adc	r27, r1
 862:	63 9f       	mul	r22, r19
 864:	aa 27       	eor	r26, r26
 866:	f0 0d       	add	r31, r0
 868:	b1 1d       	adc	r27, r1
 86a:	aa 1f       	adc	r26, r26
 86c:	64 9f       	mul	r22, r20
 86e:	66 27       	eor	r22, r22
 870:	b0 0d       	add	r27, r0
 872:	a1 1d       	adc	r26, r1
 874:	66 1f       	adc	r22, r22
 876:	82 9f       	mul	r24, r18
 878:	22 27       	eor	r18, r18
 87a:	b0 0d       	add	r27, r0
 87c:	a1 1d       	adc	r26, r1
 87e:	62 1f       	adc	r22, r18
 880:	73 9f       	mul	r23, r19
 882:	b0 0d       	add	r27, r0
 884:	a1 1d       	adc	r26, r1
 886:	62 1f       	adc	r22, r18
 888:	83 9f       	mul	r24, r19
 88a:	a0 0d       	add	r26, r0
 88c:	61 1d       	adc	r22, r1
 88e:	22 1f       	adc	r18, r18
 890:	74 9f       	mul	r23, r20
 892:	33 27       	eor	r19, r19
 894:	a0 0d       	add	r26, r0
 896:	61 1d       	adc	r22, r1
 898:	23 1f       	adc	r18, r19
 89a:	84 9f       	mul	r24, r20
 89c:	60 0d       	add	r22, r0
 89e:	21 1d       	adc	r18, r1
 8a0:	82 2f       	mov	r24, r18
 8a2:	76 2f       	mov	r23, r22
 8a4:	6a 2f       	mov	r22, r26
 8a6:	11 24       	eor	r1, r1
 8a8:	9f 57       	subi	r25, 0x7F	; 127
 8aa:	50 40       	sbci	r21, 0x00	; 0
 8ac:	8a f0       	brmi	.+34     	; 0x8d0 <__mulsf3_pse+0x84>
 8ae:	e1 f0       	breq	.+56     	; 0x8e8 <__mulsf3_pse+0x9c>
 8b0:	88 23       	and	r24, r24
 8b2:	4a f0       	brmi	.+18     	; 0x8c6 <__mulsf3_pse+0x7a>
 8b4:	ee 0f       	add	r30, r30
 8b6:	ff 1f       	adc	r31, r31
 8b8:	bb 1f       	adc	r27, r27
 8ba:	66 1f       	adc	r22, r22
 8bc:	77 1f       	adc	r23, r23
 8be:	88 1f       	adc	r24, r24
 8c0:	91 50       	subi	r25, 0x01	; 1
 8c2:	50 40       	sbci	r21, 0x00	; 0
 8c4:	a9 f7       	brne	.-22     	; 0x8b0 <__mulsf3_pse+0x64>
 8c6:	9e 3f       	cpi	r25, 0xFE	; 254
 8c8:	51 05       	cpc	r21, r1
 8ca:	70 f0       	brcs	.+28     	; 0x8e8 <__mulsf3_pse+0x9c>
 8cc:	14 c0       	rjmp	.+40     	; 0x8f6 <__fp_inf>
 8ce:	a6 cf       	rjmp	.-180    	; 0x81c <__fp_szero>
 8d0:	5f 3f       	cpi	r21, 0xFF	; 255
 8d2:	ec f3       	brlt	.-6      	; 0x8ce <__mulsf3_pse+0x82>
 8d4:	98 3e       	cpi	r25, 0xE8	; 232
 8d6:	dc f3       	brlt	.-10     	; 0x8ce <__mulsf3_pse+0x82>
 8d8:	86 95       	lsr	r24
 8da:	77 95       	ror	r23
 8dc:	67 95       	ror	r22
 8de:	b7 95       	ror	r27
 8e0:	f7 95       	ror	r31
 8e2:	e7 95       	ror	r30
 8e4:	9f 5f       	subi	r25, 0xFF	; 255
 8e6:	c1 f7       	brne	.-16     	; 0x8d8 <__mulsf3_pse+0x8c>
 8e8:	fe 2b       	or	r31, r30
 8ea:	88 0f       	add	r24, r24
 8ec:	91 1d       	adc	r25, r1
 8ee:	96 95       	lsr	r25
 8f0:	87 95       	ror	r24
 8f2:	97 f9       	bld	r25, 7
 8f4:	08 95       	ret

000008f6 <__fp_inf>:
 8f6:	97 f9       	bld	r25, 7
 8f8:	9f 67       	ori	r25, 0x7F	; 127
 8fa:	80 e8       	ldi	r24, 0x80	; 128
 8fc:	70 e0       	ldi	r23, 0x00	; 0
 8fe:	60 e0       	ldi	r22, 0x00	; 0
 900:	08 95       	ret

00000902 <__fp_nan>:
 902:	9f ef       	ldi	r25, 0xFF	; 255
 904:	80 ec       	ldi	r24, 0xC0	; 192
 906:	08 95       	ret

00000908 <__fp_pscA>:
 908:	00 24       	eor	r0, r0
 90a:	0a 94       	dec	r0
 90c:	16 16       	cp	r1, r22
 90e:	17 06       	cpc	r1, r23
 910:	18 06       	cpc	r1, r24
 912:	09 06       	cpc	r0, r25
 914:	08 95       	ret

00000916 <__fp_pscB>:
 916:	00 24       	eor	r0, r0
 918:	0a 94       	dec	r0
 91a:	12 16       	cp	r1, r18
 91c:	13 06       	cpc	r1, r19
 91e:	14 06       	cpc	r1, r20
 920:	05 06       	cpc	r0, r21
 922:	08 95       	ret

00000924 <__fp_round>:
 924:	09 2e       	mov	r0, r25
 926:	03 94       	inc	r0
 928:	00 0c       	add	r0, r0
 92a:	11 f4       	brne	.+4      	; 0x930 <__fp_round+0xc>
 92c:	88 23       	and	r24, r24
 92e:	52 f0       	brmi	.+20     	; 0x944 <__fp_round+0x20>
 930:	bb 0f       	add	r27, r27
 932:	40 f4       	brcc	.+16     	; 0x944 <__fp_round+0x20>
 934:	bf 2b       	or	r27, r31
 936:	11 f4       	brne	.+4      	; 0x93c <__fp_round+0x18>
 938:	60 ff       	sbrs	r22, 0
 93a:	04 c0       	rjmp	.+8      	; 0x944 <__fp_round+0x20>
 93c:	6f 5f       	subi	r22, 0xFF	; 255
 93e:	7f 4f       	sbci	r23, 0xFF	; 255
 940:	8f 4f       	sbci	r24, 0xFF	; 255
 942:	9f 4f       	sbci	r25, 0xFF	; 255
 944:	08 95       	ret

00000946 <__do_global_dtors>:
 946:	10 e0       	ldi	r17, 0x00	; 0
 948:	c3 e7       	ldi	r28, 0x73	; 115
 94a:	d0 e0       	ldi	r29, 0x00	; 0
 94c:	00 e0       	ldi	r16, 0x00	; 0
 94e:	05 c0       	rjmp	.+10     	; 0x95a <__do_global_dtors+0x14>
 950:	80 2f       	mov	r24, r16
 952:	fe 01       	movw	r30, r28
 954:	e4 de       	rcall	.-568    	; 0x71e <__tablejump2__>
 956:	21 96       	adiw	r28, 0x01	; 1
 958:	01 1d       	adc	r16, r1
 95a:	c4 37       	cpi	r28, 0x74	; 116
 95c:	d1 07       	cpc	r29, r17
 95e:	80 e0       	ldi	r24, 0x00	; 0
 960:	08 07       	cpc	r16, r24
 962:	b1 f7       	brne	.-20     	; 0x950 <__do_global_dtors+0xa>
 964:	f8 94       	cli

00000966 <__stop_program>:
 966:	ff cf       	rjmp	.-2      	; 0x966 <__stop_program>

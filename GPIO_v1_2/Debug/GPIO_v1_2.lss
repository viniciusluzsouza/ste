
GPIO_v1_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000b18  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000aa4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000028  00800200  00800200  00000b18  2**0
                  ALLOC
  3 .stab         000010ec  00000000  00000000  00000b18  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000f68  00000000  00000000  00001c04  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00002b6c  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002b80  2**2
                  CONTENTS, READONLY
  7 .debug_info   00000bbc  00000000  00000000  00002bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000b1a  00000000  00000000  0000377c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  00004296  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e6  00000000  00000000  000042b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	81 c0       	rjmp	.+258    	; 0x104 <__dtors_end>
   2:	00 00       	nop
   4:	a0 c0       	rjmp	.+320    	; 0x146 <__bad_interrupt>
   6:	00 00       	nop
   8:	9e c0       	rjmp	.+316    	; 0x146 <__bad_interrupt>
   a:	00 00       	nop
   c:	9c c0       	rjmp	.+312    	; 0x146 <__bad_interrupt>
   e:	00 00       	nop
  10:	9a c0       	rjmp	.+308    	; 0x146 <__bad_interrupt>
  12:	00 00       	nop
  14:	98 c0       	rjmp	.+304    	; 0x146 <__bad_interrupt>
  16:	00 00       	nop
  18:	96 c0       	rjmp	.+300    	; 0x146 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	94 c0       	rjmp	.+296    	; 0x146 <__bad_interrupt>
  1e:	00 00       	nop
  20:	92 c0       	rjmp	.+292    	; 0x146 <__bad_interrupt>
  22:	00 00       	nop
  24:	90 c0       	rjmp	.+288    	; 0x146 <__bad_interrupt>
  26:	00 00       	nop
  28:	8e c0       	rjmp	.+284    	; 0x146 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	8c c0       	rjmp	.+280    	; 0x146 <__bad_interrupt>
  2e:	00 00       	nop
  30:	8a c0       	rjmp	.+276    	; 0x146 <__bad_interrupt>
  32:	00 00       	nop
  34:	88 c0       	rjmp	.+272    	; 0x146 <__bad_interrupt>
  36:	00 00       	nop
  38:	86 c0       	rjmp	.+268    	; 0x146 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	84 c0       	rjmp	.+264    	; 0x146 <__bad_interrupt>
  3e:	00 00       	nop
  40:	82 c0       	rjmp	.+260    	; 0x146 <__bad_interrupt>
  42:	00 00       	nop
  44:	80 c0       	rjmp	.+256    	; 0x146 <__bad_interrupt>
  46:	00 00       	nop
  48:	7e c0       	rjmp	.+252    	; 0x146 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	7c c0       	rjmp	.+248    	; 0x146 <__bad_interrupt>
  4e:	00 00       	nop
  50:	7a c0       	rjmp	.+244    	; 0x146 <__bad_interrupt>
  52:	00 00       	nop
  54:	78 c0       	rjmp	.+240    	; 0x146 <__bad_interrupt>
  56:	00 00       	nop
  58:	76 c0       	rjmp	.+236    	; 0x146 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	74 c0       	rjmp	.+232    	; 0x146 <__bad_interrupt>
  5e:	00 00       	nop
  60:	72 c0       	rjmp	.+228    	; 0x146 <__bad_interrupt>
  62:	00 00       	nop
  64:	70 c0       	rjmp	.+224    	; 0x146 <__bad_interrupt>
  66:	00 00       	nop
  68:	6e c0       	rjmp	.+220    	; 0x146 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	6c c0       	rjmp	.+216    	; 0x146 <__bad_interrupt>
  6e:	00 00       	nop
  70:	6a c0       	rjmp	.+212    	; 0x146 <__bad_interrupt>
  72:	00 00       	nop
  74:	68 c0       	rjmp	.+208    	; 0x146 <__bad_interrupt>
  76:	00 00       	nop
  78:	66 c0       	rjmp	.+204    	; 0x146 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	64 c0       	rjmp	.+200    	; 0x146 <__bad_interrupt>
  7e:	00 00       	nop
  80:	62 c0       	rjmp	.+196    	; 0x146 <__bad_interrupt>
  82:	00 00       	nop
  84:	60 c0       	rjmp	.+192    	; 0x146 <__bad_interrupt>
  86:	00 00       	nop
  88:	5e c0       	rjmp	.+188    	; 0x146 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	5c c0       	rjmp	.+184    	; 0x146 <__bad_interrupt>
  8e:	00 00       	nop
  90:	5a c0       	rjmp	.+180    	; 0x146 <__bad_interrupt>
  92:	00 00       	nop
  94:	58 c0       	rjmp	.+176    	; 0x146 <__bad_interrupt>
  96:	00 00       	nop
  98:	56 c0       	rjmp	.+172    	; 0x146 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	54 c0       	rjmp	.+168    	; 0x146 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	52 c0       	rjmp	.+164    	; 0x146 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	50 c0       	rjmp	.+160    	; 0x146 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	4e c0       	rjmp	.+156    	; 0x146 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	4c c0       	rjmp	.+152    	; 0x146 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	4a c0       	rjmp	.+148    	; 0x146 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	48 c0       	rjmp	.+144    	; 0x146 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	46 c0       	rjmp	.+140    	; 0x146 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	44 c0       	rjmp	.+136    	; 0x146 <__bad_interrupt>
  be:	00 00       	nop
  c0:	42 c0       	rjmp	.+132    	; 0x146 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	40 c0       	rjmp	.+128    	; 0x146 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	3e c0       	rjmp	.+124    	; 0x146 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	3c c0       	rjmp	.+120    	; 0x146 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	3a c0       	rjmp	.+116    	; 0x146 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	38 c0       	rjmp	.+112    	; 0x146 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	36 c0       	rjmp	.+108    	; 0x146 <__bad_interrupt>
  da:	00 00       	nop
  dc:	34 c0       	rjmp	.+104    	; 0x146 <__bad_interrupt>
  de:	00 00       	nop
  e0:	32 c0       	rjmp	.+100    	; 0x146 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	cd 00       	.word	0x00cd	; ????
  e6:	cd 00       	.word	0x00cd	; ????
  e8:	f2 00       	.word	0x00f2	; ????
  ea:	f2 00       	.word	0x00f2	; ????
  ec:	1a 01       	movw	r2, r20
  ee:	35 01       	movw	r6, r10
  f0:	50 01       	movw	r10, r0
  f2:	50 01       	movw	r10, r0
  f4:	50 01       	movw	r10, r0
  f6:	50 01       	movw	r10, r0
  f8:	78 01       	movw	r14, r16
  fa:	78 01       	movw	r14, r16
  fc:	78 01       	movw	r14, r16
  fe:	78 01       	movw	r14, r16

00000100 <__ctors_start>:
 100:	15 04       	cpc	r1, r5

00000102 <__ctors_end>:
 102:	21 04       	cpc	r2, r1

00000104 <__dtors_end>:
 104:	11 24       	eor	r1, r1
 106:	1f be       	out	0x3f, r1	; 63
 108:	cf ef       	ldi	r28, 0xFF	; 255
 10a:	d1 e2       	ldi	r29, 0x21	; 33
 10c:	de bf       	out	0x3e, r29	; 62
 10e:	cd bf       	out	0x3d, r28	; 61
 110:	00 e0       	ldi	r16, 0x00	; 0
 112:	0c bf       	out	0x3c, r16	; 60

00000114 <__do_clear_bss>:
 114:	22 e0       	ldi	r18, 0x02	; 2
 116:	a0 e0       	ldi	r26, 0x00	; 0
 118:	b2 e0       	ldi	r27, 0x02	; 2
 11a:	01 c0       	rjmp	.+2      	; 0x11e <.do_clear_bss_start>

0000011c <.do_clear_bss_loop>:
 11c:	1d 92       	st	X+, r1

0000011e <.do_clear_bss_start>:
 11e:	a8 32       	cpi	r26, 0x28	; 40
 120:	b2 07       	cpc	r27, r18
 122:	e1 f7       	brne	.-8      	; 0x11c <.do_clear_bss_loop>

00000124 <__do_global_ctors>:
 124:	10 e0       	ldi	r17, 0x00	; 0
 126:	c1 e8       	ldi	r28, 0x81	; 129
 128:	d0 e0       	ldi	r29, 0x00	; 0
 12a:	00 e0       	ldi	r16, 0x00	; 0
 12c:	05 c0       	rjmp	.+10     	; 0x138 <__do_global_ctors+0x14>
 12e:	21 97       	sbiw	r28, 0x01	; 1
 130:	01 09       	sbc	r16, r1
 132:	80 2f       	mov	r24, r16
 134:	fe 01       	movw	r30, r28
 136:	91 d3       	rcall	.+1826   	; 0x85a <__tablejump2__>
 138:	c0 38       	cpi	r28, 0x80	; 128
 13a:	d1 07       	cpc	r29, r17
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	08 07       	cpc	r16, r24
 140:	b1 f7       	brne	.-20     	; 0x12e <__do_global_ctors+0xa>
 142:	a6 d1       	rcall	.+844    	; 0x490 <main>
 144:	9e c4       	rjmp	.+2364   	; 0xa82 <__do_global_dtors>

00000146 <__bad_interrupt>:
 146:	5c cf       	rjmp	.-328    	; 0x0 <__vectors>

00000148 <_ZN4GPIOC1EhNS_15PortDirection_tE>:
 */

#include <avr/io.h>
#include "GPIO.h"

GPIO::GPIO(uint8_t id, PortDirection_t dir):
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	00 d0       	rcall	.+0      	; 0x14e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x6>
 14e:	1f 92       	push	r1
 150:	cd b7       	in	r28, 0x3d	; 61
 152:	de b7       	in	r29, 0x3e	; 62
 154:	9a 83       	std	Y+2, r25	; 0x02
 156:	89 83       	std	Y+1, r24	; 0x01
 158:	6b 83       	std	Y+3, r22	; 0x03
 15a:	4c 83       	std	Y+4, r20	; 0x04
_id(id)
 15c:	89 81       	ldd	r24, Y+1	; 0x01
 15e:	9a 81       	ldd	r25, Y+2	; 0x02
 160:	2b 81       	ldd	r18, Y+3	; 0x03
 162:	fc 01       	movw	r30, r24
 164:	26 83       	std	Z+6, r18	; 0x06
{
	switch (_id) {
 166:	89 81       	ldd	r24, Y+1	; 0x01
 168:	9a 81       	ldd	r25, Y+2	; 0x02
 16a:	fc 01       	movw	r30, r24
 16c:	86 81       	ldd	r24, Z+6	; 0x06
 16e:	88 2f       	mov	r24, r24
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	09 2e       	mov	r0, r25
 174:	00 0c       	add	r0, r0
 176:	aa 0b       	sbc	r26, r26
 178:	bb 0b       	sbc	r27, r27
 17a:	40 e0       	ldi	r20, 0x00	; 0
 17c:	50 e0       	ldi	r21, 0x00	; 0
 17e:	2d e0       	ldi	r18, 0x0D	; 13
 180:	30 e0       	ldi	r19, 0x00	; 0
 182:	84 1b       	sub	r24, r20
 184:	95 0b       	sbc	r25, r21
 186:	28 17       	cp	r18, r24
 188:	39 07       	cpc	r19, r25
 18a:	08 f4       	brcc	.+2      	; 0x18e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x46>
 18c:	d9 c0       	rjmp	.+434    	; 0x340 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x1f8>
 18e:	fc 01       	movw	r30, r24
 190:	88 27       	eor	r24, r24
 192:	ee 58       	subi	r30, 0x8E	; 142
 194:	ff 4f       	sbci	r31, 0xFF	; 255
 196:	8f 4f       	sbci	r24, 0xFF	; 255
 198:	60 c3       	rjmp	.+1728   	; 0x85a <__tablejump2__>
	case 0:
	case 1:
		_bit = (1 << id);
 19a:	8b 81       	ldd	r24, Y+3	; 0x03
 19c:	28 2f       	mov	r18, r24
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <_ZN4GPIOC1EhNS_15PortDirection_tE+0x62>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	2a 95       	dec	r18
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x5e>
 1ae:	28 2f       	mov	r18, r24
 1b0:	89 81       	ldd	r24, Y+1	; 0x01
 1b2:	9a 81       	ldd	r25, Y+2	; 0x02
 1b4:	fc 01       	movw	r30, r24
 1b6:	27 83       	std	Z+7, r18	; 0x07
		_pin = &PINE;
 1b8:	89 81       	ldd	r24, Y+1	; 0x01
 1ba:	9a 81       	ldd	r25, Y+2	; 0x02
 1bc:	2c e2       	ldi	r18, 0x2C	; 44
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	fc 01       	movw	r30, r24
 1c2:	31 83       	std	Z+1, r19	; 0x01
 1c4:	20 83       	st	Z, r18
		_ddr = &DDRE;
 1c6:	89 81       	ldd	r24, Y+1	; 0x01
 1c8:	9a 81       	ldd	r25, Y+2	; 0x02
 1ca:	2d e2       	ldi	r18, 0x2D	; 45
 1cc:	30 e0       	ldi	r19, 0x00	; 0
 1ce:	fc 01       	movw	r30, r24
 1d0:	33 83       	std	Z+3, r19	; 0x03
 1d2:	22 83       	std	Z+2, r18	; 0x02
		_port = &PORTE;
 1d4:	89 81       	ldd	r24, Y+1	; 0x01
 1d6:	9a 81       	ldd	r25, Y+2	; 0x02
 1d8:	2e e2       	ldi	r18, 0x2E	; 46
 1da:	30 e0       	ldi	r19, 0x00	; 0
 1dc:	fc 01       	movw	r30, r24
 1de:	35 83       	std	Z+5, r19	; 0x05
 1e0:	24 83       	std	Z+4, r18	; 0x04
		break;
 1e2:	ae c0       	rjmp	.+348    	; 0x340 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x1f8>

	case 2:
	case 3:
		_bit = (1 << (id + 2));
 1e4:	8b 81       	ldd	r24, Y+3	; 0x03
 1e6:	88 2f       	mov	r24, r24
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	9c 01       	movw	r18, r24
 1ec:	2e 5f       	subi	r18, 0xFE	; 254
 1ee:	3f 4f       	sbci	r19, 0xFF	; 255
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <_ZN4GPIOC1EhNS_15PortDirection_tE+0xb2>
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	2a 95       	dec	r18
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <_ZN4GPIOC1EhNS_15PortDirection_tE+0xae>
 1fe:	28 2f       	mov	r18, r24
 200:	89 81       	ldd	r24, Y+1	; 0x01
 202:	9a 81       	ldd	r25, Y+2	; 0x02
 204:	fc 01       	movw	r30, r24
 206:	27 83       	std	Z+7, r18	; 0x07
		_pin = &PINE;
 208:	89 81       	ldd	r24, Y+1	; 0x01
 20a:	9a 81       	ldd	r25, Y+2	; 0x02
 20c:	2c e2       	ldi	r18, 0x2C	; 44
 20e:	30 e0       	ldi	r19, 0x00	; 0
 210:	fc 01       	movw	r30, r24
 212:	31 83       	std	Z+1, r19	; 0x01
 214:	20 83       	st	Z, r18
		_ddr = &DDRE;
 216:	89 81       	ldd	r24, Y+1	; 0x01
 218:	9a 81       	ldd	r25, Y+2	; 0x02
 21a:	2d e2       	ldi	r18, 0x2D	; 45
 21c:	30 e0       	ldi	r19, 0x00	; 0
 21e:	fc 01       	movw	r30, r24
 220:	33 83       	std	Z+3, r19	; 0x03
 222:	22 83       	std	Z+2, r18	; 0x02
		_port = &PORTE;
 224:	89 81       	ldd	r24, Y+1	; 0x01
 226:	9a 81       	ldd	r25, Y+2	; 0x02
 228:	2e e2       	ldi	r18, 0x2E	; 46
 22a:	30 e0       	ldi	r19, 0x00	; 0
 22c:	fc 01       	movw	r30, r24
 22e:	35 83       	std	Z+5, r19	; 0x05
 230:	24 83       	std	Z+4, r18	; 0x04
		break;
 232:	86 c0       	rjmp	.+268    	; 0x340 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x1f8>

	case 4:
		_bit = (1 << DDG5);
 234:	89 81       	ldd	r24, Y+1	; 0x01
 236:	9a 81       	ldd	r25, Y+2	; 0x02
 238:	20 e2       	ldi	r18, 0x20	; 32
 23a:	fc 01       	movw	r30, r24
 23c:	27 83       	std	Z+7, r18	; 0x07
		_pin = &PING;
 23e:	89 81       	ldd	r24, Y+1	; 0x01
 240:	9a 81       	ldd	r25, Y+2	; 0x02
 242:	22 e3       	ldi	r18, 0x32	; 50
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	fc 01       	movw	r30, r24
 248:	31 83       	std	Z+1, r19	; 0x01
 24a:	20 83       	st	Z, r18
		_ddr = &DDRG;
 24c:	89 81       	ldd	r24, Y+1	; 0x01
 24e:	9a 81       	ldd	r25, Y+2	; 0x02
 250:	23 e3       	ldi	r18, 0x33	; 51
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	fc 01       	movw	r30, r24
 256:	33 83       	std	Z+3, r19	; 0x03
 258:	22 83       	std	Z+2, r18	; 0x02
		_port = &PORTG;
 25a:	89 81       	ldd	r24, Y+1	; 0x01
 25c:	9a 81       	ldd	r25, Y+2	; 0x02
 25e:	24 e3       	ldi	r18, 0x34	; 52
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	fc 01       	movw	r30, r24
 264:	35 83       	std	Z+5, r19	; 0x05
 266:	24 83       	std	Z+4, r18	; 0x04
		break;
 268:	6b c0       	rjmp	.+214    	; 0x340 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x1f8>

	case 5:
		_bit = (1 << DDE3);
 26a:	89 81       	ldd	r24, Y+1	; 0x01
 26c:	9a 81       	ldd	r25, Y+2	; 0x02
 26e:	28 e0       	ldi	r18, 0x08	; 8
 270:	fc 01       	movw	r30, r24
 272:	27 83       	std	Z+7, r18	; 0x07
		_pin = &PINE;
 274:	89 81       	ldd	r24, Y+1	; 0x01
 276:	9a 81       	ldd	r25, Y+2	; 0x02
 278:	2c e2       	ldi	r18, 0x2C	; 44
 27a:	30 e0       	ldi	r19, 0x00	; 0
 27c:	fc 01       	movw	r30, r24
 27e:	31 83       	std	Z+1, r19	; 0x01
 280:	20 83       	st	Z, r18
		_ddr = &DDRE;
 282:	89 81       	ldd	r24, Y+1	; 0x01
 284:	9a 81       	ldd	r25, Y+2	; 0x02
 286:	2d e2       	ldi	r18, 0x2D	; 45
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	fc 01       	movw	r30, r24
 28c:	33 83       	std	Z+3, r19	; 0x03
 28e:	22 83       	std	Z+2, r18	; 0x02
		_port = &PORTE;
 290:	89 81       	ldd	r24, Y+1	; 0x01
 292:	9a 81       	ldd	r25, Y+2	; 0x02
 294:	2e e2       	ldi	r18, 0x2E	; 46
 296:	30 e0       	ldi	r19, 0x00	; 0
 298:	fc 01       	movw	r30, r24
 29a:	35 83       	std	Z+5, r19	; 0x05
 29c:	24 83       	std	Z+4, r18	; 0x04
		break;
 29e:	50 c0       	rjmp	.+160    	; 0x340 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x1f8>

	case 6:
	case 7:
	case 8:
	case 9:
		_bit = (1 << (id - 3));
 2a0:	8b 81       	ldd	r24, Y+3	; 0x03
 2a2:	88 2f       	mov	r24, r24
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	9c 01       	movw	r18, r24
 2a8:	23 50       	subi	r18, 0x03	; 3
 2aa:	31 09       	sbc	r19, r1
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x16e>
 2b2:	88 0f       	add	r24, r24
 2b4:	99 1f       	adc	r25, r25
 2b6:	2a 95       	dec	r18
 2b8:	e2 f7       	brpl	.-8      	; 0x2b2 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x16a>
 2ba:	28 2f       	mov	r18, r24
 2bc:	89 81       	ldd	r24, Y+1	; 0x01
 2be:	9a 81       	ldd	r25, Y+2	; 0x02
 2c0:	fc 01       	movw	r30, r24
 2c2:	27 83       	std	Z+7, r18	; 0x07
		_pin = &PINH;
 2c4:	89 81       	ldd	r24, Y+1	; 0x01
 2c6:	9a 81       	ldd	r25, Y+2	; 0x02
 2c8:	20 e0       	ldi	r18, 0x00	; 0
 2ca:	31 e0       	ldi	r19, 0x01	; 1
 2cc:	fc 01       	movw	r30, r24
 2ce:	31 83       	std	Z+1, r19	; 0x01
 2d0:	20 83       	st	Z, r18
		_ddr = &DDRH;
 2d2:	89 81       	ldd	r24, Y+1	; 0x01
 2d4:	9a 81       	ldd	r25, Y+2	; 0x02
 2d6:	21 e0       	ldi	r18, 0x01	; 1
 2d8:	31 e0       	ldi	r19, 0x01	; 1
 2da:	fc 01       	movw	r30, r24
 2dc:	33 83       	std	Z+3, r19	; 0x03
 2de:	22 83       	std	Z+2, r18	; 0x02
		_port = &PORTH;
 2e0:	89 81       	ldd	r24, Y+1	; 0x01
 2e2:	9a 81       	ldd	r25, Y+2	; 0x02
 2e4:	22 e0       	ldi	r18, 0x02	; 2
 2e6:	31 e0       	ldi	r19, 0x01	; 1
 2e8:	fc 01       	movw	r30, r24
 2ea:	35 83       	std	Z+5, r19	; 0x05
 2ec:	24 83       	std	Z+4, r18	; 0x04
		break;
 2ee:	28 c0       	rjmp	.+80     	; 0x340 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x1f8>

	case 10:
	case 11:
	case 12:
	case 13:
		_bit = (1 << (id - 6));
 2f0:	8b 81       	ldd	r24, Y+3	; 0x03
 2f2:	88 2f       	mov	r24, r24
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	9c 01       	movw	r18, r24
 2f8:	26 50       	subi	r18, 0x06	; 6
 2fa:	31 09       	sbc	r19, r1
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	02 c0       	rjmp	.+4      	; 0x306 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x1be>
 302:	88 0f       	add	r24, r24
 304:	99 1f       	adc	r25, r25
 306:	2a 95       	dec	r18
 308:	e2 f7       	brpl	.-8      	; 0x302 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x1ba>
 30a:	28 2f       	mov	r18, r24
 30c:	89 81       	ldd	r24, Y+1	; 0x01
 30e:	9a 81       	ldd	r25, Y+2	; 0x02
 310:	fc 01       	movw	r30, r24
 312:	27 83       	std	Z+7, r18	; 0x07
		_pin = &PINB;
 314:	89 81       	ldd	r24, Y+1	; 0x01
 316:	9a 81       	ldd	r25, Y+2	; 0x02
 318:	23 e2       	ldi	r18, 0x23	; 35
 31a:	30 e0       	ldi	r19, 0x00	; 0
 31c:	fc 01       	movw	r30, r24
 31e:	31 83       	std	Z+1, r19	; 0x01
 320:	20 83       	st	Z, r18
		_ddr = &DDRB;
 322:	89 81       	ldd	r24, Y+1	; 0x01
 324:	9a 81       	ldd	r25, Y+2	; 0x02
 326:	24 e2       	ldi	r18, 0x24	; 36
 328:	30 e0       	ldi	r19, 0x00	; 0
 32a:	fc 01       	movw	r30, r24
 32c:	33 83       	std	Z+3, r19	; 0x03
 32e:	22 83       	std	Z+2, r18	; 0x02
		_port = &PORTB;
 330:	89 81       	ldd	r24, Y+1	; 0x01
 332:	9a 81       	ldd	r25, Y+2	; 0x02
 334:	25 e2       	ldi	r18, 0x25	; 37
 336:	30 e0       	ldi	r19, 0x00	; 0
 338:	fc 01       	movw	r30, r24
 33a:	35 83       	std	Z+5, r19	; 0x05
 33c:	24 83       	std	Z+4, r18	; 0x04
		break;
 33e:	00 00       	nop

	}

	if (dir)
 340:	8c 81       	ldd	r24, Y+4	; 0x04
 342:	88 23       	and	r24, r24
 344:	a1 f0       	breq	.+40     	; 0x36e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x226>
		*_ddr |= _bit;
 346:	89 81       	ldd	r24, Y+1	; 0x01
 348:	9a 81       	ldd	r25, Y+2	; 0x02
 34a:	fc 01       	movw	r30, r24
 34c:	82 81       	ldd	r24, Z+2	; 0x02
 34e:	93 81       	ldd	r25, Z+3	; 0x03
 350:	29 81       	ldd	r18, Y+1	; 0x01
 352:	3a 81       	ldd	r19, Y+2	; 0x02
 354:	f9 01       	movw	r30, r18
 356:	22 81       	ldd	r18, Z+2	; 0x02
 358:	33 81       	ldd	r19, Z+3	; 0x03
 35a:	f9 01       	movw	r30, r18
 35c:	40 81       	ld	r20, Z
 35e:	29 81       	ldd	r18, Y+1	; 0x01
 360:	3a 81       	ldd	r19, Y+2	; 0x02
 362:	f9 01       	movw	r30, r18
 364:	27 81       	ldd	r18, Z+7	; 0x07
 366:	24 2b       	or	r18, r20
 368:	fc 01       	movw	r30, r24
 36a:	20 83       	st	Z, r18
	else
		*_ddr &= ~_bit;

}
 36c:	15 c0       	rjmp	.+42     	; 0x398 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x250>
	}

	if (dir)
		*_ddr |= _bit;
	else
		*_ddr &= ~_bit;
 36e:	89 81       	ldd	r24, Y+1	; 0x01
 370:	9a 81       	ldd	r25, Y+2	; 0x02
 372:	fc 01       	movw	r30, r24
 374:	82 81       	ldd	r24, Z+2	; 0x02
 376:	93 81       	ldd	r25, Z+3	; 0x03
 378:	29 81       	ldd	r18, Y+1	; 0x01
 37a:	3a 81       	ldd	r19, Y+2	; 0x02
 37c:	f9 01       	movw	r30, r18
 37e:	22 81       	ldd	r18, Z+2	; 0x02
 380:	33 81       	ldd	r19, Z+3	; 0x03
 382:	f9 01       	movw	r30, r18
 384:	20 81       	ld	r18, Z
 386:	42 2f       	mov	r20, r18
 388:	29 81       	ldd	r18, Y+1	; 0x01
 38a:	3a 81       	ldd	r19, Y+2	; 0x02
 38c:	f9 01       	movw	r30, r18
 38e:	27 81       	ldd	r18, Z+7	; 0x07
 390:	20 95       	com	r18
 392:	24 23       	and	r18, r20
 394:	fc 01       	movw	r30, r24
 396:	20 83       	st	Z, r18

}
 398:	00 00       	nop
 39a:	0f 90       	pop	r0
 39c:	0f 90       	pop	r0
 39e:	0f 90       	pop	r0
 3a0:	0f 90       	pop	r0
 3a2:	df 91       	pop	r29
 3a4:	cf 91       	pop	r28
 3a6:	08 95       	ret

000003a8 <_ZN4GPIOD1Ev>:

GPIO::~GPIO() {}
 3a8:	cf 93       	push	r28
 3aa:	df 93       	push	r29
 3ac:	1f 92       	push	r1
 3ae:	1f 92       	push	r1
 3b0:	cd b7       	in	r28, 0x3d	; 61
 3b2:	de b7       	in	r29, 0x3e	; 62
 3b4:	9a 83       	std	Y+2, r25	; 0x02
 3b6:	89 83       	std	Y+1, r24	; 0x01
 3b8:	00 00       	nop
 3ba:	0f 90       	pop	r0
 3bc:	0f 90       	pop	r0
 3be:	df 91       	pop	r29
 3c0:	cf 91       	pop	r28
 3c2:	08 95       	ret

000003c4 <_ZN4GPIO3setEb>:
bool GPIO::get() {
	return (bool) _pin & _bit;
}


void GPIO::set(bool val) {
 3c4:	cf 93       	push	r28
 3c6:	df 93       	push	r29
 3c8:	00 d0       	rcall	.+0      	; 0x3ca <_ZN4GPIO3setEb+0x6>
 3ca:	cd b7       	in	r28, 0x3d	; 61
 3cc:	de b7       	in	r29, 0x3e	; 62
 3ce:	9a 83       	std	Y+2, r25	; 0x02
 3d0:	89 83       	std	Y+1, r24	; 0x01
 3d2:	6b 83       	std	Y+3, r22	; 0x03
	if (val)
 3d4:	8b 81       	ldd	r24, Y+3	; 0x03
 3d6:	88 23       	and	r24, r24
 3d8:	a1 f0       	breq	.+40     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
		*_port |= _bit;
 3da:	89 81       	ldd	r24, Y+1	; 0x01
 3dc:	9a 81       	ldd	r25, Y+2	; 0x02
 3de:	fc 01       	movw	r30, r24
 3e0:	84 81       	ldd	r24, Z+4	; 0x04
 3e2:	95 81       	ldd	r25, Z+5	; 0x05
 3e4:	29 81       	ldd	r18, Y+1	; 0x01
 3e6:	3a 81       	ldd	r19, Y+2	; 0x02
 3e8:	f9 01       	movw	r30, r18
 3ea:	24 81       	ldd	r18, Z+4	; 0x04
 3ec:	35 81       	ldd	r19, Z+5	; 0x05
 3ee:	f9 01       	movw	r30, r18
 3f0:	40 81       	ld	r20, Z
 3f2:	29 81       	ldd	r18, Y+1	; 0x01
 3f4:	3a 81       	ldd	r19, Y+2	; 0x02
 3f6:	f9 01       	movw	r30, r18
 3f8:	27 81       	ldd	r18, Z+7	; 0x07
 3fa:	24 2b       	or	r18, r20
 3fc:	fc 01       	movw	r30, r24
 3fe:	20 83       	st	Z, r18
	else
		*_port &= ~_bit;
}
 400:	15 c0       	rjmp	.+42     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>

void GPIO::set(bool val) {
	if (val)
		*_port |= _bit;
	else
		*_port &= ~_bit;
 402:	89 81       	ldd	r24, Y+1	; 0x01
 404:	9a 81       	ldd	r25, Y+2	; 0x02
 406:	fc 01       	movw	r30, r24
 408:	84 81       	ldd	r24, Z+4	; 0x04
 40a:	95 81       	ldd	r25, Z+5	; 0x05
 40c:	29 81       	ldd	r18, Y+1	; 0x01
 40e:	3a 81       	ldd	r19, Y+2	; 0x02
 410:	f9 01       	movw	r30, r18
 412:	24 81       	ldd	r18, Z+4	; 0x04
 414:	35 81       	ldd	r19, Z+5	; 0x05
 416:	f9 01       	movw	r30, r18
 418:	20 81       	ld	r18, Z
 41a:	42 2f       	mov	r20, r18
 41c:	29 81       	ldd	r18, Y+1	; 0x01
 41e:	3a 81       	ldd	r19, Y+2	; 0x02
 420:	f9 01       	movw	r30, r18
 422:	27 81       	ldd	r18, Z+7	; 0x07
 424:	20 95       	com	r18
 426:	24 23       	and	r18, r20
 428:	fc 01       	movw	r30, r24
 42a:	20 83       	st	Z, r18
}
 42c:	00 00       	nop
 42e:	0f 90       	pop	r0
 430:	0f 90       	pop	r0
 432:	0f 90       	pop	r0
 434:	df 91       	pop	r29
 436:	cf 91       	pop	r28
 438:	08 95       	ret

0000043a <_ZN4GPIO5clearEv>:

void GPIO::clear() {
 43a:	cf 93       	push	r28
 43c:	df 93       	push	r29
 43e:	1f 92       	push	r1
 440:	1f 92       	push	r1
 442:	cd b7       	in	r28, 0x3d	; 61
 444:	de b7       	in	r29, 0x3e	; 62
 446:	9a 83       	std	Y+2, r25	; 0x02
 448:	89 83       	std	Y+1, r24	; 0x01
	this->set(0);
 44a:	89 81       	ldd	r24, Y+1	; 0x01
 44c:	9a 81       	ldd	r25, Y+2	; 0x02
 44e:	60 e0       	ldi	r22, 0x00	; 0
 450:	b9 df       	rcall	.-142    	; 0x3c4 <_ZN4GPIO3setEb>
}
 452:	00 00       	nop
 454:	0f 90       	pop	r0
 456:	0f 90       	pop	r0
 458:	df 91       	pop	r29
 45a:	cf 91       	pop	r28
 45c:	08 95       	ret

0000045e <_ZN4GPIO6toggleEv>:

void GPIO::toggle() {
 45e:	cf 93       	push	r28
 460:	df 93       	push	r29
 462:	1f 92       	push	r1
 464:	1f 92       	push	r1
 466:	cd b7       	in	r28, 0x3d	; 61
 468:	de b7       	in	r29, 0x3e	; 62
 46a:	9a 83       	std	Y+2, r25	; 0x02
 46c:	89 83       	std	Y+1, r24	; 0x01
	*_pin = _bit;
 46e:	89 81       	ldd	r24, Y+1	; 0x01
 470:	9a 81       	ldd	r25, Y+2	; 0x02
 472:	fc 01       	movw	r30, r24
 474:	80 81       	ld	r24, Z
 476:	91 81       	ldd	r25, Z+1	; 0x01
 478:	29 81       	ldd	r18, Y+1	; 0x01
 47a:	3a 81       	ldd	r19, Y+2	; 0x02
 47c:	f9 01       	movw	r30, r18
 47e:	27 81       	ldd	r18, Z+7	; 0x07
 480:	fc 01       	movw	r30, r24
 482:	20 83       	st	Z, r18
}
 484:	00 00       	nop
 486:	0f 90       	pop	r0
 488:	0f 90       	pop	r0
 48a:	df 91       	pop	r29
 48c:	cf 91       	pop	r28
 48e:	08 95       	ret

00000490 <main>:

//Adicionar LED
GPIO led4(4, GPIO::OUTPUT);		//PG5
GPIO led6(6, GPIO::OUTPUT);		//PH0

int main(void){
 490:	cf 93       	push	r28
 492:	df 93       	push	r29
 494:	cd b7       	in	r28, 0x3d	; 61
 496:	de b7       	in	r29, 0x3e	; 62
 498:	aa 97       	sbiw	r28, 0x2a	; 42
 49a:	0f b6       	in	r0, 0x3f	; 63
 49c:	f8 94       	cli
 49e:	de bf       	out	0x3e, r29	; 62
 4a0:	0f be       	out	0x3f, r0	; 63
 4a2:	cd bf       	out	0x3d, r28	; 61

	UCSR0B = 0;
 4a4:	81 ec       	ldi	r24, 0xC1	; 193
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	fc 01       	movw	r30, r24
 4aa:	10 82       	st	Z, r1

	led0.set(1);
 4ac:	61 e0       	ldi	r22, 0x01	; 1
 4ae:	80 e0       	ldi	r24, 0x00	; 0
 4b0:	92 e0       	ldi	r25, 0x02	; 2
 4b2:	88 df       	rcall	.-240    	; 0x3c4 <_ZN4GPIO3setEb>
	led1.set(1);
 4b4:	61 e0       	ldi	r22, 0x01	; 1
 4b6:	88 e0       	ldi	r24, 0x08	; 8
 4b8:	92 e0       	ldi	r25, 0x02	; 2
	led6.clear();
 4ba:	84 df       	rcall	.-248    	; 0x3c4 <_ZN4GPIO3setEb>
 4bc:	80 e2       	ldi	r24, 0x20	; 32
 4be:	92 e0       	ldi	r25, 0x02	; 2
	led4.clear();
 4c0:	bc df       	rcall	.-136    	; 0x43a <_ZN4GPIO5clearEv>
 4c2:	88 e1       	ldi	r24, 0x18	; 24
 4c4:	92 e0       	ldi	r25, 0x02	; 2
	led13.clear();
 4c6:	b9 df       	rcall	.-142    	; 0x43a <_ZN4GPIO5clearEv>
 4c8:	80 e1       	ldi	r24, 0x10	; 16
 4ca:	92 e0       	ldi	r25, 0x02	; 2
 4cc:	b6 df       	rcall	.-148    	; 0x43a <_ZN4GPIO5clearEv>
 4ce:	80 e0       	ldi	r24, 0x00	; 0
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	aa e7       	ldi	r26, 0x7A	; 122
 4d4:	b4 e4       	ldi	r27, 0x44	; 68
 4d6:	8d 83       	std	Y+5, r24	; 0x05
 4d8:	9e 83       	std	Y+6, r25	; 0x06
 4da:	af 83       	std	Y+7, r26	; 0x07
 4dc:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 4de:	20 e0       	ldi	r18, 0x00	; 0
 4e0:	30 e0       	ldi	r19, 0x00	; 0
 4e2:	4a e7       	ldi	r20, 0x7A	; 122
 4e4:	55 e4       	ldi	r21, 0x45	; 69
 4e6:	6d 81       	ldd	r22, Y+5	; 0x05
 4e8:	7e 81       	ldd	r23, Y+6	; 0x06
 4ea:	8f 81       	ldd	r24, Y+7	; 0x07
 4ec:	98 85       	ldd	r25, Y+8	; 0x08
 4ee:	3e d2       	rcall	.+1148   	; 0x96c <__mulsf3>
 4f0:	dc 01       	movw	r26, r24
 4f2:	cb 01       	movw	r24, r22
 4f4:	8f 8b       	std	Y+23, r24	; 0x17
 4f6:	98 8f       	std	Y+24, r25	; 0x18
 4f8:	a9 8f       	std	Y+25, r26	; 0x19
 4fa:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
 4fc:	20 e0       	ldi	r18, 0x00	; 0
 4fe:	30 e0       	ldi	r19, 0x00	; 0
 500:	40 e8       	ldi	r20, 0x80	; 128
 502:	5f e3       	ldi	r21, 0x3F	; 63
 504:	6f 89       	ldd	r22, Y+23	; 0x17
 506:	78 8d       	ldd	r23, Y+24	; 0x18
 508:	89 8d       	ldd	r24, Y+25	; 0x19
 50a:	9a 8d       	ldd	r25, Y+26	; 0x1a
 50c:	ae d1       	rcall	.+860    	; 0x86a <__cmpsf2>
 50e:	88 23       	and	r24, r24
 510:	2c f4       	brge	.+10     	; 0x51c <main+0x8c>
		__ticks = 1;
 512:	81 e0       	ldi	r24, 0x01	; 1
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	9c 8f       	std	Y+28, r25	; 0x1c
 518:	8b 8f       	std	Y+27, r24	; 0x1b
 51a:	3a c0       	rjmp	.+116    	; 0x590 <main+0x100>
	else if (__tmp > 65535)
 51c:	20 e0       	ldi	r18, 0x00	; 0
 51e:	3f ef       	ldi	r19, 0xFF	; 255
 520:	4f e7       	ldi	r20, 0x7F	; 127
 522:	57 e4       	ldi	r21, 0x47	; 71
 524:	6f 89       	ldd	r22, Y+23	; 0x17
 526:	78 8d       	ldd	r23, Y+24	; 0x18
 528:	89 8d       	ldd	r24, Y+25	; 0x19
 52a:	9a 8d       	ldd	r25, Y+26	; 0x1a
 52c:	1b d2       	rcall	.+1078   	; 0x964 <__gesf2>
 52e:	18 16       	cp	r1, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 530:	34 f5       	brge	.+76     	; 0x57e <main+0xee>
 532:	20 e0       	ldi	r18, 0x00	; 0
 534:	30 e0       	ldi	r19, 0x00	; 0
 536:	40 e2       	ldi	r20, 0x20	; 32
 538:	51 e4       	ldi	r21, 0x41	; 65
 53a:	6d 81       	ldd	r22, Y+5	; 0x05
 53c:	7e 81       	ldd	r23, Y+6	; 0x06
 53e:	8f 81       	ldd	r24, Y+7	; 0x07
 540:	98 85       	ldd	r25, Y+8	; 0x08
 542:	14 d2       	rcall	.+1064   	; 0x96c <__mulsf3>
 544:	dc 01       	movw	r26, r24
 546:	cb 01       	movw	r24, r22
 548:	bc 01       	movw	r22, r24
 54a:	cd 01       	movw	r24, r26
 54c:	92 d1       	rcall	.+804    	; 0x872 <__fixunssfsi>
 54e:	dc 01       	movw	r26, r24
 550:	cb 01       	movw	r24, r22
 552:	9c 8f       	std	Y+28, r25	; 0x1c
 554:	8b 8f       	std	Y+27, r24	; 0x1b
		while(__ticks)
 556:	8b 8d       	ldd	r24, Y+27	; 0x1b
 558:	9c 8d       	ldd	r25, Y+28	; 0x1c
 55a:	89 2b       	or	r24, r25
 55c:	19 f1       	breq	.+70     	; 0x5a4 <main+0x114>
 55e:	80 e9       	ldi	r24, 0x90	; 144
 560:	91 e0       	ldi	r25, 0x01	; 1
 562:	9e 8f       	std	Y+30, r25	; 0x1e
 564:	8d 8f       	std	Y+29, r24	; 0x1d
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 566:	8d 8d       	ldd	r24, Y+29	; 0x1d
 568:	9e 8d       	ldd	r25, Y+30	; 0x1e
 56a:	01 97       	sbiw	r24, 0x01	; 1
 56c:	f1 f7       	brne	.-4      	; 0x56a <main+0xda>
 56e:	9e 8f       	std	Y+30, r25	; 0x1e
 570:	8d 8f       	std	Y+29, r24	; 0x1d
 572:	8b 8d       	ldd	r24, Y+27	; 0x1b
 574:	9c 8d       	ldd	r25, Y+28	; 0x1c
 576:	01 97       	sbiw	r24, 0x01	; 1
 578:	9c 8f       	std	Y+28, r25	; 0x1c
 57a:	8b 8f       	std	Y+27, r24	; 0x1b
 57c:	ec cf       	rjmp	.-40     	; 0x556 <main+0xc6>
 57e:	6f 89       	ldd	r22, Y+23	; 0x17
 580:	78 8d       	ldd	r23, Y+24	; 0x18
 582:	89 8d       	ldd	r24, Y+25	; 0x19
 584:	9a 8d       	ldd	r25, Y+26	; 0x1a
 586:	75 d1       	rcall	.+746    	; 0x872 <__fixunssfsi>
 588:	dc 01       	movw	r26, r24
 58a:	cb 01       	movw	r24, r22
 58c:	9c 8f       	std	Y+28, r25	; 0x1c
 58e:	8b 8f       	std	Y+27, r24	; 0x1b
 590:	8b 8d       	ldd	r24, Y+27	; 0x1b
 592:	9c 8d       	ldd	r25, Y+28	; 0x1c
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 594:	98 a3       	std	Y+32, r25	; 0x20
 596:	8f 8f       	std	Y+31, r24	; 0x1f
 598:	8f 8d       	ldd	r24, Y+31	; 0x1f
 59a:	98 a1       	ldd	r25, Y+32	; 0x20
 59c:	01 97       	sbiw	r24, 0x01	; 1
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 59e:	f1 f7       	brne	.-4      	; 0x59c <main+0x10c>
 5a0:	98 a3       	std	Y+32, r25	; 0x20
 5a2:	8f 8f       	std	Y+31, r24	; 0x1f
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 5a4:	80 e0       	ldi	r24, 0x00	; 0
 5a6:	92 e0       	ldi	r25, 0x02	; 2
 5a8:	48 df       	rcall	.-368    	; 0x43a <_ZN4GPIO5clearEv>
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 5aa:	88 e0       	ldi	r24, 0x08	; 8
 5ac:	92 e0       	ldi	r25, 0x02	; 2
 5ae:	45 df       	rcall	.-374    	; 0x43a <_ZN4GPIO5clearEv>
 5b0:	61 e0       	ldi	r22, 0x01	; 1
 5b2:	80 e2       	ldi	r24, 0x20	; 32
  POSSIBILITY OF SUCH DAMAGE. */
 5b4:	92 e0       	ldi	r25, 0x02	; 2
 5b6:	06 df       	rcall	.-500    	; 0x3c4 <_ZN4GPIO3setEb>
 5b8:	61 e0       	ldi	r22, 0x01	; 1
 5ba:	88 e1       	ldi	r24, 0x18	; 24
 5bc:	92 e0       	ldi	r25, 0x02	; 2

 5be:	02 df       	rcall	.-508    	; 0x3c4 <_ZN4GPIO3setEb>
 5c0:	61 e0       	ldi	r22, 0x01	; 1
 5c2:	80 e1       	ldi	r24, 0x10	; 16
 5c4:	92 e0       	ldi	r25, 0x02	; 2
 5c6:	fe de       	rcall	.-516    	; 0x3c4 <_ZN4GPIO3setEb>
 5c8:	80 e0       	ldi	r24, 0x00	; 0
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	aa e7       	ldi	r26, 0x7A	; 122
 5ce:	b4 e4       	ldi	r27, 0x44	; 68
 5d0:	89 87       	std	Y+9, r24	; 0x09
 5d2:	9a 87       	std	Y+10, r25	; 0x0a
 5d4:	ab 87       	std	Y+11, r26	; 0x0b
 5d6:	bc 87       	std	Y+12, r27	; 0x0c
 5d8:	20 e0       	ldi	r18, 0x00	; 0
 5da:	30 e0       	ldi	r19, 0x00	; 0
 5dc:	4a e7       	ldi	r20, 0x7A	; 122
 5de:	55 e4       	ldi	r21, 0x45	; 69
 5e0:	69 85       	ldd	r22, Y+9	; 0x09
 5e2:	7a 85       	ldd	r23, Y+10	; 0x0a
 5e4:	8b 85       	ldd	r24, Y+11	; 0x0b
 5e6:	9c 85       	ldd	r25, Y+12	; 0x0c
 5e8:	c1 d1       	rcall	.+898    	; 0x96c <__mulsf3>
 5ea:	dc 01       	movw	r26, r24
 5ec:	cb 01       	movw	r24, r22
 5ee:	8d 87       	std	Y+13, r24	; 0x0d
 5f0:	9e 87       	std	Y+14, r25	; 0x0e
 5f2:	af 87       	std	Y+15, r26	; 0x0f
 5f4:	b8 8b       	std	Y+16, r27	; 0x10
 5f6:	20 e0       	ldi	r18, 0x00	; 0
 5f8:	30 e0       	ldi	r19, 0x00	; 0
 5fa:	40 e8       	ldi	r20, 0x80	; 128
 5fc:	5f e3       	ldi	r21, 0x3F	; 63
 5fe:	6d 85       	ldd	r22, Y+13	; 0x0d
 600:	7e 85       	ldd	r23, Y+14	; 0x0e
 602:	8f 85       	ldd	r24, Y+15	; 0x0f
 604:	98 89       	ldd	r25, Y+16	; 0x10
 606:	31 d1       	rcall	.+610    	; 0x86a <__cmpsf2>
 608:	88 23       	and	r24, r24
 60a:	2c f4       	brge	.+10     	; 0x616 <main+0x186>
 60c:	81 e0       	ldi	r24, 0x01	; 1
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	9a 8b       	std	Y+18, r25	; 0x12
 612:	89 8b       	std	Y+17, r24	; 0x11
 614:	3a c0       	rjmp	.+116    	; 0x68a <main+0x1fa>
 616:	20 e0       	ldi	r18, 0x00	; 0
 618:	3f ef       	ldi	r19, 0xFF	; 255
 61a:	4f e7       	ldi	r20, 0x7F	; 127
 61c:	57 e4       	ldi	r21, 0x47	; 71
 61e:	6d 85       	ldd	r22, Y+13	; 0x0d
 620:	7e 85       	ldd	r23, Y+14	; 0x0e
 622:	8f 85       	ldd	r24, Y+15	; 0x0f
 624:	98 89       	ldd	r25, Y+16	; 0x10
 626:	9e d1       	rcall	.+828    	; 0x964 <__gesf2>
 628:	18 16       	cp	r1, r24
 62a:	34 f5       	brge	.+76     	; 0x678 <main+0x1e8>
 62c:	20 e0       	ldi	r18, 0x00	; 0
 62e:	30 e0       	ldi	r19, 0x00	; 0
 630:	40 e2       	ldi	r20, 0x20	; 32
 632:	51 e4       	ldi	r21, 0x41	; 65
 634:	69 85       	ldd	r22, Y+9	; 0x09
 636:	7a 85       	ldd	r23, Y+10	; 0x0a
 638:	8b 85       	ldd	r24, Y+11	; 0x0b
 63a:	9c 85       	ldd	r25, Y+12	; 0x0c
 63c:	97 d1       	rcall	.+814    	; 0x96c <__mulsf3>
 63e:	dc 01       	movw	r26, r24
 640:	cb 01       	movw	r24, r22
 642:	bc 01       	movw	r22, r24
 644:	cd 01       	movw	r24, r26
 646:	15 d1       	rcall	.+554    	; 0x872 <__fixunssfsi>
 648:	dc 01       	movw	r26, r24
 64a:	cb 01       	movw	r24, r22
 64c:	9a 8b       	std	Y+18, r25	; 0x12
 64e:	89 8b       	std	Y+17, r24	; 0x11
 650:	89 89       	ldd	r24, Y+17	; 0x11
 652:	9a 89       	ldd	r25, Y+18	; 0x12
 654:	89 2b       	or	r24, r25
 656:	19 f1       	breq	.+70     	; 0x69e <main+0x20e>
 658:	80 e9       	ldi	r24, 0x90	; 144
 65a:	91 e0       	ldi	r25, 0x01	; 1
 65c:	9c 8b       	std	Y+20, r25	; 0x14
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 65e:	8b 8b       	std	Y+19, r24	; 0x13
 660:	8b 89       	ldd	r24, Y+19	; 0x13
 662:	9c 89       	ldd	r25, Y+20	; 0x14
 664:	01 97       	sbiw	r24, 0x01	; 1
 666:	f1 f7       	brne	.-4      	; 0x664 <main+0x1d4>
 668:	9c 8b       	std	Y+20, r25	; 0x14
 66a:	8b 8b       	std	Y+19, r24	; 0x13
 66c:	89 89       	ldd	r24, Y+17	; 0x11
 66e:	9a 89       	ldd	r25, Y+18	; 0x12
 670:	01 97       	sbiw	r24, 0x01	; 1
 672:	9a 8b       	std	Y+18, r25	; 0x12
 674:	89 8b       	std	Y+17, r24	; 0x11
 676:	ec cf       	rjmp	.-40     	; 0x650 <main+0x1c0>
 678:	6d 85       	ldd	r22, Y+13	; 0x0d
 67a:	7e 85       	ldd	r23, Y+14	; 0x0e
 67c:	8f 85       	ldd	r24, Y+15	; 0x0f
 67e:	98 89       	ldd	r25, Y+16	; 0x10
 680:	f8 d0       	rcall	.+496    	; 0x872 <__fixunssfsi>
 682:	dc 01       	movw	r26, r24
 684:	cb 01       	movw	r24, r22
 686:	9a 8b       	std	Y+18, r25	; 0x12
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 688:	89 8b       	std	Y+17, r24	; 0x11
 68a:	89 89       	ldd	r24, Y+17	; 0x11
 68c:	9a 89       	ldd	r25, Y+18	; 0x12
 68e:	9e 8b       	std	Y+22, r25	; 0x16
 690:	8d 8b       	std	Y+21, r24	; 0x15
 692:	8d 89       	ldd	r24, Y+21	; 0x15
  POSSIBILITY OF SUCH DAMAGE. */

/* $Id$ */

#ifndef _UTIL_DELAY_BASIC_H_
#define _UTIL_DELAY_BASIC_H_ 1
 694:	9e 89       	ldd	r25, Y+22	; 0x16
 696:	01 97       	sbiw	r24, 0x01	; 1
 698:	f1 f7       	brne	.-4      	; 0x696 <main+0x206>
 69a:	9e 8b       	std	Y+22, r25	; 0x16

 69c:	8d 8b       	std	Y+21, r24	; 0x15
 69e:	80 e0       	ldi	r24, 0x00	; 0
 6a0:	92 e0       	ldi	r25, 0x02	; 2
 6a2:	dd de       	rcall	.-582    	; 0x45e <_ZN4GPIO6toggleEv>
#include <inttypes.h>
 6a4:	88 e0       	ldi	r24, 0x08	; 8
 6a6:	92 e0       	ldi	r25, 0x02	; 2
 6a8:	da de       	rcall	.-588    	; 0x45e <_ZN4GPIO6toggleEv>

 6aa:	80 e2       	ldi	r24, 0x20	; 32
 6ac:	92 e0       	ldi	r25, 0x02	; 2
 6ae:	d7 de       	rcall	.-594    	; 0x45e <_ZN4GPIO6toggleEv>
 6b0:	88 e1       	ldi	r24, 0x18	; 24
#if !defined(__DOXYGEN__)
 6b2:	92 e0       	ldi	r25, 0x02	; 2
 6b4:	d4 de       	rcall	.-600    	; 0x45e <_ZN4GPIO6toggleEv>
 6b6:	80 e1       	ldi	r24, 0x10	; 16
 6b8:	92 e0       	ldi	r25, 0x02	; 2
 6ba:	d1 de       	rcall	.-606    	; 0x45e <_ZN4GPIO6toggleEv>
 6bc:	80 e0       	ldi	r24, 0x00	; 0
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	aa e7       	ldi	r26, 0x7A	; 122
 6c2:	b4 e4       	ldi	r27, 0x44	; 68
 6c4:	89 83       	std	Y+1, r24	; 0x01
 6c6:	9a 83       	std	Y+2, r25	; 0x02
 6c8:	ab 83       	std	Y+3, r26	; 0x03
 6ca:	bc 83       	std	Y+4, r27	; 0x04
 6cc:	20 e0       	ldi	r18, 0x00	; 0
 6ce:	30 e0       	ldi	r19, 0x00	; 0
 6d0:	4a e7       	ldi	r20, 0x7A	; 122
 6d2:	55 e4       	ldi	r21, 0x45	; 69
 6d4:	69 81       	ldd	r22, Y+1	; 0x01
 6d6:	7a 81       	ldd	r23, Y+2	; 0x02
 6d8:	8b 81       	ldd	r24, Y+3	; 0x03
 6da:	9c 81       	ldd	r25, Y+4	; 0x04
 6dc:	47 d1       	rcall	.+654    	; 0x96c <__mulsf3>
 6de:	dc 01       	movw	r26, r24
 6e0:	cb 01       	movw	r24, r22
 6e2:	89 a3       	std	Y+33, r24	; 0x21
 6e4:	9a a3       	std	Y+34, r25	; 0x22
 6e6:	ab a3       	std	Y+35, r26	; 0x23
 6e8:	bc a3       	std	Y+36, r27	; 0x24
 6ea:	20 e0       	ldi	r18, 0x00	; 0
 6ec:	30 e0       	ldi	r19, 0x00	; 0
 6ee:	40 e8       	ldi	r20, 0x80	; 128
 6f0:	5f e3       	ldi	r21, 0x3F	; 63
 6f2:	69 a1       	ldd	r22, Y+33	; 0x21
 6f4:	7a a1       	ldd	r23, Y+34	; 0x22
 6f6:	8b a1       	ldd	r24, Y+35	; 0x23
 6f8:	9c a1       	ldd	r25, Y+36	; 0x24
 6fa:	b7 d0       	rcall	.+366    	; 0x86a <__cmpsf2>
 6fc:	88 23       	and	r24, r24
 6fe:	2c f4       	brge	.+10     	; 0x70a <main+0x27a>
 700:	81 e0       	ldi	r24, 0x01	; 1
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	9e a3       	std	Y+38, r25	; 0x26
 706:	8d a3       	std	Y+37, r24	; 0x25
 708:	3b c0       	rjmp	.+118    	; 0x780 <main+0x2f0>
 70a:	20 e0       	ldi	r18, 0x00	; 0
 70c:	3f ef       	ldi	r19, 0xFF	; 255
 70e:	4f e7       	ldi	r20, 0x7F	; 127
 710:	57 e4       	ldi	r21, 0x47	; 71
 712:	69 a1       	ldd	r22, Y+33	; 0x21
 714:	7a a1       	ldd	r23, Y+34	; 0x22
 716:	8b a1       	ldd	r24, Y+35	; 0x23
 718:	9c a1       	ldd	r25, Y+36	; 0x24
 71a:	24 d1       	rcall	.+584    	; 0x964 <__gesf2>
 71c:	18 16       	cp	r1, r24
 71e:	3c f5       	brge	.+78     	; 0x76e <main+0x2de>
 720:	20 e0       	ldi	r18, 0x00	; 0
 722:	30 e0       	ldi	r19, 0x00	; 0
 724:	40 e2       	ldi	r20, 0x20	; 32
 726:	51 e4       	ldi	r21, 0x41	; 65
 728:	69 81       	ldd	r22, Y+1	; 0x01
 72a:	7a 81       	ldd	r23, Y+2	; 0x02
 72c:	8b 81       	ldd	r24, Y+3	; 0x03
 72e:	9c 81       	ldd	r25, Y+4	; 0x04
 730:	1d d1       	rcall	.+570    	; 0x96c <__mulsf3>
 732:	dc 01       	movw	r26, r24
 734:	cb 01       	movw	r24, r22
 736:	bc 01       	movw	r22, r24
 738:	cd 01       	movw	r24, r26
 73a:	9b d0       	rcall	.+310    	; 0x872 <__fixunssfsi>
 73c:	dc 01       	movw	r26, r24
 73e:	cb 01       	movw	r24, r22
 740:	9e a3       	std	Y+38, r25	; 0x26
 742:	8d a3       	std	Y+37, r24	; 0x25
 744:	8d a1       	ldd	r24, Y+37	; 0x25
 746:	9e a1       	ldd	r25, Y+38	; 0x26
 748:	89 2b       	or	r24, r25
 74a:	09 f4       	brne	.+2      	; 0x74e <main+0x2be>
 74c:	a8 cf       	rjmp	.-176    	; 0x69e <main+0x20e>
 74e:	80 e9       	ldi	r24, 0x90	; 144
 750:	91 e0       	ldi	r25, 0x01	; 1
 752:	98 a7       	std	Y+40, r25	; 0x28
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 754:	8f a3       	std	Y+39, r24	; 0x27
 756:	8f a1       	ldd	r24, Y+39	; 0x27
 758:	98 a5       	ldd	r25, Y+40	; 0x28
 75a:	01 97       	sbiw	r24, 0x01	; 1
 75c:	f1 f7       	brne	.-4      	; 0x75a <main+0x2ca>
 75e:	98 a7       	std	Y+40, r25	; 0x28
 760:	8f a3       	std	Y+39, r24	; 0x27
 762:	8d a1       	ldd	r24, Y+37	; 0x25
 764:	9e a1       	ldd	r25, Y+38	; 0x26
 766:	01 97       	sbiw	r24, 0x01	; 1
 768:	9e a3       	std	Y+38, r25	; 0x26
 76a:	8d a3       	std	Y+37, r24	; 0x25
 76c:	eb cf       	rjmp	.-42     	; 0x744 <main+0x2b4>
 76e:	69 a1       	ldd	r22, Y+33	; 0x21
 770:	7a a1       	ldd	r23, Y+34	; 0x22
 772:	8b a1       	ldd	r24, Y+35	; 0x23
 774:	9c a1       	ldd	r25, Y+36	; 0x24
 776:	7d d0       	rcall	.+250    	; 0x872 <__fixunssfsi>
 778:	dc 01       	movw	r26, r24
 77a:	cb 01       	movw	r24, r22
 77c:	9e a3       	std	Y+38, r25	; 0x26
 77e:	8d a3       	std	Y+37, r24	; 0x25
 780:	8d a1       	ldd	r24, Y+37	; 0x25
 782:	9e a1       	ldd	r25, Y+38	; 0x26
 784:	9a a7       	std	Y+42, r25	; 0x2a
 786:	89 a7       	std	Y+41, r24	; 0x29
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 788:	89 a5       	ldd	r24, Y+41	; 0x29
 78a:	9a a5       	ldd	r25, Y+42	; 0x2a
 78c:	01 97       	sbiw	r24, 0x01	; 1
 78e:	f1 f7       	brne	.-4      	; 0x78c <main+0x2fc>
 790:	9a a7       	std	Y+42, r25	; 0x2a
 792:	89 a7       	std	Y+41, r24	; 0x29
	led6.set(1);
	led4.set(1);
	led13.set(1);
	_delay_ms(1000);

	while (1){
 794:	84 cf       	rjmp	.-248    	; 0x69e <main+0x20e>

00000796 <_Z41__static_initialization_and_destruction_0ii>:
		led4.toggle();
		led13.toggle();
		_delay_ms(1000);
	}

}
 796:	cf 93       	push	r28
 798:	df 93       	push	r29
 79a:	00 d0       	rcall	.+0      	; 0x79c <_Z41__static_initialization_and_destruction_0ii+0x6>
 79c:	1f 92       	push	r1
 79e:	cd b7       	in	r28, 0x3d	; 61
 7a0:	de b7       	in	r29, 0x3e	; 62
 7a2:	9a 83       	std	Y+2, r25	; 0x02
 7a4:	89 83       	std	Y+1, r24	; 0x01
 7a6:	7c 83       	std	Y+4, r23	; 0x04
 7a8:	6b 83       	std	Y+3, r22	; 0x03
 7aa:	89 81       	ldd	r24, Y+1	; 0x01
 7ac:	9a 81       	ldd	r25, Y+2	; 0x02
 7ae:	01 97       	sbiw	r24, 0x01	; 1
 7b0:	e9 f4       	brne	.+58     	; 0x7ec <_Z41__static_initialization_and_destruction_0ii+0x56>
 7b2:	8b 81       	ldd	r24, Y+3	; 0x03
 7b4:	9c 81       	ldd	r25, Y+4	; 0x04
 7b6:	01 96       	adiw	r24, 0x01	; 1
 7b8:	c9 f4       	brne	.+50     	; 0x7ec <_Z41__static_initialization_and_destruction_0ii+0x56>
#include <util/delay.h>
#include "GPIO.h"


//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
 7ba:	41 e0       	ldi	r20, 0x01	; 1
 7bc:	60 e0       	ldi	r22, 0x00	; 0
 7be:	80 e0       	ldi	r24, 0x00	; 0
 7c0:	92 e0       	ldi	r25, 0x02	; 2
 7c2:	c2 dc       	rcall	.-1660   	; 0x148 <_ZN4GPIOC1EhNS_15PortDirection_tE>
GPIO led1(1, GPIO::OUTPUT);		//PE1
 7c4:	41 e0       	ldi	r20, 0x01	; 1
 7c6:	61 e0       	ldi	r22, 0x01	; 1
 7c8:	88 e0       	ldi	r24, 0x08	; 8
 7ca:	92 e0       	ldi	r25, 0x02	; 2
 7cc:	bd dc       	rcall	.-1670   	; 0x148 <_ZN4GPIOC1EhNS_15PortDirection_tE>

//LEDS PLACA (acende com '1')
GPIO led13(13, GPIO::OUTPUT);	//PB7
 7ce:	41 e0       	ldi	r20, 0x01	; 1
 7d0:	6d e0       	ldi	r22, 0x0D	; 13
 7d2:	80 e1       	ldi	r24, 0x10	; 16
 7d4:	92 e0       	ldi	r25, 0x02	; 2
 7d6:	b8 dc       	rcall	.-1680   	; 0x148 <_ZN4GPIOC1EhNS_15PortDirection_tE>

//Adicionar LED
GPIO led4(4, GPIO::OUTPUT);		//PG5
 7d8:	41 e0       	ldi	r20, 0x01	; 1
 7da:	64 e0       	ldi	r22, 0x04	; 4
 7dc:	88 e1       	ldi	r24, 0x18	; 24
 7de:	92 e0       	ldi	r25, 0x02	; 2
GPIO led6(6, GPIO::OUTPUT);		//PH0
 7e0:	b3 dc       	rcall	.-1690   	; 0x148 <_ZN4GPIOC1EhNS_15PortDirection_tE>
 7e2:	41 e0       	ldi	r20, 0x01	; 1
 7e4:	66 e0       	ldi	r22, 0x06	; 6
 7e6:	80 e2       	ldi	r24, 0x20	; 32
 7e8:	92 e0       	ldi	r25, 0x02	; 2
 7ea:	ae dc       	rcall	.-1700   	; 0x148 <_ZN4GPIOC1EhNS_15PortDirection_tE>
 7ec:	89 81       	ldd	r24, Y+1	; 0x01
 7ee:	9a 81       	ldd	r25, Y+2	; 0x02
 7f0:	89 2b       	or	r24, r25
 7f2:	99 f4       	brne	.+38     	; 0x81a <_Z41__static_initialization_and_destruction_0ii+0x84>
 7f4:	8b 81       	ldd	r24, Y+3	; 0x03
 7f6:	9c 81       	ldd	r25, Y+4	; 0x04
 7f8:	01 96       	adiw	r24, 0x01	; 1
 7fa:	79 f4       	brne	.+30     	; 0x81a <_Z41__static_initialization_and_destruction_0ii+0x84>
 7fc:	80 e2       	ldi	r24, 0x20	; 32

//LEDS PLACA (acende com '1')
GPIO led13(13, GPIO::OUTPUT);	//PB7

//Adicionar LED
GPIO led4(4, GPIO::OUTPUT);		//PG5
 7fe:	92 e0       	ldi	r25, 0x02	; 2
 800:	d3 dd       	rcall	.-1114   	; 0x3a8 <_ZN4GPIOD1Ev>
 802:	88 e1       	ldi	r24, 0x18	; 24
//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
GPIO led1(1, GPIO::OUTPUT);		//PE1

//LEDS PLACA (acende com '1')
GPIO led13(13, GPIO::OUTPUT);	//PB7
 804:	92 e0       	ldi	r25, 0x02	; 2
 806:	d0 dd       	rcall	.-1120   	; 0x3a8 <_ZN4GPIOD1Ev>
 808:	80 e1       	ldi	r24, 0x10	; 16
#include "GPIO.h"


//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
GPIO led1(1, GPIO::OUTPUT);		//PE1
 80a:	92 e0       	ldi	r25, 0x02	; 2
 80c:	cd dd       	rcall	.-1126   	; 0x3a8 <_ZN4GPIOD1Ev>
 80e:	88 e0       	ldi	r24, 0x08	; 8
 810:	92 e0       	ldi	r25, 0x02	; 2
#include <util/delay.h>
#include "GPIO.h"


//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
 812:	ca dd       	rcall	.-1132   	; 0x3a8 <_ZN4GPIOD1Ev>
 814:	80 e0       	ldi	r24, 0x00	; 0
 816:	92 e0       	ldi	r25, 0x02	; 2
 818:	c7 dd       	rcall	.-1138   	; 0x3a8 <_ZN4GPIOD1Ev>
		led4.toggle();
		led13.toggle();
		_delay_ms(1000);
	}

}
 81a:	00 00       	nop
 81c:	0f 90       	pop	r0
 81e:	0f 90       	pop	r0
 820:	0f 90       	pop	r0
 822:	0f 90       	pop	r0
 824:	df 91       	pop	r29
 826:	cf 91       	pop	r28
 828:	08 95       	ret

0000082a <_GLOBAL__sub_I_led0>:
 82a:	cf 93       	push	r28
 82c:	df 93       	push	r29
 82e:	cd b7       	in	r28, 0x3d	; 61
 830:	de b7       	in	r29, 0x3e	; 62
 832:	6f ef       	ldi	r22, 0xFF	; 255
 834:	7f ef       	ldi	r23, 0xFF	; 255
 836:	81 e0       	ldi	r24, 0x01	; 1
 838:	90 e0       	ldi	r25, 0x00	; 0
 83a:	ad df       	rcall	.-166    	; 0x796 <_Z41__static_initialization_and_destruction_0ii>
 83c:	df 91       	pop	r29
 83e:	cf 91       	pop	r28
 840:	08 95       	ret

00000842 <_GLOBAL__sub_D_led0>:
 842:	cf 93       	push	r28
 844:	df 93       	push	r29
 846:	cd b7       	in	r28, 0x3d	; 61
 848:	de b7       	in	r29, 0x3e	; 62
 84a:	6f ef       	ldi	r22, 0xFF	; 255
 84c:	7f ef       	ldi	r23, 0xFF	; 255
 84e:	80 e0       	ldi	r24, 0x00	; 0
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	a1 df       	rcall	.-190    	; 0x796 <_Z41__static_initialization_and_destruction_0ii>
 854:	df 91       	pop	r29
 856:	cf 91       	pop	r28
 858:	08 95       	ret

0000085a <__tablejump2__>:
 85a:	ee 0f       	add	r30, r30
 85c:	ff 1f       	adc	r31, r31
 85e:	88 1f       	adc	r24, r24
 860:	8b bf       	out	0x3b, r24	; 59
 862:	07 90       	elpm	r0, Z+
 864:	f6 91       	elpm	r31, Z
 866:	e0 2d       	mov	r30, r0
 868:	19 94       	eijmp

0000086a <__cmpsf2>:
 86a:	2f d0       	rcall	.+94     	; 0x8ca <__fp_cmp>
 86c:	08 f4       	brcc	.+2      	; 0x870 <__cmpsf2+0x6>
 86e:	81 e0       	ldi	r24, 0x01	; 1
 870:	08 95       	ret

00000872 <__fixunssfsi>:
 872:	57 d0       	rcall	.+174    	; 0x922 <__fp_splitA>
 874:	88 f0       	brcs	.+34     	; 0x898 <__fixunssfsi+0x26>
 876:	9f 57       	subi	r25, 0x7F	; 127
 878:	90 f0       	brcs	.+36     	; 0x89e <__fixunssfsi+0x2c>
 87a:	b9 2f       	mov	r27, r25
 87c:	99 27       	eor	r25, r25
 87e:	b7 51       	subi	r27, 0x17	; 23
 880:	a0 f0       	brcs	.+40     	; 0x8aa <__fixunssfsi+0x38>
 882:	d1 f0       	breq	.+52     	; 0x8b8 <__fixunssfsi+0x46>
 884:	66 0f       	add	r22, r22
 886:	77 1f       	adc	r23, r23
 888:	88 1f       	adc	r24, r24
 88a:	99 1f       	adc	r25, r25
 88c:	1a f0       	brmi	.+6      	; 0x894 <__fixunssfsi+0x22>
 88e:	ba 95       	dec	r27
 890:	c9 f7       	brne	.-14     	; 0x884 <__fixunssfsi+0x12>
 892:	12 c0       	rjmp	.+36     	; 0x8b8 <__fixunssfsi+0x46>
 894:	b1 30       	cpi	r27, 0x01	; 1
 896:	81 f0       	breq	.+32     	; 0x8b8 <__fixunssfsi+0x46>
 898:	5e d0       	rcall	.+188    	; 0x956 <__fp_zero>
 89a:	b1 e0       	ldi	r27, 0x01	; 1
 89c:	08 95       	ret
 89e:	5b c0       	rjmp	.+182    	; 0x956 <__fp_zero>
 8a0:	67 2f       	mov	r22, r23
 8a2:	78 2f       	mov	r23, r24
 8a4:	88 27       	eor	r24, r24
 8a6:	b8 5f       	subi	r27, 0xF8	; 248
 8a8:	39 f0       	breq	.+14     	; 0x8b8 <__fixunssfsi+0x46>
 8aa:	b9 3f       	cpi	r27, 0xF9	; 249
 8ac:	cc f3       	brlt	.-14     	; 0x8a0 <__fixunssfsi+0x2e>
 8ae:	86 95       	lsr	r24
 8b0:	77 95       	ror	r23
 8b2:	67 95       	ror	r22
 8b4:	b3 95       	inc	r27
 8b6:	d9 f7       	brne	.-10     	; 0x8ae <__fixunssfsi+0x3c>
 8b8:	3e f4       	brtc	.+14     	; 0x8c8 <__fixunssfsi+0x56>
 8ba:	90 95       	com	r25
 8bc:	80 95       	com	r24
 8be:	70 95       	com	r23
 8c0:	61 95       	neg	r22
 8c2:	7f 4f       	sbci	r23, 0xFF	; 255
 8c4:	8f 4f       	sbci	r24, 0xFF	; 255
 8c6:	9f 4f       	sbci	r25, 0xFF	; 255
 8c8:	08 95       	ret

000008ca <__fp_cmp>:
 8ca:	99 0f       	add	r25, r25
 8cc:	00 08       	sbc	r0, r0
 8ce:	55 0f       	add	r21, r21
 8d0:	aa 0b       	sbc	r26, r26
 8d2:	e0 e8       	ldi	r30, 0x80	; 128
 8d4:	fe ef       	ldi	r31, 0xFE	; 254
 8d6:	16 16       	cp	r1, r22
 8d8:	17 06       	cpc	r1, r23
 8da:	e8 07       	cpc	r30, r24
 8dc:	f9 07       	cpc	r31, r25
 8de:	c0 f0       	brcs	.+48     	; 0x910 <__fp_cmp+0x46>
 8e0:	12 16       	cp	r1, r18
 8e2:	13 06       	cpc	r1, r19
 8e4:	e4 07       	cpc	r30, r20
 8e6:	f5 07       	cpc	r31, r21
 8e8:	98 f0       	brcs	.+38     	; 0x910 <__fp_cmp+0x46>
 8ea:	62 1b       	sub	r22, r18
 8ec:	73 0b       	sbc	r23, r19
 8ee:	84 0b       	sbc	r24, r20
 8f0:	95 0b       	sbc	r25, r21
 8f2:	39 f4       	brne	.+14     	; 0x902 <__fp_cmp+0x38>
 8f4:	0a 26       	eor	r0, r26
 8f6:	61 f0       	breq	.+24     	; 0x910 <__fp_cmp+0x46>
 8f8:	23 2b       	or	r18, r19
 8fa:	24 2b       	or	r18, r20
 8fc:	25 2b       	or	r18, r21
 8fe:	21 f4       	brne	.+8      	; 0x908 <__fp_cmp+0x3e>
 900:	08 95       	ret
 902:	0a 26       	eor	r0, r26
 904:	09 f4       	brne	.+2      	; 0x908 <__fp_cmp+0x3e>
 906:	a1 40       	sbci	r26, 0x01	; 1
 908:	a6 95       	lsr	r26
 90a:	8f ef       	ldi	r24, 0xFF	; 255
 90c:	81 1d       	adc	r24, r1
 90e:	81 1d       	adc	r24, r1
 910:	08 95       	ret

00000912 <__fp_split3>:
 912:	57 fd       	sbrc	r21, 7
 914:	90 58       	subi	r25, 0x80	; 128
 916:	44 0f       	add	r20, r20
 918:	55 1f       	adc	r21, r21
 91a:	59 f0       	breq	.+22     	; 0x932 <__fp_splitA+0x10>
 91c:	5f 3f       	cpi	r21, 0xFF	; 255
 91e:	71 f0       	breq	.+28     	; 0x93c <__fp_splitA+0x1a>
 920:	47 95       	ror	r20

00000922 <__fp_splitA>:
 922:	88 0f       	add	r24, r24
 924:	97 fb       	bst	r25, 7
 926:	99 1f       	adc	r25, r25
 928:	61 f0       	breq	.+24     	; 0x942 <__fp_splitA+0x20>
 92a:	9f 3f       	cpi	r25, 0xFF	; 255
 92c:	79 f0       	breq	.+30     	; 0x94c <__fp_splitA+0x2a>
 92e:	87 95       	ror	r24
 930:	08 95       	ret
 932:	12 16       	cp	r1, r18
 934:	13 06       	cpc	r1, r19
 936:	14 06       	cpc	r1, r20
 938:	55 1f       	adc	r21, r21
 93a:	f2 cf       	rjmp	.-28     	; 0x920 <__fp_split3+0xe>
 93c:	46 95       	lsr	r20
 93e:	f1 df       	rcall	.-30     	; 0x922 <__fp_splitA>
 940:	08 c0       	rjmp	.+16     	; 0x952 <__fp_splitA+0x30>
 942:	16 16       	cp	r1, r22
 944:	17 06       	cpc	r1, r23
 946:	18 06       	cpc	r1, r24
 948:	99 1f       	adc	r25, r25
 94a:	f1 cf       	rjmp	.-30     	; 0x92e <__fp_splitA+0xc>
 94c:	86 95       	lsr	r24
 94e:	71 05       	cpc	r23, r1
 950:	61 05       	cpc	r22, r1
 952:	08 94       	sec
 954:	08 95       	ret

00000956 <__fp_zero>:
 956:	e8 94       	clt

00000958 <__fp_szero>:
 958:	bb 27       	eor	r27, r27
 95a:	66 27       	eor	r22, r22
 95c:	77 27       	eor	r23, r23
 95e:	cb 01       	movw	r24, r22
 960:	97 f9       	bld	r25, 7
 962:	08 95       	ret

00000964 <__gesf2>:
 964:	b2 df       	rcall	.-156    	; 0x8ca <__fp_cmp>
 966:	08 f4       	brcc	.+2      	; 0x96a <__gesf2+0x6>
 968:	8f ef       	ldi	r24, 0xFF	; 255
 96a:	08 95       	ret

0000096c <__mulsf3>:
 96c:	0b d0       	rcall	.+22     	; 0x984 <__mulsf3x>
 96e:	78 c0       	rjmp	.+240    	; 0xa60 <__fp_round>
 970:	69 d0       	rcall	.+210    	; 0xa44 <__fp_pscA>
 972:	28 f0       	brcs	.+10     	; 0x97e <__mulsf3+0x12>
 974:	6e d0       	rcall	.+220    	; 0xa52 <__fp_pscB>
 976:	18 f0       	brcs	.+6      	; 0x97e <__mulsf3+0x12>
 978:	95 23       	and	r25, r21
 97a:	09 f0       	breq	.+2      	; 0x97e <__mulsf3+0x12>
 97c:	5a c0       	rjmp	.+180    	; 0xa32 <__fp_inf>
 97e:	5f c0       	rjmp	.+190    	; 0xa3e <__fp_nan>
 980:	11 24       	eor	r1, r1
 982:	ea cf       	rjmp	.-44     	; 0x958 <__fp_szero>

00000984 <__mulsf3x>:
 984:	c6 df       	rcall	.-116    	; 0x912 <__fp_split3>
 986:	a0 f3       	brcs	.-24     	; 0x970 <__mulsf3+0x4>

00000988 <__mulsf3_pse>:
 988:	95 9f       	mul	r25, r21
 98a:	d1 f3       	breq	.-12     	; 0x980 <__mulsf3+0x14>
 98c:	95 0f       	add	r25, r21
 98e:	50 e0       	ldi	r21, 0x00	; 0
 990:	55 1f       	adc	r21, r21
 992:	62 9f       	mul	r22, r18
 994:	f0 01       	movw	r30, r0
 996:	72 9f       	mul	r23, r18
 998:	bb 27       	eor	r27, r27
 99a:	f0 0d       	add	r31, r0
 99c:	b1 1d       	adc	r27, r1
 99e:	63 9f       	mul	r22, r19
 9a0:	aa 27       	eor	r26, r26
 9a2:	f0 0d       	add	r31, r0
 9a4:	b1 1d       	adc	r27, r1
 9a6:	aa 1f       	adc	r26, r26
 9a8:	64 9f       	mul	r22, r20
 9aa:	66 27       	eor	r22, r22
 9ac:	b0 0d       	add	r27, r0
 9ae:	a1 1d       	adc	r26, r1
 9b0:	66 1f       	adc	r22, r22
 9b2:	82 9f       	mul	r24, r18
 9b4:	22 27       	eor	r18, r18
 9b6:	b0 0d       	add	r27, r0
 9b8:	a1 1d       	adc	r26, r1
 9ba:	62 1f       	adc	r22, r18
 9bc:	73 9f       	mul	r23, r19
 9be:	b0 0d       	add	r27, r0
 9c0:	a1 1d       	adc	r26, r1
 9c2:	62 1f       	adc	r22, r18
 9c4:	83 9f       	mul	r24, r19
 9c6:	a0 0d       	add	r26, r0
 9c8:	61 1d       	adc	r22, r1
 9ca:	22 1f       	adc	r18, r18
 9cc:	74 9f       	mul	r23, r20
 9ce:	33 27       	eor	r19, r19
 9d0:	a0 0d       	add	r26, r0
 9d2:	61 1d       	adc	r22, r1
 9d4:	23 1f       	adc	r18, r19
 9d6:	84 9f       	mul	r24, r20
 9d8:	60 0d       	add	r22, r0
 9da:	21 1d       	adc	r18, r1
 9dc:	82 2f       	mov	r24, r18
 9de:	76 2f       	mov	r23, r22
 9e0:	6a 2f       	mov	r22, r26
 9e2:	11 24       	eor	r1, r1
 9e4:	9f 57       	subi	r25, 0x7F	; 127
 9e6:	50 40       	sbci	r21, 0x00	; 0
 9e8:	8a f0       	brmi	.+34     	; 0xa0c <__mulsf3_pse+0x84>
 9ea:	e1 f0       	breq	.+56     	; 0xa24 <__mulsf3_pse+0x9c>
 9ec:	88 23       	and	r24, r24
 9ee:	4a f0       	brmi	.+18     	; 0xa02 <__mulsf3_pse+0x7a>
 9f0:	ee 0f       	add	r30, r30
 9f2:	ff 1f       	adc	r31, r31
 9f4:	bb 1f       	adc	r27, r27
 9f6:	66 1f       	adc	r22, r22
 9f8:	77 1f       	adc	r23, r23
 9fa:	88 1f       	adc	r24, r24
 9fc:	91 50       	subi	r25, 0x01	; 1
 9fe:	50 40       	sbci	r21, 0x00	; 0
 a00:	a9 f7       	brne	.-22     	; 0x9ec <__mulsf3_pse+0x64>
 a02:	9e 3f       	cpi	r25, 0xFE	; 254
 a04:	51 05       	cpc	r21, r1
 a06:	70 f0       	brcs	.+28     	; 0xa24 <__mulsf3_pse+0x9c>
 a08:	14 c0       	rjmp	.+40     	; 0xa32 <__fp_inf>
 a0a:	a6 cf       	rjmp	.-180    	; 0x958 <__fp_szero>
 a0c:	5f 3f       	cpi	r21, 0xFF	; 255
 a0e:	ec f3       	brlt	.-6      	; 0xa0a <__mulsf3_pse+0x82>
 a10:	98 3e       	cpi	r25, 0xE8	; 232
 a12:	dc f3       	brlt	.-10     	; 0xa0a <__mulsf3_pse+0x82>
 a14:	86 95       	lsr	r24
 a16:	77 95       	ror	r23
 a18:	67 95       	ror	r22
 a1a:	b7 95       	ror	r27
 a1c:	f7 95       	ror	r31
 a1e:	e7 95       	ror	r30
 a20:	9f 5f       	subi	r25, 0xFF	; 255
 a22:	c1 f7       	brne	.-16     	; 0xa14 <__mulsf3_pse+0x8c>
 a24:	fe 2b       	or	r31, r30
 a26:	88 0f       	add	r24, r24
 a28:	91 1d       	adc	r25, r1
 a2a:	96 95       	lsr	r25
 a2c:	87 95       	ror	r24
 a2e:	97 f9       	bld	r25, 7
 a30:	08 95       	ret

00000a32 <__fp_inf>:
 a32:	97 f9       	bld	r25, 7
 a34:	9f 67       	ori	r25, 0x7F	; 127
 a36:	80 e8       	ldi	r24, 0x80	; 128
 a38:	70 e0       	ldi	r23, 0x00	; 0
 a3a:	60 e0       	ldi	r22, 0x00	; 0
 a3c:	08 95       	ret

00000a3e <__fp_nan>:
 a3e:	9f ef       	ldi	r25, 0xFF	; 255
 a40:	80 ec       	ldi	r24, 0xC0	; 192
 a42:	08 95       	ret

00000a44 <__fp_pscA>:
 a44:	00 24       	eor	r0, r0
 a46:	0a 94       	dec	r0
 a48:	16 16       	cp	r1, r22
 a4a:	17 06       	cpc	r1, r23
 a4c:	18 06       	cpc	r1, r24
 a4e:	09 06       	cpc	r0, r25
 a50:	08 95       	ret

00000a52 <__fp_pscB>:
 a52:	00 24       	eor	r0, r0
 a54:	0a 94       	dec	r0
 a56:	12 16       	cp	r1, r18
 a58:	13 06       	cpc	r1, r19
 a5a:	14 06       	cpc	r1, r20
 a5c:	05 06       	cpc	r0, r21
 a5e:	08 95       	ret

00000a60 <__fp_round>:
 a60:	09 2e       	mov	r0, r25
 a62:	03 94       	inc	r0
 a64:	00 0c       	add	r0, r0
 a66:	11 f4       	brne	.+4      	; 0xa6c <__fp_round+0xc>
 a68:	88 23       	and	r24, r24
 a6a:	52 f0       	brmi	.+20     	; 0xa80 <__fp_round+0x20>
 a6c:	bb 0f       	add	r27, r27
 a6e:	40 f4       	brcc	.+16     	; 0xa80 <__fp_round+0x20>
 a70:	bf 2b       	or	r27, r31
 a72:	11 f4       	brne	.+4      	; 0xa78 <__fp_round+0x18>
 a74:	60 ff       	sbrs	r22, 0
 a76:	04 c0       	rjmp	.+8      	; 0xa80 <__fp_round+0x20>
 a78:	6f 5f       	subi	r22, 0xFF	; 255
 a7a:	7f 4f       	sbci	r23, 0xFF	; 255
 a7c:	8f 4f       	sbci	r24, 0xFF	; 255
 a7e:	9f 4f       	sbci	r25, 0xFF	; 255
 a80:	08 95       	ret

00000a82 <__do_global_dtors>:
 a82:	10 e0       	ldi	r17, 0x00	; 0
 a84:	c1 e8       	ldi	r28, 0x81	; 129
 a86:	d0 e0       	ldi	r29, 0x00	; 0
 a88:	00 e0       	ldi	r16, 0x00	; 0
 a8a:	05 c0       	rjmp	.+10     	; 0xa96 <__do_global_dtors+0x14>
 a8c:	80 2f       	mov	r24, r16
 a8e:	fe 01       	movw	r30, r28
 a90:	e4 de       	rcall	.-568    	; 0x85a <__tablejump2__>
 a92:	21 96       	adiw	r28, 0x01	; 1
 a94:	01 1d       	adc	r16, r1
 a96:	c2 38       	cpi	r28, 0x82	; 130
 a98:	d1 07       	cpc	r29, r17
 a9a:	80 e0       	ldi	r24, 0x00	; 0
 a9c:	08 07       	cpc	r16, r24
 a9e:	b1 f7       	brne	.-20     	; 0xa8c <__do_global_dtors+0xa>
 aa0:	f8 94       	cli

00000aa2 <__stop_program>:
 aa2:	ff cf       	rjmp	.-2      	; 0xaa2 <__stop_program>
